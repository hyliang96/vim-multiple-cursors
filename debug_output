
 start 【】
 mode:【 to 】
 start error 【】
 error2 【】
 after error 【】
 brefore retry : s:char=【】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【v】
 catch <a-up>0
 before_getchar【v】
【after get esc】
 after_if【v】
 before_exit【v】
 after_exit【v】
is_special_key = 0
 before start_loop【v】
 after start_loop【v】
 type(c)=【0】
 c =【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【v】
 type(c)=【0】
 c =【0】
 before 【v<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to n
before mc-input3: from v to n
before mc-input4: from v to n
after mc-input: from v to n
 start 【v】
 mode:【v to n】
 start error 【v】
 error2 【v】
 after error 【v】
 brefore retry : s:char=【v】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【a】
 catch <a-up>0
 before_getchar【a】
【after get esc】
 after_if【a】
 before_exit【a】
 after_exit【a】
is_special_key = 0
 before start_loop【a】
 after start_loop【a】
 type(c)=【0】
 c =【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from n to 
before apply【a】
 type(c)=【0】
 c =【0】
 before 【a<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from n to 
before mc-detect: from n to 
after mc-detect: from n to 
before mc-input: from n to 
before mc-input2: from n to i
before mc-input3: from n to i
before mc-input4: from n to i
after mc-input: from n to i
 start 【a】
 mode:【n to i】
 start error 【a】
 error2 【a】
 after error 【a】
 brefore retry : s:char=【a】
 s:retry_keys=【】
 s:saved_keys=【<80><fd>RUndojoin】
 before_if【<80><fd>RUndojoin】
 catch <a-up>0
 before_getchar【<80><fd>RUndojoin】
【l:map】<Plug>Undojoin * <C-G>u <BS>
【after get esc】
 after_if【<80><fd>RUndojoin】
 before_exit【<80><fd>RUndojoin】
 after_exit【<80><fd>RUndojoin】
is_special_key = 0
 before start_loop【<80><fd>RUndojoin】
 after start_loop【<80><fd>RUndojoin】
 type(c)=【0】
 c =【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 c =【0】
 before 【<80><fd>RUndojoin<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【<80><fd>RUndojoin】
 mode:【i to i】
 start error 【<80><fd>RUndojoin】
 error2 【<80><fd>RUndojoin】
 after error 【<80><fd>RUndojoin】
 brefore retry : s:char=【<80><fd>RUndojoin】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【^\】
 catch <a-up>0
 before_getchar【^\】
【after get esc】
 after_if【^\】
 before_exit【^\】
 after_exit【^\】
is_special_key = 0
 before start_loop【^\】
 after start_loop【^\】
 type(c)=【0】
 c =【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 c =【0】
 before 【^\<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
invalid input: from mode i to 
now mode: n
after invalid input: from mode i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【^\】
 mode:【i to i】
 start error 【^\】
 error2 【^\】
 can't be replayed in 1cursors 【^\】
 after error 【^\】
 brefore retry : s:char=【^\】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【≈】
 catch <a-up>0
 before_getchar【≈】
【after get esc】
 after_if【≈】
 before_exit【≈】