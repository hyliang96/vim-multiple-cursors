
 start 【】
 mode:【 to 】
 start error 【】
 error2 【】
 after error 【】
 brefore retry : s:char=【】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【^D】
 before_getchar【^D】
【l:map】<C-D>       * :<C-U>stopinsert<CR>gv:<C-U>call multiple_cursors#new("v", 0)<CR>
【after get esc】
 after_if【^D】
 before_exit【^D】
 after_exit【^D】
is_special_key = 1
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-new-word)】
 feedkesys s:saved_keys=【】
 start 【^D】
 mode:【v to 】
 start error 【^D】
 error2 【^D】
 after error 【^D】
 brefore retry : s:char=【^D】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【v】
 before_getchar【v】
【after get esc】
 after_if【v】
 before_exit【v】
 after_exit【v】
is_special_key = 0
 before start_loop【v】
 after start_loop【v】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【v】
 type(c)=【0】
 before 【v<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to n
before mc-input3: from v to n
after mc-input5: from v to n
after mc-input: from v to n
before apply2 from v to n
before apply【v】
 type(c)=【0】
 before 【v<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to n
before mc-detect: from v to n
after mc-detect: from v to n
before mc-input: from v to n
before mc-input2: from v to n
before mc-input3: from v to n
before mc-input4: from v to n
after mc-input: from v to n
 start 【v】
 mode:【v to n】
 start error 【v】
 error2 【v】
 after error 【v】
 brefore retry : s:char=【v】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【a】
 before_getchar【a】
【after get esc】
 after_if【a】
 before_exit【a】
 after_exit【a】
is_special_key = 0
 before start_loop【a】
 after start_loop【a】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from n to 
before apply【a】
 type(c)=【0】
 before 【a<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from n to 
before mc-detect: from n to 
after mc-detect: from n to 
before mc-input: from n to 
before mc-input2: from n to i
before mc-input3: from n to i
after mc-input5: from n to i
after mc-input: from n to i
before apply1 from n to i
 type(c)=【0】
 before 【a<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from n to i
before mc-detect: from n to i
after mc-detect: from n to i
before mc-input: from n to i
before mc-input2: from n to i
before mc-input3: from n to i
before mc-input4: from n to i
after mc-input: from n to i
 start 【a】
 mode:【n to i】
 start error 【a】
 error2 【a】
 after error 【a】
 brefore retry : s:char=【a】
 s:retry_keys=【】
 s:saved_keys=【 】
 before_if【 】
 before_getchar【 】
【l:map】<Space>     * <C-G>u<Space>
【after get esc】
 after_if【 】
 before_exit【 】
 after_exit【 】
is_special_key = 0
 before start_loop【 】
 after start_loop【 】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【 <80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【 <80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【 】
 mode:【i to i】
 start error 【 】
 error2 【 】
 after error 【 】
 brefore retry : s:char=【 】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【a】
 before_getchar【a】
【after get esc】
 after_if【a】
 before_exit【a】
 after_exit【a】
is_special_key = 0
 before start_loop【a】
 after start_loop【a】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【a<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【a<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【a】
 mode:【i to i】
 start error 【a】
 error2 【a】
 after error 【a】
 brefore retry : s:char=【a】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【s】
 before_getchar【s】
【after get esc】
 after_if【s】
 before_exit【s】
 after_exit【s】
is_special_key = 0
 before start_loop【s】
 after start_loop【s】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【s<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【s<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【s】
 mode:【i to i】
 start error 【s】
 error2 【s】
 after error 【s】
 brefore retry : s:char=【s】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【d】
 before_getchar【d】
【after get esc】
 after_if【d】
 before_exit【d】
 after_exit【d】
is_special_key = 0
 before start_loop【d】
 after start_loop【d】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【d<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【d<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【d】
 mode:【i to i】
 start error 【d】
 error2 【d】
 after error 【d】
 brefore retry : s:char=【d】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【^Z】
 before_getchar【^Z】
【l:map】<C-Z>       * <C-O>u
【after get esc】
 after_if【^Z】
 before_exit【^Z】
 after_exit【^Z】
is_special_key = 0
 before start_loop【^Z】
 after start_loop【^Z】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【^Z】
 mode:【i to i】
 start error 【^Z】
 error2 【^Z】
 after error 【^Z】
 brefore retry : s:char=【^Z】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【≈】
 before_getchar【≈】
【after get esc】
 after_if【≈】
 before_exit【≈】
 start 【】
 mode:【 to 】
 start error 【】
 error2 【】
 after error 【】
 brefore retry : s:char=【】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【^D】
 before_getchar【^D】
【l:map】<C-D>       * :<C-U>stopinsert<CR>gv:<C-U>call multiple_cursors#new("v", 0)<CR>
【after get esc】
 after_if【^D】
 before_exit【^D】
 after_exit【^D】
is_special_key = 1
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-new-word)】
 feedkesys s:saved_keys=【】
 start 【^D】
 mode:【v to 】
 start error 【^D】
 error2 【^D】
 after error 【^D】
 brefore retry : s:char=【^D】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【v】
 before_getchar【v】
【after get esc】
 after_if【v】
 before_exit【v】
 after_exit【v】
is_special_key = 0
 before start_loop【v】
 after start_loop【v】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【v】
 type(c)=【0】
 before 【v<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to n
before mc-input3: from v to n
after mc-input5: from v to n
after mc-input: from v to n
before apply2 from v to n
before apply【v】
 type(c)=【0】
 before 【v<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to n
before mc-detect: from v to n
after mc-detect: from v to n
before mc-input: from v to n
before mc-input2: from v to n
before mc-input3: from v to n
before mc-input4: from v to n
after mc-input: from v to n
 start 【v】
 mode:【v to n】
 start error 【v】
 error2 【v】
 after error 【v】
 brefore retry : s:char=【v】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【a】
 before_getchar【a】
【after get esc】
 after_if【a】
 before_exit【a】
 after_exit【a】
is_special_key = 0
 before start_loop【a】
 after start_loop【a】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from n to 
before apply【a】
 type(c)=【0】
 before 【a<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from n to 
before mc-detect: from n to 
after mc-detect: from n to 
before mc-input: from n to 
before mc-input2: from n to i
before mc-input3: from n to i
after mc-input5: from n to i
after mc-input: from n to i
before apply1 from n to i
 type(c)=【0】
 before 【a<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from n to i
before mc-detect: from n to i
after mc-detect: from n to i
before mc-input: from n to i
before mc-input2: from n to i
before mc-input3: from n to i
before mc-input4: from n to i
after mc-input: from n to i
 start 【a】
 mode:【n to i】
 start error 【a】
 error2 【a】
 after error 【a】
 brefore retry : s:char=【a】
 s:retry_keys=【】
 s:saved_keys=【<80><fd>Rundojoin】
 before_if【<80><fd>Rundojoin】
 before_getchar【<80><fd>Rundojoin】
【l:map】<Plug>undojoin * <C-G>u
【after get esc】
 after_if【<80><fd>Rundojoin】
 before_exit【<80><fd>Rundojoin】
 after_exit【<80><fd>Rundojoin】
is_special_key = 0
 before start_loop【<80><fd>Rundojoin】
 after start_loop【<80><fd>Rundojoin】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【<80><fd>Rundojoin<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【<80><fd>Rundojoin<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【<80><fd>Rundojoin】
 mode:【i to i】
 start error 【<80><fd>Rundojoin】
 error2 【<80><fd>Rundojoin】
 after error 【<80><fd>Rundojoin】
 brefore retry : s:char=【<80><fd>Rundojoin】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【p】
 before_getchar【p】
【after get esc】
 after_if【p】
 before_exit【p】
 after_exit【p】
is_special_key = 0
 before start_loop【p】
 after start_loop【p】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【p<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【p<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【p】
 mode:【i to i】
 start error 【p】
 error2 【p】
 after error 【p】
 brefore retry : s:char=【p】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【o】
 before_getchar【o】
【after get esc】
 after_if【o】
 before_exit【o】
 after_exit【o】
is_special_key = 0
 before start_loop【o】
 after start_loop【o】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【o<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【o<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【o】
 mode:【i to i】
 start error 【o】
 error2 【o】
 after error 【o】
 brefore retry : s:char=【o】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【d】
 before_getchar【d】
【after get esc】
 after_if【d】
 before_exit【d】
 after_exit【d】
is_special_key = 0
 before start_loop【d】
 after start_loop【d】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【d<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【d<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【d】
 mode:【i to i】
 start error 【d】
 error2 【d】
 after error 【d】
 brefore retry : s:char=【d】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【^Z】
 before_getchar【^Z】
【l:map】<C-Z>       * <C-O>u
【after get esc】
 after_if【^Z】
 before_exit【^Z】
 after_exit【^Z】
is_special_key = 0
 before start_loop【^Z】
 after start_loop【^Z】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
invalid input: from mode i to i
now mode: n
after invalid input: from mode i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【^Z】
 mode:【i to i】
 start error 【^Z】
 error2 【^Z】
 can't be replayed in 1cursors 【^Z】
 after error 【^Z】
 brefore retry : s:char=【^Z】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80><fd>,】
 before_getchar【<80><fd>,】
【l:map】<LeftMouse> * <C-O>:MarkClear<CR><LeftMouse>
【after get esc】
 after_if【<80><fd>,】
 before_exit【<80><fd>,】
 after_exit【<80><fd>,】
is_special_key = 0
 before start_loop【<80><fd>,】
 after start_loop【<80><fd>,】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【<80><fd>,<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【<80><fd>,<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【<80><fd>,】
 mode:【i to i】
 start error 【<80><fd>,】
 error2 【<80><fd>,】
 after error 【<80><fd>,】
 brefore retry : s:char=【<80><fd>,】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80><fd>.】
 before_getchar【<80><fd>.】
【l:map】<Plug>undojoin * <C-G>u
【after get esc】
 after_if【<80><fd>.】
 before_exit【<80><fd>.】
 after_exit【<80><fd>.】
is_special_key = 0
 before start_loop【<80><fd>.】
 after start_loop【<80><fd>.】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【<80><fd>.<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【<80><fd>.<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【<80><fd>.】
 mode:【i to i】
 start error 【<80><fd>.】
 error2 【<80><fd>.】
 after error 【<80><fd>.】
 brefore retry : s:char=【<80><fd>.】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【^W】
 before_getchar【^W】
【l:map】<C-W>       * <C-O>:q<CR>
【after get esc】
 after_if【^W】
 before_exit【^W】
 after_exit【^W】
is_special_key = 0
 before start_loop【^W】
 after start_loop【^W】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【^W<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
invalid input: from mode i to 
now mode: n
after invalid input: from mode i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【^W<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
invalid input: from mode i to i
now mode: n
after invalid input: from mode i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【^W】
 mode:【i to i】
 start error 【^W】
 error2 【^W】
 can't be replayed in 2cursors 【^W】
 after error 【^W】
 brefore retry : s:char=【^W】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【≈】
 before_getchar【≈】
【after get esc】
 after_if【≈】
 before_exit【≈】
 start 【】
 mode:【 to 】
 start error 【】
 error2 【】
 after error 【】
 brefore retry : s:char=【】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【^D】
 before_getchar【^D】
【l:map】<C-D>       * :<C-U>stopinsert<CR>gv:<C-U>call multiple_cursors#new("v", 0)<CR>
【after get esc】
 after_if【^D】
 before_exit【^D】
 after_exit【^D】
is_special_key = 1
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-new-word)】
 feedkesys s:saved_keys=【】
 start 【^D】
 mode:【v to 】
 start error 【^D】
 error2 【^D】
 after error 【^D】
 brefore retry : s:char=【^D】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【v】
 before_getchar【v】
【after get esc】
 after_if【v】
 before_exit【v】
 after_exit【v】
is_special_key = 0
 before start_loop【v】
 after start_loop【v】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【v】
 type(c)=【0】
 before 【v<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to n
before mc-input3: from v to n
after mc-input5: from v to n
after mc-input: from v to n
before apply2 from v to n
before apply【v】
 type(c)=【0】
 before 【v<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to n
before mc-detect: from v to n
after mc-detect: from v to n
before mc-input: from v to n
before mc-input2: from v to n
before mc-input3: from v to n
before mc-input4: from v to n
after mc-input: from v to n
 start 【v】
 mode:【v to n】
 start error 【v】
 error2 【v】
 after error 【v】
 brefore retry : s:char=【v】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【a】
 before_getchar【a】
【after get esc】
 after_if【a】
 before_exit【a】
 after_exit【a】
is_special_key = 0
 before start_loop【a】
 after start_loop【a】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from n to 
before apply【a】
 type(c)=【0】
 before 【a<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from n to 
before mc-detect: from n to 
after mc-detect: from n to 
before mc-input: from n to 
before mc-input2: from n to i
before mc-input3: from n to i
after mc-input5: from n to i
after mc-input: from n to i
before apply1 from n to i
 type(c)=【0】
 before 【a<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from n to i
before mc-detect: from n to i
after mc-detect: from n to i
before mc-input: from n to i
before mc-input2: from n to i
before mc-input3: from n to i
before mc-input4: from n to i
after mc-input: from n to i
 start 【a】
 mode:【n to i】
 start error 【a】
 error2 【a】
 after error 【a】
 brefore retry : s:char=【a】
 s:retry_keys=【】
 s:saved_keys=【<80><fd>Rundojoin】
 before_if【<80><fd>Rundojoin】
 before_getchar【<80><fd>Rundojoin】
【l:map】<Plug>undojoin * <C-G>u<Space>
【after get esc】
 after_if【<80><fd>Rundojoin】
 before_exit【<80><fd>Rundojoin】
 after_exit【<80><fd>Rundojoin】
is_special_key = 0
 before start_loop【<80><fd>Rundojoin】
 after start_loop【<80><fd>Rundojoin】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【<80><fd>Rundojoin<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【<80><fd>Rundojoin<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【<80><fd>Rundojoin】
 mode:【i to i】
 start error 【<80><fd>Rundojoin】
 error2 【<80><fd>Rundojoin】
 after error 【<80><fd>Rundojoin】
 brefore retry : s:char=【<80><fd>Rundojoin】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【a】
 before_getchar【a】
【after get esc】
 after_if【a】
 before_exit【a】
 after_exit【a】
is_special_key = 0
 before start_loop【a】
 after start_loop【a】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【a<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【a<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【a】
 mode:【i to i】
 start error 【a】
 error2 【a】
 after error 【a】
 brefore retry : s:char=【a】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【d】
 before_getchar【d】
【after get esc】
 after_if【d】
 before_exit【d】
 after_exit【d】
is_special_key = 0
 before start_loop【d】
 after start_loop【d】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【d<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【d<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【d】
 mode:【i to i】
 start error 【d】
 error2 【d】
 after error 【d】
 brefore retry : s:char=【d】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【s】
 before_getchar【s】
【after get esc】
 after_if【s】
 before_exit【s】
 after_exit【s】
is_special_key = 0
 before start_loop【s】
 after start_loop【s】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【s<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【s<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【s】
 mode:【i to i】
 start error 【s】
 error2 【s】
 after error 【s】
 brefore retry : s:char=【s】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【^Z】
 before_getchar【^Z】
【l:map】<C-Z>       * <C-O>u
【after get esc】
 after_if【^Z】
 before_exit【^Z】
 after_exit【^Z】
is_special_key = 0
 before start_loop【^Z】
 after start_loop【^Z】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【^Z】
 mode:【i to i】
 start error 【^Z】
 error2 【^Z】
 after error 【^Z】
 brefore retry : s:char=【^Z】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80><fd>,】
 before_getchar【<80><fd>,】
【l:map】<LeftMouse> * <C-O>:MarkClear<CR><LeftMouse>
【after get esc】
 after_if【<80><fd>,】
 before_exit【<80><fd>,】
 after_exit【<80><fd>,】
is_special_key = 0
 before start_loop【<80><fd>,】
 after start_loop【<80><fd>,】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【<80><fd>,<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【<80><fd>,<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【<80><fd>,】
 mode:【i to i】
 start error 【<80><fd>,】
 error2 【<80><fd>,】
 after error 【<80><fd>,】
 brefore retry : s:char=【<80><fd>,】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80><fd>.】
 before_getchar【<80><fd>.】
【l:map】<Plug>undojoin * <C-G>u<Space>
【after get esc】
 after_if【<80><fd>.】
 before_exit【<80><fd>.】
 after_exit【<80><fd>.】
is_special_key = 0
 before start_loop【<80><fd>.】
 after start_loop【<80><fd>.】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【<80><fd>.<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【<80><fd>.<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【<80><fd>.】
 mode:【i to i】
 start error 【<80><fd>.】
 error2 【<80><fd>.】
 after error 【<80><fd>.】
 brefore retry : s:char=【<80><fd>.】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80><fd>,】
 before_getchar【<80><fd>,】
【l:map】<LeftMouse> * <C-O>:MarkClear<CR><LeftMouse>
【after get esc】
 after_if【<80><fd>,】
 before_exit【<80><fd>,】
 after_exit【<80><fd>,】
is_special_key = 0
 before start_loop【<80><fd>,】
 after start_loop【<80><fd>,】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【<80><fd>,<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【<80><fd>,<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【<80><fd>,】
 mode:【i to i】
 start error 【<80><fd>,】
 error2 【<80><fd>,】
 after error 【<80><fd>,】
 brefore retry : s:char=【<80><fd>,】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80><fd>.】
 before_getchar【<80><fd>.】
【l:map】<Plug>undojoin * <C-G>u<Space>
【after get esc】
 after_if【<80><fd>.】
 before_exit【<80><fd>.】
 after_exit【<80><fd>.】
is_special_key = 0
 before start_loop【<80><fd>.】
 after start_loop【<80><fd>.】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【<80><fd>.<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【<80><fd>.<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【<80><fd>.】
 mode:【i to i】
 start error 【<80><fd>.】
 error2 【<80><fd>.】
 after error 【<80><fd>.】
 brefore retry : s:char=【<80><fd>.】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【≈】
 before_getchar【≈】
【after get esc】
 after_if【≈】
 before_exit【≈】
 start 【】
 mode:【 to 】
 start error 【】
 error2 【】
 after error 【】
 brefore retry : s:char=【】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【^D】
 before_getchar【^D】
【l:map】<C-D>       * :<C-U>stopinsert<CR>gv:<C-U>call multiple_cursors#new("v", 0)<CR>
【after get esc】
 after_if【^D】
 before_exit【^D】
 after_exit【^D】
is_special_key = 1
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-new-word)】
 feedkesys s:saved_keys=【】
 start 【^D】
 mode:【v to 】
 start error 【^D】
 error2 【^D】
 after error 【^D】
 brefore retry : s:char=【^D】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【v】
 before_getchar【v】
【after get esc】
 after_if【v】
 before_exit【v】
 after_exit【v】
is_special_key = 0
 before start_loop【v】
 after start_loop【v】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【v】
 type(c)=【0】
 before 【v<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to n
before mc-input3: from v to n
after mc-input5: from v to n
after mc-input: from v to n
before apply2 from v to n
before apply【v】
 type(c)=【0】
 before 【v<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to n
before mc-detect: from v to n
after mc-detect: from v to n
before mc-input: from v to n
before mc-input2: from v to n
before mc-input3: from v to n
before mc-input4: from v to n
after mc-input: from v to n
 start 【v】
 mode:【v to n】
 start error 【v】
 error2 【v】
 after error 【v】
 brefore retry : s:char=【v】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【a】
 before_getchar【a】
【after get esc】
 after_if【a】
 before_exit【a】
 after_exit【a】
is_special_key = 0
 before start_loop【a】
 after start_loop【a】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from n to 
before apply【a】
 type(c)=【0】
 before 【a<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from n to 
before mc-detect: from n to 
after mc-detect: from n to 
before mc-input: from n to 
before mc-input2: from n to i
before mc-input3: from n to i
after mc-input5: from n to i
after mc-input: from n to i
before apply1 from n to i
 type(c)=【0】
 before 【a<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from n to i
before mc-detect: from n to i
after mc-detect: from n to i
before mc-input: from n to i
before mc-input2: from n to i
before mc-input3: from n to i
before mc-input4: from n to i
after mc-input: from n to i
 start 【a】
 mode:【n to i】
 start error 【a】
 error2 【a】
 after error 【a】
 brefore retry : s:char=【a】
 s:retry_keys=【】
 s:saved_keys=【<80><fd>Rundojoin】
 before_if【<80><fd>Rundojoin】
 before_getchar【<80><fd>Rundojoin】
【l:map】<Plug>undojoin * <C-G>u <BS>
【after get esc】
 after_if【<80><fd>Rundojoin】
 before_exit【<80><fd>Rundojoin】
 after_exit【<80><fd>Rundojoin】
is_special_key = 0
 before start_loop【<80><fd>Rundojoin】
 after start_loop【<80><fd>Rundojoin】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【<80><fd>Rundojoin<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【<80><fd>Rundojoin<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【<80><fd>Rundojoin】
 mode:【i to i】
 start error 【<80><fd>Rundojoin】
 error2 【<80><fd>Rundojoin】
 after error 【<80><fd>Rundojoin】
 brefore retry : s:char=【<80><fd>Rundojoin】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【a】
 before_getchar【a】
【after get esc】
 after_if【a】
 before_exit【a】
 after_exit【a】
is_special_key = 0
 before start_loop【a】
 after start_loop【a】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【a<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【a<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【a】
 mode:【i to i】
 start error 【a】
 error2 【a】
 after error 【a】
 brefore retry : s:char=【a】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【d】
 before_getchar【d】
【after get esc】
 after_if【d】
 before_exit【d】
 after_exit【d】
is_special_key = 0
 before start_loop【d】
 after start_loop【d】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【d<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【d<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【d】
 mode:【i to i】
 start error 【d】
 error2 【d】
 after error 【d】
 brefore retry : s:char=【d】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【a】
 before_getchar【a】
【after get esc】
 after_if【a】
 before_exit【a】
 after_exit【a】
is_special_key = 0
 before start_loop【a】
 after start_loop【a】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【a<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【a<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【a】
 mode:【i to i】
 start error 【a】
 error2 【a】
 after error 【a】
 brefore retry : s:char=【a】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【s】
 before_getchar【s】
【after get esc】
 after_if【s】
 before_exit【s】
 after_exit【s】
is_special_key = 0
 before start_loop【s】
 after start_loop【s】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【s<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【s<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【s】
 mode:【i to i】
 start error 【s】
 error2 【s】
 after error 【s】
 brefore retry : s:char=【s】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【^Z】
 before_getchar【^Z】
【l:map】<C-Z>       * <C-O>u
【after get esc】
 after_if【^Z】
 before_exit【^Z】
 after_exit【^Z】
is_special_key = 0
 before start_loop【^Z】
 after start_loop【^Z】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【^Z】
 mode:【i to i】
 start error 【^Z】
 error2 【^Z】
 after error 【^Z】
 brefore retry : s:char=【^Z】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【a】
 before_getchar【a】
【after get esc】
 after_if【a】
 before_exit【a】
 after_exit【a】
is_special_key = 0
 before start_loop【a】
 after start_loop【a】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【a<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【a<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【a】
 mode:【i to i】
 start error 【a】
 error2 【a】
 after error 【a】
 brefore retry : s:char=【a】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【s】
 before_getchar【s】
【after get esc】
 after_if【s】
 before_exit【s】
 after_exit【s】
is_special_key = 0
 before start_loop【s】
 after start_loop【s】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【s<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【s<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【s】
 mode:【i to i】
 start error 【s】
 error2 【s】
 after error 【s】
 brefore retry : s:char=【s】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【d】
 before_getchar【d】
【after get esc】
 after_if【d】
 before_exit【d】
 after_exit【d】
is_special_key = 0
 before start_loop【d】
 after start_loop【d】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【d<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【d<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【d】
 mode:【i to i】
 start error 【d】
 error2 【d】
 after error 【d】
 brefore retry : s:char=【d】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【 】
 before_getchar【 】
【l:map】<Space>     * <C-G>u<Space>
【after get esc】
 after_if【 】
 before_exit【 】
 after_exit【 】
is_special_key = 0
 before start_loop【 】
 after start_loop【 】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【 <80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【 <80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【 】
 mode:【i to i】
 start error 【 】
 error2 【 】
 after error 【 】
 brefore retry : s:char=【 】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【a】
 before_getchar【a】
【after get esc】
 after_if【a】
 before_exit【a】
 after_exit【a】
is_special_key = 0
 before start_loop【a】
 after start_loop【a】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【a<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【a<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【a】
 mode:【i to i】
 start error 【a】
 error2 【a】
 after error 【a】
 brefore retry : s:char=【a】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【 】
 before_getchar【 】
【l:map】<Space>     * <C-G>u<Space>
【after get esc】
 after_if【 】
 before_exit【 】
 after_exit【 】
is_special_key = 0
 before start_loop【 】
 after start_loop【 】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【 <80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【 <80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【 】
 mode:【i to i】
 start error 【 】
 error2 【 】
 after error 【 】
 brefore retry : s:char=【 】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【d】
 before_getchar【d】
【after get esc】
 after_if【d】
 before_exit【d】
 after_exit【d】
is_special_key = 0
 before start_loop【d】
 after start_loop【d】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【d<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【d<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【d】
 mode:【i to i】
 start error 【d】
 error2 【d】
 after error 【d】
 brefore retry : s:char=【d】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【 】
 before_getchar【 】
【l:map】<Space>     * <C-G>u<Space>
【after get esc】
 after_if【 】
 before_exit【 】
 after_exit【 】
is_special_key = 0
 before start_loop【 】
 after start_loop【 】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【 <80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【 <80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【 】
 mode:【i to i】
 start error 【 】
 error2 【 】
 after error 【 】
 brefore retry : s:char=【 】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【q】
 before_getchar【q】
【after get esc】
 after_if【q】
 before_exit【q】
 after_exit【q】
is_special_key = 0
 before start_loop【q】
 after start_loop【q】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【q<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【q<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【q】
 mode:【i to i】
 start error 【q】
 error2 【q】
 after error 【q】
 brefore retry : s:char=【q】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【 】
 before_getchar【 】
【l:map】<Space>     * <C-G>u<Space>
【after get esc】
 after_if【 】
 before_exit【 】
 after_exit【 】
is_special_key = 0
 before start_loop【 】
 after start_loop【 】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【 <80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【 <80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【 】
 mode:【i to i】
 start error 【 】
 error2 【 】
 after error 【 】
 brefore retry : s:char=【 】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【d】
 before_getchar【d】
【after get esc】
 after_if【d】
 before_exit【d】
 after_exit【d】
is_special_key = 0
 before start_loop【d】
 after start_loop【d】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【d<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【d<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【d】
 mode:【i to i】
 start error 【d】
 error2 【d】
 after error 【d】
 brefore retry : s:char=【d】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【 】
 before_getchar【 】
【l:map】<Space>     * <C-G>u<Space>
【after get esc】
 after_if【 】
 before_exit【 】
 after_exit【 】
is_special_key = 0
 before start_loop【 】
 after start_loop【 】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【 <80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【 <80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【 】
 mode:【i to i】
 start error 【 】
 error2 【 】
 after error 【 】
 brefore retry : s:char=【 】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【a】
 before_getchar【a】
【after get esc】
 after_if【a】
 before_exit【a】
 after_exit【a】
is_special_key = 0
 before start_loop【a】
 after start_loop【a】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【a<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【a<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【a】
 mode:【i to i】
 start error 【a】
 error2 【a】
 after error 【a】
 brefore retry : s:char=【a】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【 】
 before_getchar【 】
【l:map】<Space>     * <C-G>u<Space>
【after get esc】
 after_if【 】
 before_exit【 】
 after_exit【 】
is_special_key = 0
 before start_loop【 】
 after start_loop【 】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【 <80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【 <80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【 】
 mode:【i to i】
 start error 【 】
 error2 【 】
 after error 【 】
 brefore retry : s:char=【 】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【^Z】
 before_getchar【^Z】
【l:map】<C-Z>       * <C-O>u
【after get esc】
 after_if【^Z】
 before_exit【^Z】
 after_exit【^Z】
is_special_key = 0
 before start_loop【^Z】
 after start_loop【^Z】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【^Z】
 mode:【i to i】
 start error 【^Z】
 error2 【^Z】
 after error 【^Z】
 brefore retry : s:char=【^Z】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【^Z】
 before_getchar【^Z】
【l:map】<C-Z>       * <C-O>u
【after get esc】
 after_if【^Z】
 before_exit【^Z】
 after_exit【^Z】
is_special_key = 0
 before start_loop【^Z】
 after start_loop【^Z】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【^Z】
 mode:【i to i】
 start error 【^Z】
 error2 【^Z】
 after error 【^Z】
 brefore retry : s:char=【^Z】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【^Z】
 before_getchar【^Z】
【l:map】<C-Z>       * <C-O>u
【after get esc】
 after_if【^Z】
 before_exit【^Z】
 after_exit【^Z】
is_special_key = 0
 before start_loop【^Z】
 after start_loop【^Z】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【^Z】
 mode:【i to i】
 start error 【^Z】
 error2 【^Z】
 after error 【^Z】
 brefore retry : s:char=【^Z】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【^Z】
 before_getchar【^Z】
【l:map】<C-Z>       * <C-O>u
【after get esc】
 after_if【^Z】
 before_exit【^Z】
 after_exit【^Z】
is_special_key = 0
 before start_loop【^Z】
 after start_loop【^Z】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【^Z】
 mode:【i to i】
 start error 【^Z】
 error2 【^Z】
 after error 【^Z】
 brefore retry : s:char=【^Z】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【^Z】
 before_getchar【^Z】
【l:map】<C-Z>       * <C-O>u
【after get esc】
 after_if【^Z】
 before_exit【^Z】
 after_exit【^Z】
is_special_key = 0
 before start_loop【^Z】
 after start_loop【^Z】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【^Z】
 mode:【i to i】
 start error 【^Z】
 error2 【^Z】
 after error 【^Z】
 brefore retry : s:char=【^Z】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【^Z】
 before_getchar【^Z】
【l:map】<C-Z>       * <C-O>u
【after get esc】
 after_if【^Z】
 before_exit【^Z】
 after_exit【^Z】
is_special_key = 0
 before start_loop【^Z】
 after start_loop【^Z】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【^Z】
 mode:【i to i】
 start error 【^Z】
 error2 【^Z】
 after error 【^Z】
 brefore retry : s:char=【^Z】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【^Z】
 before_getchar【^Z】
【l:map】<C-Z>       * <C-O>u
【after get esc】
 after_if【^Z】
 before_exit【^Z】
 after_exit【^Z】
is_special_key = 0
 before start_loop【^Z】
 after start_loop【^Z】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
invalid input: from mode i to i
now mode: n
after invalid input: from mode i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【^Z】
 mode:【i to i】
 start error 【^Z】
 error2 【^Z】
 can't be replayed in 1cursors 【^Z】
 after error 【^Z】
 brefore retry : s:char=【^Z】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【^Z】
 before_getchar【^Z】
【l:map】<C-Z>       * <C-O>u
【after get esc】
 after_if【^Z】
 before_exit【^Z】
 after_exit【^Z】
is_special_key = 0
 before start_loop【^Z】
 after start_loop【^Z】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
invalid input: from mode i to 
now mode: n
after invalid input: from mode i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
invalid input: from mode i to i
now mode: n
after invalid input: from mode i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【^Z】
 mode:【i to i】
 start error 【^Z】
 error2 【^Z】
 can't be replayed in 2cursors 【^Z】
 after error 【^Z】
 brefore retry : s:char=【^Z】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【≈】
 before_getchar【≈】
【after get esc】
 after_if【≈】
 before_exit【≈】
 start 【】
 mode:【 to 】
 start error 【】
 error2 【】
 after error 【】
 brefore retry : s:char=【】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【^D】
 before_getchar【^D】
【l:map】<C-D>       * :<C-U>stopinsert<CR>gv:<C-U>call multiple_cursors#new("v", 0)<CR>
【after get esc】
 after_if【^D】
 before_exit【^D】
 after_exit【^D】
is_special_key = 1
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-new-word)】
 feedkesys s:saved_keys=【】
 start 【^D】
 mode:【v to 】
 start error 【^D】
 error2 【^D】
 after error 【^D】
 brefore retry : s:char=【^D】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【v】
 before_getchar【v】
【after get esc】
 after_if【v】
 before_exit【v】
 after_exit【v】
is_special_key = 0
 before start_loop【v】
 after start_loop【v】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【v】
 type(c)=【0】
 before 【v<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to n
before mc-input3: from v to n
after mc-input5: from v to n
after mc-input: from v to n
before apply2 from v to n
before apply【v】
 type(c)=【0】
 before 【v<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to n
before mc-detect: from v to n
after mc-detect: from v to n
before mc-input: from v to n
before mc-input2: from v to n
before mc-input3: from v to n
before mc-input4: from v to n
after mc-input: from v to n
 start 【v】
 mode:【v to n】
 start error 【v】
 error2 【v】
 after error 【v】
 brefore retry : s:char=【v】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【a】
 before_getchar【a】
【after get esc】
 after_if【a】
 before_exit【a】
 after_exit【a】
is_special_key = 0
 before start_loop【a】
 after start_loop【a】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from n to 
before apply【a】
 type(c)=【0】
 before 【a<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from n to 
before mc-detect: from n to 
after mc-detect: from n to 
before mc-input: from n to 
before mc-input2: from n to i
before mc-input3: from n to i
after mc-input5: from n to i
after mc-input: from n to i
before apply1 from n to i
 type(c)=【0】
 before 【a<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from n to i
before mc-detect: from n to i
after mc-detect: from n to i
before mc-input: from n to i
before mc-input2: from n to i
before mc-input3: from n to i
before mc-input4: from n to i
after mc-input: from n to i
 start 【a】
 mode:【n to i】
 start error 【a】
 error2 【a】
 after error 【a】
 brefore retry : s:char=【a】
 s:retry_keys=【】
 s:saved_keys=【<80><fd>Rundojoin】
 before_if【<80><fd>Rundojoin】
 before_getchar【<80><fd>Rundojoin】
【l:map】<Plug>undojoin * <C-G>u <BS>
【after get esc】
 after_if【<80><fd>Rundojoin】
 before_exit【<80><fd>Rundojoin】
 after_exit【<80><fd>Rundojoin】
is_special_key = 0
 before start_loop【<80><fd>Rundojoin】
 after start_loop【<80><fd>Rundojoin】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【<80><fd>Rundojoin<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【<80><fd>Rundojoin<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【<80><fd>Rundojoin】
 mode:【i to i】
 start error 【<80><fd>Rundojoin】
 error2 【<80><fd>Rundojoin】
 after error 【<80><fd>Rundojoin】
 brefore retry : s:char=【<80><fd>Rundojoin】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【a】
 before_getchar【a】
【after get esc】
 after_if【a】
 before_exit【a】
 after_exit【a】
is_special_key = 0
 before start_loop【a】
 after start_loop【a】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【a<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【a<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【a】
 mode:【i to i】
 start error 【a】
 error2 【a】
 after error 【a】
 brefore retry : s:char=【a】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【s】
 before_getchar【s】
【after get esc】
 after_if【s】
 before_exit【s】
 after_exit【s】
is_special_key = 0
 before start_loop【s】
 after start_loop【s】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【s<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【s<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【s】
 mode:【i to i】
 start error 【s】
 error2 【s】
 after error 【s】
 brefore retry : s:char=【s】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【d】
 before_getchar【d】
【after get esc】
 after_if【d】
 before_exit【d】
 after_exit【d】
is_special_key = 0
 before start_loop【d】
 after start_loop【d】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【d<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【d<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【d】
 mode:【i to i】
 start error 【d】
 error2 【d】
 after error 【d】
 brefore retry : s:char=【d】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【a】
 before_getchar【a】
【after get esc】
 after_if【a】
 before_exit【a】
 after_exit【a】
is_special_key = 0
 before start_loop【a】
 after start_loop【a】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【a<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【a<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【a】
 mode:【i to i】
 start error 【a】
 error2 【a】
 after error 【a】
 brefore retry : s:char=【a】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【s】
 before_getchar【s】
【after get esc】
 after_if【s】
 before_exit【s】
 after_exit【s】
is_special_key = 0
 before start_loop【s】
 after start_loop【s】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【s<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【s<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【s】
 mode:【i to i】
 start error 【s】
 error2 【s】
 after error 【s】
 brefore retry : s:char=【s】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【d】
 before_getchar【d】
【after get esc】
 after_if【d】
 before_exit【d】
 after_exit【d】
is_special_key = 0
 before start_loop【d】
 after start_loop【d】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【d<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【d<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【d】
 mode:【i to i】
 start error 【d】
 error2 【d】
 after error 【d】
 brefore retry : s:char=【d】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【 】
 before_getchar【 】
【l:map】<Space>     * <C-G>u<Space>
【after get esc】
 after_if【 】
 before_exit【 】
 after_exit【 】
is_special_key = 0
 before start_loop【 】
 after start_loop【 】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【 <80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【 <80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【 】
 mode:【i to i】
 start error 【 】
 error2 【 】
 after error 【 】
 brefore retry : s:char=【 】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【a】
 before_getchar【a】
【after get esc】
 after_if【a】
 before_exit【a】
 after_exit【a】
is_special_key = 0
 before start_loop【a】
 after start_loop【a】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【a<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【a<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【a】
 mode:【i to i】
 start error 【a】
 error2 【a】
 after error 【a】
 brefore retry : s:char=【a】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【s】
 before_getchar【s】
【after get esc】
 after_if【s】
 before_exit【s】
 after_exit【s】
is_special_key = 0
 before start_loop【s】
 after start_loop【s】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【s<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【s<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【s】
 mode:【i to i】
 start error 【s】
 error2 【s】
 after error 【s】
 brefore retry : s:char=【s】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【d】
 before_getchar【d】
【after get esc】
 after_if【d】
 before_exit【d】
 after_exit【d】
is_special_key = 0
 before start_loop【d】
 after start_loop【d】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【d<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【d<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【d】
 mode:【i to i】
 start error 【d】
 error2 【d】
 after error 【d】
 brefore retry : s:char=【d】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【^Z】
 before_getchar【^Z】
【l:map】<C-Z>       * <C-O>u
【after get esc】
 after_if【^Z】
 before_exit【^Z】
 after_exit【^Z】
is_special_key = 0
 before start_loop【^Z】
 after start_loop【^Z】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【^Z】
 mode:【i to i】
 start error 【^Z】
 error2 【^Z】
 after error 【^Z】
 brefore retry : s:char=【^Z】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【^Z】
 before_getchar【^Z】
【l:map】<C-Z>       * <C-O>u
【after get esc】
 after_if【^Z】
 before_exit【^Z】
 after_exit【^Z】
is_special_key = 0
 before start_loop【^Z】
 after start_loop【^Z】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【^Z】
 mode:【i to i】
 start error 【^Z】
 error2 【^Z】
 after error 【^Z】
 brefore retry : s:char=【^Z】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【^Z】
 before_getchar【^Z】
【l:map】<C-Z>       * <C-O>u
【after get esc】
 after_if【^Z】
 before_exit【^Z】
 after_exit【^Z】
is_special_key = 0
 before start_loop【^Z】
 after start_loop【^Z】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
invalid input: from mode i to 
now mode: n
after invalid input: from mode i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
invalid input: from mode i to i
now mode: n
after invalid input: from mode i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【^Z】
 mode:【i to i】
 start error 【^Z】
 error2 【^Z】
 can't be replayed in 2cursors 【^Z】
 after error 【^Z】
 brefore retry : s:char=【^Z】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【^Z】
 before_getchar【^Z】
【l:map】<C-Z>       * <C-O>u
【after get esc】
 after_if【^Z】
 before_exit【^Z】
 after_exit【^Z】
is_special_key = 0
 before start_loop【^Z】
 after start_loop【^Z】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
invalid input: from mode i to 
now mode: n
after invalid input: from mode i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
invalid input: from mode i to i
now mode: n
after invalid input: from mode i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【^Z】
 mode:【i to i】
 start error 【^Z】
 error2 【^Z】
 can't be replayed in 2cursors 【^Z】
 after error 【^Z】
 brefore retry : s:char=【^Z】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【a】
 before_getchar【a】
【after get esc】
 after_if【a】
 before_exit【a】
 after_exit【a】
is_special_key = 0
 before start_loop【a】
 after start_loop【a】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【a<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【a<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【a】
 mode:【i to i】
 start error 【a】
 error2 【a】
 after error 【a】
 brefore retry : s:char=【a】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【d】
 before_getchar【d】
【after get esc】
 after_if【d】
 before_exit【d】
 after_exit【d】
is_special_key = 0
 before start_loop【d】
 after start_loop【d】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【d<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【d<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【d】
 mode:【i to i】
 start error 【d】
 error2 【d】
 after error 【d】
 brefore retry : s:char=【d】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【s】
 before_getchar【s】
【after get esc】
 after_if【s】
 before_exit【s】
 after_exit【s】
is_special_key = 0
 before start_loop【s】
 after start_loop【s】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【s<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【s<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【s】
 mode:【i to i】
 start error 【s】
 error2 【s】
 after error 【s】
 brefore retry : s:char=【s】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【 】
 before_getchar【 】
【l:map】<Space>     * <C-G>u<Space>
【after get esc】
 after_if【 】
 before_exit【 】
 after_exit【 】
is_special_key = 0
 before start_loop【 】
 after start_loop【 】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【 <80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【 <80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【 】
 mode:【i to i】
 start error 【 】
 error2 【 】
 after error 【 】
 brefore retry : s:char=【 】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【a】
 before_getchar【a】
【after get esc】
 after_if【a】
 before_exit【a】
 after_exit【a】
is_special_key = 0
 before start_loop【a】
 after start_loop【a】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【a<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【a<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【a】
 mode:【i to i】
 start error 【a】
 error2 【a】
 after error 【a】
 brefore retry : s:char=【a】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【s】
 before_getchar【s】
【after get esc】
 after_if【s】
 before_exit【s】
 after_exit【s】
is_special_key = 0
 before start_loop【s】
 after start_loop【s】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【s<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【s<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【s】
 mode:【i to i】
 start error 【s】
 error2 【s】
 after error 【s】
 brefore retry : s:char=【s】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【d】
 before_getchar【d】
【after get esc】
 after_if【d】
 before_exit【d】
 after_exit【d】
is_special_key = 0
 before start_loop【d】
 after start_loop【d】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【d<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【d<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【d】
 mode:【i to i】
 start error 【d】
 error2 【d】
 after error 【d】
 brefore retry : s:char=【d】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【a】
 before_getchar【a】
【after get esc】
 after_if【a】
 before_exit【a】
 after_exit【a】
is_special_key = 0
 before start_loop【a】
 after start_loop【a】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【a<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【a<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【a】
 mode:【i to i】
 start error 【a】
 error2 【a】
 after error 【a】
 brefore retry : s:char=【a】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【s】
 before_getchar【s】
【after get esc】
 after_if【s】
 before_exit【s】
 after_exit【s】
is_special_key = 0
 before start_loop【s】
 after start_loop【s】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【s<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【s<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【s】
 mode:【i to i】
 start error 【s】
 error2 【s】
 after error 【s】
 brefore retry : s:char=【s】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【 】
 before_getchar【 】
【l:map】<Space>     * <C-G>u<Space>
【after get esc】
 after_if【 】
 before_exit【 】
 after_exit【 】
is_special_key = 0
 before start_loop【 】
 after start_loop【 】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【 <80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【 <80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【 】
 mode:【i to i】
 start error 【 】
 error2 【 】
 after error 【 】
 brefore retry : s:char=【 】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【a】
 before_getchar【a】
【after get esc】
 after_if【a】
 before_exit【a】
 after_exit【a】
is_special_key = 0
 before start_loop【a】
 after start_loop【a】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【a<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【a<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【a】
 mode:【i to i】
 start error 【a】
 error2 【a】
 after error 【a】
 brefore retry : s:char=【a】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【s】
 before_getchar【s】
【after get esc】
 after_if【s】
 before_exit【s】
 after_exit【s】
is_special_key = 0
 before start_loop【s】
 after start_loop【s】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【s<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【s<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【s】
 mode:【i to i】
 start error 【s】
 error2 【s】
 after error 【s】
 brefore retry : s:char=【s】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【d】
 before_getchar【d】
【after get esc】
 after_if【d】
 before_exit【d】
 after_exit【d】
is_special_key = 0
 before start_loop【d】
 after start_loop【d】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【d<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【d<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【d】
 mode:【i to i】
 start error 【d】
 error2 【d】
 after error 【d】
 brefore retry : s:char=【d】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【 】
 before_getchar【 】
【l:map】<Space>     * <C-G>u<Space>
【after get esc】
 after_if【 】
 before_exit【 】
 after_exit【 】
is_special_key = 0
 before start_loop【 】
 after start_loop【 】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【 <80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【 <80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【 】
 mode:【i to i】
 start error 【 】
 error2 【 】
 after error 【 】
 brefore retry : s:char=【 】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【a】
 before_getchar【a】
【after get esc】
 after_if【a】
 before_exit【a】
 after_exit【a】
is_special_key = 0
 before start_loop【a】
 after start_loop【a】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【a<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【a<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【a】
 mode:【i to i】
 start error 【a】
 error2 【a】
 after error 【a】
 brefore retry : s:char=【a】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【s】
 before_getchar【s】
【after get esc】
 after_if【s】
 before_exit【s】
 after_exit【s】
is_special_key = 0
 before start_loop【s】
 after start_loop【s】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【s<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【s<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【s】
 mode:【i to i】
 start error 【s】
 error2 【s】
 after error 【s】
 brefore retry : s:char=【s】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【 】
 before_getchar【 】
【l:map】<Space>     * <C-G>u<Space>
【after get esc】
 after_if【 】
 before_exit【 】
 after_exit【 】
is_special_key = 0
 before start_loop【 】
 after start_loop【 】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【 <80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【 <80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【 】
 mode:【i to i】
 start error 【 】
 error2 【 】
 after error 【 】
 brefore retry : s:char=【 】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【d】
 before_getchar【d】
【after get esc】
 after_if【d】
 before_exit【d】
 after_exit【d】
is_special_key = 0
 before start_loop【d】
 after start_loop【d】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【d<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【d<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【d】
 mode:【i to i】
 start error 【d】
 error2 【d】
 after error 【d】
 brefore retry : s:char=【d】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【s】
 before_getchar【s】
【after get esc】
 after_if【s】
 before_exit【s】
 after_exit【s】
is_special_key = 0
 before start_loop【s】
 after start_loop【s】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【s<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【s<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【s】
 mode:【i to i】
 start error 【s】
 error2 【s】
 after error 【s】
 brefore retry : s:char=【s】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【a】
 before_getchar【a】
【after get esc】
 after_if【a】
 before_exit【a】
 after_exit【a】
is_special_key = 0
 before start_loop【a】
 after start_loop【a】
 type(c)=【0】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【 】
before apply1 from i to 
 type(c)=【0】
 before 【a<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【 】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【a<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【 】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【a】
 mode:【i to i】
 start error 【a】
 error2 【a】
 after error 【a】
 brefore retry : s:char=【a】
 s:retry_keys=【】
 s:saved_keys=【 】
 before_if【 】
 before_getchar【 】
【l:map】<Space>     * <C-G>u<Space>
【after get esc】
 after_if【 】
 before_exit【 】
 after_exit【 】
is_special_key = 0
 before start_loop【 】
 after start_loop【 】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【 <80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【 <80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【 】
 mode:【i to i】
 start error 【 】
 error2 【 】
 after error 【 】
 brefore retry : s:char=【 】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【d】
 before_getchar【d】
【after get esc】
 after_if【d】
 before_exit【d】
 after_exit【d】
is_special_key = 0
 before start_loop【d】
 after start_loop【d】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【d<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【d<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【d】
 mode:【i to i】
 start error 【d】
 error2 【d】
 after error 【d】
 brefore retry : s:char=【d】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【 】
 before_getchar【 】
【l:map】<Space>     * <C-G>u<Space>
【after get esc】
 after_if【 】
 before_exit【 】
 after_exit【 】
is_special_key = 0
 before start_loop【 】
 after start_loop【 】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【 <80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【 <80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【 】
 mode:【i to i】
 start error 【 】
 error2 【 】
 after error 【 】
 brefore retry : s:char=【 】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【a】
 before_getchar【a】
【after get esc】
 after_if【a】
 before_exit【a】
 after_exit【a】
is_special_key = 0
 before start_loop【a】
 after start_loop【a】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【a<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【a<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【a】
 mode:【i to i】
 start error 【a】
 error2 【a】
 after error 【a】
 brefore retry : s:char=【a】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【s】
 before_getchar【s】
【after get esc】
 after_if【s】
 before_exit【s】
 after_exit【s】
is_special_key = 0
 before start_loop【s】
 after start_loop【s】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【s<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【s<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【s】
 mode:【i to i】
 start error 【s】
 error2 【s】
 after error 【s】
 brefore retry : s:char=【s】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【 】
 before_getchar【 】
【l:map】<Space>     * <C-G>u<Space>
【after get esc】
 after_if【 】
 before_exit【 】
 after_exit【 】
is_special_key = 0
 before start_loop【 】
 after start_loop【 】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【 <80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【 <80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【 】
 mode:【i to i】
 start error 【 】
 error2 【 】
 after error 【 】
 brefore retry : s:char=【 】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【d】
 before_getchar【d】
【after get esc】
 after_if【d】
 before_exit【d】
 after_exit【d】
is_special_key = 0
 before start_loop【d】
 after start_loop【d】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【d<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【d<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【d】
 mode:【i to i】
 start error 【d】
 error2 【d】
 after error 【d】
 brefore retry : s:char=【d】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【^Z】
 before_getchar【^Z】
【l:map】<C-Z>       * <C-O>u
【after get esc】
 after_if【^Z】
 before_exit【^Z】
 after_exit【^Z】
is_special_key = 0
 before start_loop【^Z】
 after start_loop【^Z】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【^Z】
 mode:【i to i】
 start error 【^Z】
 error2 【^Z】
 after error 【^Z】
 brefore retry : s:char=【^Z】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【^Z】
 before_getchar【^Z】
【l:map】<C-Z>       * <C-O>u
【after get esc】
 after_if【^Z】
 before_exit【^Z】
 after_exit【^Z】
is_special_key = 0
 before start_loop【^Z】
 after start_loop【^Z】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【^Z】
 mode:【i to i】
 start error 【^Z】
 error2 【^Z】
 after error 【^Z】
 brefore retry : s:char=【^Z】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【^Z】
 before_getchar【^Z】
【l:map】<C-Z>       * <C-O>u
【after get esc】
 after_if【^Z】
 before_exit【^Z】
 after_exit【^Z】
is_special_key = 0
 before start_loop【^Z】
 after start_loop【^Z】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【^Z】
 mode:【i to i】
 start error 【^Z】
 error2 【^Z】
 after error 【^Z】
 brefore retry : s:char=【^Z】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【^Z】
 before_getchar【^Z】
【l:map】<C-Z>       * <C-O>u
【after get esc】
 after_if【^Z】
 before_exit【^Z】
 after_exit【^Z】
is_special_key = 0
 before start_loop【^Z】
 after start_loop【^Z】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【^Z】
 mode:【i to i】
 start error 【^Z】
 error2 【^Z】
 after error 【^Z】
 brefore retry : s:char=【^Z】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【^Z】
 before_getchar【^Z】
【l:map】<C-Z>       * <C-O>u
【after get esc】
 after_if【^Z】
 before_exit【^Z】
 after_exit【^Z】
is_special_key = 0
 before start_loop【^Z】
 after start_loop【^Z】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【^Z】
 mode:【i to i】
 start error 【^Z】
 error2 【^Z】
 after error 【^Z】
 brefore retry : s:char=【^Z】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【^Z】
 before_getchar【^Z】
【l:map】<C-Z>       * <C-O>u
【after get esc】
 after_if【^Z】
 before_exit【^Z】
 after_exit【^Z】
is_special_key = 0
 before start_loop【^Z】
 after start_loop【^Z】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【^Z】
 mode:【i to i】
 start error 【^Z】
 error2 【^Z】
 after error 【^Z】
 brefore retry : s:char=【^Z】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【^Z】
 before_getchar【^Z】
【l:map】<C-Z>       * <C-O>u
【after get esc】
 after_if【^Z】
 before_exit【^Z】
 after_exit【^Z】
is_special_key = 0
 before start_loop【^Z】
 after start_loop【^Z】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【^Z】
 mode:【i to i】
 start error 【^Z】
 error2 【^Z】
 after error 【^Z】
 brefore retry : s:char=【^Z】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【^Z】
 before_getchar【^Z】
【l:map】<C-Z>       * <C-O>u
【after get esc】
 after_if【^Z】
 before_exit【^Z】
 after_exit【^Z】
is_special_key = 0
 before start_loop【^Z】
 after start_loop【^Z】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
invalid input: from mode i to i
now mode: n
after invalid input: from mode i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【^Z】
 mode:【i to i】
 start error 【^Z】
 error2 【^Z】
 can't be replayed in 1cursors 【^Z】
 after error 【^Z】
 brefore retry : s:char=【^Z】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【^Z】
 before_getchar【^Z】
【l:map】<C-Z>       * <C-O>u
【after get esc】
 after_if【^Z】
 before_exit【^Z】
 after_exit【^Z】
is_special_key = 0
 before start_loop【^Z】
 after start_loop【^Z】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
invalid input: from mode i to 
now mode: n
after invalid input: from mode i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
invalid input: from mode i to i
now mode: n
after invalid input: from mode i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【^Z】
 mode:【i to i】
 start error 【^Z】
 error2 【^Z】
 can't be replayed in 2cursors 【^Z】
 after error 【^Z】
 brefore retry : s:char=【^Z】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【^Z】
 before_getchar【^Z】
【l:map】<C-Z>       * <C-O>u
【after get esc】
 after_if【^Z】
 before_exit【^Z】
 after_exit【^Z】
is_special_key = 0
 before start_loop【^Z】
 after start_loop【^Z】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
invalid input: from mode i to 
now mode: n
after invalid input: from mode i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
invalid input: from mode i to i
now mode: n
after invalid input: from mode i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【^Z】
 mode:【i to i】
 start error 【^Z】
 error2 【^Z】
 can't be replayed in 2cursors 【^Z】
 after error 【^Z】
 brefore retry : s:char=【^Z】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【≈】
 before_getchar【≈】
【after get esc】
 after_if【≈】
 before_exit【≈】
 start 【】
 mode:【 to 】
 start error 【】
 error2 【】
 after error 【】
 brefore retry : s:char=【】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【^D】
 before_getchar【^D】
【l:map】<C-D>       * :<C-U>stopinsert<CR>gv:<C-U>call multiple_cursors#new("v", 0)<CR>
【after get esc】
 after_if【^D】
 before_exit【^D】
 after_exit【^D】
is_special_key = 1
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-new-word)】
 feedkesys s:saved_keys=【】
 start 【^D】
 mode:【v to 】
 start error 【^D】
 error2 【^D】
 after error 【^D】
 brefore retry : s:char=【^D】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【≈】
 before_getchar【≈】
【after get esc】
 after_if【≈】
 before_exit【≈】
 start 【】
 mode:【v to 】
 start error 【】
 error2 【】
 after error 【】
 brefore retry : s:char=【】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【^D】
 before_getchar【^D】
【l:map】<C-D>       * :<C-U>stopinsert<CR>gv:<C-U>call multiple_cursors#new("v", 0)<CR>
【after get esc】
 after_if【^D】
 before_exit【^D】
 after_exit【^D】
is_special_key = 1
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-new-word)】
 feedkesys s:saved_keys=【】
 start 【^D】
 mode:【v to 】
 start error 【^D】
 error2 【^D】
 after error 【^D】
 brefore retry : s:char=【^D】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【v】
 before_getchar【v】
【after get esc】
 after_if【v】
 before_exit【v】
 after_exit【v】
is_special_key = 0
 before start_loop【v】
 after start_loop【v】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【v】
 type(c)=【0】
 before 【v<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to n
before mc-input3: from v to n
after mc-input5: from v to n
after mc-input: from v to n
before apply2 from v to n
before apply【v】
 type(c)=【0】
 before 【v<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to n
before mc-detect: from v to n
after mc-detect: from v to n
before mc-input: from v to n
before mc-input2: from v to n
before mc-input3: from v to n
before mc-input4: from v to n
after mc-input: from v to n
 start 【v】
 mode:【v to n】
 start error 【v】
 error2 【v】
 after error 【v】
 brefore retry : s:char=【v】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【a】
 before_getchar【a】
【after get esc】
 after_if【a】
 before_exit【a】
 after_exit【a】
is_special_key = 0
 before start_loop【a】
 after start_loop【a】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from n to 
before apply【a】
 type(c)=【0】
 before 【a<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from n to 
before mc-detect: from n to 
after mc-detect: from n to 
before mc-input: from n to 
before mc-input2: from n to i
before mc-input3: from n to i
after mc-input5: from n to i
after mc-input: from n to i
before apply1 from n to i
 type(c)=【0】
 before 【a<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from n to i
before mc-detect: from n to i
after mc-detect: from n to i
before mc-input: from n to i
before mc-input2: from n to i
before mc-input3: from n to i
before mc-input4: from n to i
after mc-input: from n to i
 start 【a】
 mode:【n to i】
 start error 【a】
 error2 【a】
 after error 【a】
 brefore retry : s:char=【a】
 s:retry_keys=【】
 s:saved_keys=【<80><fd>Rundojoin】
 before_if【<80><fd>Rundojoin】
 before_getchar【<80><fd>Rundojoin】
【l:map】<Plug>undojoin * <C-G>u <BS>
【after get esc】
 after_if【<80><fd>Rundojoin】
 before_exit【<80><fd>Rundojoin】
 after_exit【<80><fd>Rundojoin】
is_special_key = 0
 before start_loop【<80><fd>Rundojoin】
 after start_loop【<80><fd>Rundojoin】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【<80><fd>Rundojoin<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【<80><fd>Rundojoin<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【<80><fd>Rundojoin】
 mode:【i to i】
 start error 【<80><fd>Rundojoin】
 error2 【<80><fd>Rundojoin】
 after error 【<80><fd>Rundojoin】
 brefore retry : s:char=【<80><fd>Rundojoin】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【a】
 before_getchar【a】
【after get esc】
 after_if【a】
 before_exit【a】
 after_exit【a】
is_special_key = 0
 before start_loop【a】
 after start_loop【a】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【a<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【a<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【a】
 mode:【i to i】
 start error 【a】
 error2 【a】
 after error 【a】
 brefore retry : s:char=【a】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【s】
 before_getchar【s】
【after get esc】
 after_if【s】
 before_exit【s】
 after_exit【s】
is_special_key = 0
 before start_loop【s】
 after start_loop【s】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【s<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【s<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【s】
 mode:【i to i】
 start error 【s】
 error2 【s】
 after error 【s】
 brefore retry : s:char=【s】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【d】
 before_getchar【d】
【after get esc】
 after_if【d】
 before_exit【d】
 after_exit【d】
is_special_key = 0
 before start_loop【d】
 after start_loop【d】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【d<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【d<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【d】
 mode:【i to i】
 start error 【d】
 error2 【d】
 after error 【d】
 brefore retry : s:char=【d】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【 】
 before_getchar【 】
【l:map】<Space>     * <C-G>u<Space>
【after get esc】
 after_if【 】
 before_exit【 】
 after_exit【 】
is_special_key = 0
 before start_loop【 】
 after start_loop【 】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【 <80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【 <80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【 】
 mode:【i to i】
 start error 【 】
 error2 【 】
 after error 【 】
 brefore retry : s:char=【 】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【q】
 before_getchar【q】
【after get esc】
 after_if【q】
 before_exit【q】
 after_exit【q】
is_special_key = 0
 before start_loop【q】
 after start_loop【q】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【q<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【q<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【q】
 mode:【i to i】
 start error 【q】
 error2 【q】
 after error 【q】
 brefore retry : s:char=【q】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【w】
 before_getchar【w】
【after get esc】
 after_if【w】
 before_exit【w】
 after_exit【w】
is_special_key = 0
 before start_loop【w】
 after start_loop【w】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【w<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【w<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【w】
 mode:【i to i】
 start error 【w】
 error2 【w】
 after error 【w】
 brefore retry : s:char=【w】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【e】
 before_getchar【e】
【after get esc】
 after_if【e】
 before_exit【e】
 after_exit【e】
is_special_key = 0
 before start_loop【e】
 after start_loop【e】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【e<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【e<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【e】
 mode:【i to i】
 start error 【e】
 error2 【e】
 after error 【e】
 brefore retry : s:char=【e】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【a】
 before_getchar【a】
【after get esc】
 after_if【a】
 before_exit【a】
 after_exit【a】
is_special_key = 0
 before start_loop【a】
 after start_loop【a】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【a<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【a<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【a】
 mode:【i to i】
 start error 【a】
 error2 【a】
 after error 【a】
 brefore retry : s:char=【a】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【s】
 before_getchar【s】
【after get esc】
 after_if【s】
 before_exit【s】
 after_exit【s】
is_special_key = 0
 before start_loop【s】
 after start_loop【s】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【s<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【s<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【s】
 mode:【i to i】
 start error 【s】
 error2 【s】
 after error 【s】
 brefore retry : s:char=【s】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【d】
 before_getchar【d】
【after get esc】
 after_if【d】
 before_exit【d】
 after_exit【d】
is_special_key = 0
 before start_loop【d】
 after start_loop【d】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【d<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【d<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【d】
 mode:【i to i】
 start error 【d】
 error2 【d】
 after error 【d】
 brefore retry : s:char=【d】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【 】
 before_getchar【 】
【l:map】<Space>     * <C-G>u<Space>
【after get esc】
 after_if【 】
 before_exit【 】
 after_exit【 】
is_special_key = 0
 before start_loop【 】
 after start_loop【 】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【 <80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【 <80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【 】
 mode:【i to i】
 start error 【 】
 error2 【 】
 after error 【 】
 brefore retry : s:char=【 】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【q】
 before_getchar【q】
【after get esc】
 after_if【q】
 before_exit【q】
 after_exit【q】
is_special_key = 0
 before start_loop【q】
 after start_loop【q】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【q<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【q<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【q】
 mode:【i to i】
 start error 【q】
 error2 【q】
 after error 【q】
 brefore retry : s:char=【q】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【w】
 before_getchar【w】
【after get esc】
 after_if【w】
 before_exit【w】
 after_exit【w】
is_special_key = 0
 before start_loop【w】
 after start_loop【w】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【w<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【w<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【w】
 mode:【i to i】
 start error 【w】
 error2 【w】
 after error 【w】
 brefore retry : s:char=【w】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【d】
 before_getchar【d】
【after get esc】
 after_if【d】
 before_exit【d】
 after_exit【d】
is_special_key = 0
 before start_loop【d】
 after start_loop【d】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【d<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【d<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【d】
 mode:【i to i】
 start error 【d】
 error2 【d】
 after error 【d】
 brefore retry : s:char=【d】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【a】
 before_getchar【a】
【after get esc】
 after_if【a】
 before_exit【a】
 after_exit【a】
is_special_key = 0
 before start_loop【a】
 after start_loop【a】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【a<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【a<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【a】
 mode:【i to i】
 start error 【a】
 error2 【a】
 after error 【a】
 brefore retry : s:char=【a】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【^Z】
 before_getchar【^Z】
【l:map】<C-Z>       * <C-O>u
【after get esc】
 after_if【^Z】
 before_exit【^Z】
 after_exit【^Z】
is_special_key = 0
 before start_loop【^Z】
 after start_loop【^Z】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【^Z】
 mode:【i to i】
 start error 【^Z】
 error2 【^Z】
 after error 【^Z】
 brefore retry : s:char=【^Z】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【^Z】
 before_getchar【^Z】
【l:map】<C-Z>       * <C-O>u
【after get esc】
 after_if【^Z】
 before_exit【^Z】
 after_exit【^Z】
is_special_key = 0
 before start_loop【^Z】
 after start_loop【^Z】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【^Z】
 mode:【i to i】
 start error 【^Z】
 error2 【^Z】
 after error 【^Z】
 brefore retry : s:char=【^Z】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【^Z】
 before_getchar【^Z】
【l:map】<C-Z>       * <C-O>u
【after get esc】
 after_if【^Z】
 before_exit【^Z】
 after_exit【^Z】
is_special_key = 0
 before start_loop【^Z】
 after start_loop【^Z】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【^Z】
 mode:【i to i】
 start error 【^Z】
 error2 【^Z】
 after error 【^Z】
 brefore retry : s:char=【^Z】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【^Z】
 before_getchar【^Z】
【l:map】<C-Z>       * <C-O>u
【after get esc】
 after_if【^Z】
 before_exit【^Z】
 after_exit【^Z】
is_special_key = 0
 before start_loop【^Z】
 after start_loop【^Z】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
invalid input: from mode i to 
now mode: n
after invalid input: from mode i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
invalid input: from mode i to i
now mode: n
after invalid input: from mode i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【^Z】
 mode:【i to i】
 start error 【^Z】
 error2 【^Z】
 can't be replayed in 2cursors 【^Z】
 after error 【^Z】
 brefore retry : s:char=【^Z】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【^W】
 before_getchar【^W】
【l:map】<C-W>       * <C-O>:q<CR>
【after get esc】
 after_if【^W】
 before_exit【^W】
 after_exit【^W】
is_special_key = 0
 before start_loop【^W】
 after start_loop【^W】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【^W<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
 start 【】
 mode:【 to 】
 start error 【】
 error2 【】
 after error 【】
 brefore retry : s:char=【】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【^D】
 before_getchar【^D】
【l:map】<C-D>       * :<C-U>stopinsert<CR>gv:<C-U>call multiple_cursors#new("v", 0)<CR>
【after get esc】
 after_if【^D】
 before_exit【^D】
 after_exit【^D】
is_special_key = 1
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-new-word)】
 feedkesys s:saved_keys=【】
 start 【^D】
 mode:【v to 】
 start error 【^D】
 error2 【^D】
 after error 【^D】
 brefore retry : s:char=【^D】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kr】
 before_getchar【<80>kr】
【after get esc】
 after_if【<80>kr】
 before_exit【<80>kr】
 after_exit【<80>kr】
is_special_key = 0
 before start_loop【<80>kr】
 after start_loop【<80>kr】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kr】
 type(c)=【0】
 before 【<80>kr<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
after mc-input5: from v to v
after mc-input: from v to v
before apply2 from v to v
before apply【<80>kr】
 type(c)=【0】
 before 【<80>kr<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to v
before mc-detect: from v to v
after mc-detect: from v to v
before mc-input: from v to v
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kr】
 mode:【v to v】
 start error 【<80>kr】
 error2 【<80>kr】
 after error 【<80>kr】
 brefore retry : s:char=【<80>kr】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【a】
 before_getchar【a】
【after get esc】
 after_if【a】
 before_exit【a】
 after_exit【a】
is_special_key = 0
 before start_loop【a】
 after start_loop【a】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【a】
 type(c)=【0】
 before 【a<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
invalid input: from mode v to 
now mode: v
after invalid input: from mode v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
after mc-input5: from v to v
after mc-input: from v to v
before apply2 from v to v
before apply【a】
 type(c)=【0】
 before 【a<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to v
before mc-detect: from v to v
after mc-detect: from v to v
invalid input: from mode v to v
now mode: v
after invalid input: from mode v to v
before mc-input: from v to v
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【a】
 mode:【v to v】
 start error 【a】
 error1 【a】
 after error 【a】
 brefore retry : s:char=【a】
 s:retry_keys=【a】
 s:saved_keys=【】
 before_if【as】
 before_getchar【as】
【after get esc】
 after_if【as】
 before_exit【as】
 after_exit【as】
is_special_key = 0
 before start_loop【as】
 after start_loop【as】
 type(c)=【0】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【d】
before apply2 from v to 
before apply【as】
 type(c)=【0】
 before 【as<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【d】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
after mc-input5: from v to v
after mc-input: from v to v
before apply2 from v to v
before apply【as】
 type(c)=【0】
 before 【as<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【d】
after apply2 from v to v
before mc-detect: from v to v
after mc-detect: from v to v
before mc-input: from v to v
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【as】
 mode:【v to v】
 start error 【as】
 error2 【as】
 after error 【as】
 brefore retry : s:char=【as】
 s:retry_keys=【】
 s:saved_keys=【d】
 before_if【d】
 before_getchar【d】
【l:map】d             d:call system('nc localhost 8377', @")<CR>
【after get esc】
 after_if【d】
 before_exit【d】
 after_exit【d】
is_special_key = 0
 before start_loop【d】
 after start_loop【d】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【d】
 type(c)=【0】
 before 【d<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to n
before mc-input3: from v to n
after mc-input5: from v to n
after mc-input: from v to n
before apply2 from v to n
before apply【d】
 type(c)=【0】
 before 【d<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to n
before mc-detect: from v to n
after mc-detect: from v to n
before mc-input: from v to n
before mc-input2: from v to n
before mc-input3: from v to n
before mc-input4: from v to n
after mc-input: from v to n
 start 【d】
 mode:【v to n】
 start error 【d】
 error2 【d】
 after error 【d】
 brefore retry : s:char=【d】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【^Z】
 before_getchar【^Z】
【l:map】<C-Z>       * u
【after get esc】
 after_if【^Z】
 before_exit【^Z】
 after_exit【^Z】
is_special_key = 0
 before start_loop【^Z】
 after start_loop【^Z】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from n to 
before apply【^Z】
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from n to 
before mc-detect: from n to 
after mc-detect: from n to 
before mc-input: from n to 
before mc-input2: from n to n
before mc-input3: from n to n
after mc-input5: from n to n
after mc-input: from n to n
before apply2 from n to n
before apply【^Z】
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from n to n
before mc-detect: from n to n
after mc-detect: from n to n
before mc-input: from n to n
before mc-input2: from n to n
before mc-input3: from n to n
before mc-input4: from n to n
after mc-input: from n to n
 start 【^Z】
 mode:【n to n】
 start error 【^Z】
 error2 【^Z】
 after error 【^Z】
 brefore retry : s:char=【^Z】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【^Z】
 before_getchar【^Z】
【l:map】<C-Z>       * u
【after get esc】
 after_if【^Z】
 before_exit【^Z】
 after_exit【^Z】
is_special_key = 0
 before start_loop【^Z】
 after start_loop【^Z】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from n to 
before apply【^Z】
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from n to 
before mc-detect: from n to 
after mc-detect: from n to 
before mc-input: from n to 
before mc-input2: from n to n
before mc-input3: from n to n
after mc-input5: from n to n
after mc-input: from n to n
before apply2 from n to n
before apply【^Z】
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from n to n
before mc-detect: from n to n
after mc-detect: from n to n
before mc-input: from n to n
before mc-input2: from n to n
before mc-input3: from n to n
before mc-input4: from n to n
after mc-input: from n to n
 start 【^Z】
 mode:【n to n】
 start error 【^Z】
 error2 【^Z】
 after error 【^Z】
 brefore retry : s:char=【^Z】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【^Z】
 before_getchar【^Z】
【l:map】<C-Z>       * u
【after get esc】
 after_if【^Z】
 before_exit【^Z】
 after_exit【^Z】
is_special_key = 0
 before start_loop【^Z】
 after start_loop【^Z】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from n to 
before apply【^Z】
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from n to 
before mc-detect: from n to 
after mc-detect: from n to 
invalid input: from mode n to 
now mode: n
after invalid input: from mode n to 
before mc-input: from n to 
before mc-input2: from n to n
before mc-input3: from n to n
after mc-input5: from n to n
after mc-input: from n to n
before apply2 from n to n
before apply【^Z】
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from n to n
before mc-detect: from n to n
after mc-detect: from n to n
invalid input: from mode n to n
now mode: n
after invalid input: from mode n to n
before mc-input: from n to n
before mc-input2: from n to n
before mc-input3: from n to n
before mc-input4: from n to n
after mc-input: from n to n
 start 【^Z】
 mode:【n to n】
 start error 【^Z】
 error2 【^Z】
 can't be replayed in 2cursors 【^Z】
 after error 【^Z】
 brefore retry : s:char=【^Z】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【^Z】
 before_getchar【^Z】
【l:map】<C-Z>       * u
【after get esc】
 after_if【^Z】
 before_exit【^Z】
 after_exit【^Z】
is_special_key = 0
 before start_loop【^Z】
 after start_loop【^Z】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from n to 
before apply【^Z】
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from n to 
before mc-detect: from n to 
after mc-detect: from n to 
invalid input: from mode n to 
now mode: n
after invalid input: from mode n to 
before mc-input: from n to 
before mc-input2: from n to n
before mc-input3: from n to n
after mc-input5: from n to n
after mc-input: from n to n
before apply2 from n to n
before apply【^Z】
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from n to n
before mc-detect: from n to n
after mc-detect: from n to n
invalid input: from mode n to n
now mode: n
after invalid input: from mode n to n
before mc-input: from n to n
before mc-input2: from n to n
before mc-input3: from n to n
before mc-input4: from n to n
after mc-input: from n to n
 start 【^Z】
 mode:【n to n】
 start error 【^Z】
 error2 【^Z】
 can't be replayed in 2cursors 【^Z】
 after error 【^Z】
 brefore retry : s:char=【^Z】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【≈】
 before_getchar【≈】
【after get esc】
 after_if【≈】
 before_exit【≈】
 start 【】
 mode:【n to 】
 start error 【】
 error2 【】
 after error 【】
 brefore retry : s:char=【】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【^D】
 before_getchar【^D】
【l:map】<C-D>       * :<C-U>stopinsert<CR>gv:<C-U>call multiple_cursors#new("v", 0)<CR>
【after get esc】
 after_if【^D】
 before_exit【^D】
 after_exit【^D】
is_special_key = 1
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-new-word)】
 feedkesys s:saved_keys=【】
 start 【^D】
 mode:【v to 】
 start error 【^D】
 error2 【^D】
 after error 【^D】
 brefore retry : s:char=【^D】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kr】
 before_getchar【<80>kr】
【after get esc】
 after_if【<80>kr】
 before_exit【<80>kr】
 after_exit【<80>kr】
is_special_key = 0
 before start_loop【<80>kr】
 after start_loop【<80>kr】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kr】
 type(c)=【0】
 before 【<80>kr<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
after mc-input5: from v to v
after mc-input: from v to v
before apply2 from v to v
before apply【<80>kr】
 type(c)=【0】
 before 【<80>kr<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to v
before mc-detect: from v to v
after mc-detect: from v to v
before mc-input: from v to v
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kr】
 mode:【v to v】
 start error 【<80>kr】
 error2 【<80>kr】
 after error 【<80>kr】
 brefore retry : s:char=【<80>kr】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kl】
 before_getchar【<80>kl】
【after get esc】
 after_if【<80>kl】
 before_exit【<80>kl】
 after_exit【<80>kl】
is_special_key = 0
 before start_loop【<80>kl】
 after start_loop【<80>kl】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kl】
 type(c)=【0】
 before 【<80>kl<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
after mc-input5: from v to v
after mc-input: from v to v
before apply2 from v to v
before apply【<80>kl】
 type(c)=【0】
 before 【<80>kl<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to v
before mc-detect: from v to v
after mc-detect: from v to v
before mc-input: from v to v
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kl】
 mode:【v to v】
 start error 【<80>kl】
 error2 【<80>kl】
 after error 【<80>kl】
 brefore retry : s:char=【<80>kl】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【v】
 before_getchar【v】
【after get esc】
 after_if【v】
 before_exit【v】
 after_exit【v】
is_special_key = 0
 before start_loop【v】
 after start_loop【v】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【v】
 type(c)=【0】
 before 【v<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to n
before mc-input3: from v to n
after mc-input5: from v to n
after mc-input: from v to n
before apply2 from v to n
before apply【v】
 type(c)=【0】
 before 【v<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to n
before mc-detect: from v to n
after mc-detect: from v to n
before mc-input: from v to n
before mc-input2: from v to n
before mc-input3: from v to n
before mc-input4: from v to n
after mc-input: from v to n
 start 【v】
 mode:【v to n】
 start error 【v】
 error2 【v】
 after error 【v】
 brefore retry : s:char=【v】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【a】
 before_getchar【a】
【after get esc】
 after_if【a】
 before_exit【a】
 after_exit【a】
is_special_key = 0
 before start_loop【a】
 after start_loop【a】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from n to 
before apply【a】
 type(c)=【0】
 before 【a<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from n to 
before mc-detect: from n to 
after mc-detect: from n to 
before mc-input: from n to 
before mc-input2: from n to i
before mc-input3: from n to i
after mc-input5: from n to i
after mc-input: from n to i
before apply1 from n to i
 type(c)=【0】
 before 【a<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from n to i
before mc-detect: from n to i
after mc-detect: from n to i
before mc-input: from n to i
before mc-input2: from n to i
before mc-input3: from n to i
before mc-input4: from n to i
after mc-input: from n to i
 start 【a】
 mode:【n to i】
 start error 【a】
 error2 【a】
 after error 【a】
 brefore retry : s:char=【a】
 s:retry_keys=【】
 s:saved_keys=【<80><fd>Rundojoin】
 before_if【<80><fd>Rundojoin】
 before_getchar【<80><fd>Rundojoin】
【l:map】<Plug>undojoin * <C-G>u <BS>
【after get esc】
 after_if【<80><fd>Rundojoin】
 before_exit【<80><fd>Rundojoin】
 after_exit【<80><fd>Rundojoin】
is_special_key = 0
 before start_loop【<80><fd>Rundojoin】
 after start_loop【<80><fd>Rundojoin】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【<80><fd>Rundojoin<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【<80><fd>Rundojoin<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【<80><fd>Rundojoin】
 mode:【i to i】
 start error 【<80><fd>Rundojoin】
 error2 【<80><fd>Rundojoin】
 after error 【<80><fd>Rundojoin】
 brefore retry : s:char=【<80><fd>Rundojoin】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【a】
 before_getchar【a】
【after get esc】
 after_if【a】
 before_exit【a】
 after_exit【a】
is_special_key = 0
 before start_loop【a】
 after start_loop【a】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【a<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【a<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【a】
 mode:【i to i】
 start error 【a】
 error2 【a】
 after error 【a】
 brefore retry : s:char=【a】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【d】
 before_getchar【d】
【after get esc】
 after_if【d】
 before_exit【d】
 after_exit【d】
is_special_key = 0
 before start_loop【d】
 after start_loop【d】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【d<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【d<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【d】
 mode:【i to i】
 start error 【d】
 error2 【d】
 after error 【d】
 brefore retry : s:char=【d】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【 】
 before_getchar【 】
【l:map】<Space>     * <C-G>u<Space>
【after get esc】
 after_if【 】
 before_exit【 】
 after_exit【 】
is_special_key = 0
 before start_loop【 】
 after start_loop【 】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【 <80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【 <80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【 】
 mode:【i to i】
 start error 【 】
 error2 【 】
 after error 【 】
 brefore retry : s:char=【 】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【e】
 before_getchar【e】
【after get esc】
 after_if【e】
 before_exit【e】
 after_exit【e】
is_special_key = 0
 before start_loop【e】
 after start_loop【e】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【e<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【e<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【e】
 mode:【i to i】
 start error 【e】
 error2 【e】
 after error 【e】
 brefore retry : s:char=【e】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【q】
 before_getchar【q】
【after get esc】
 after_if【q】
 before_exit【q】
 after_exit【q】
is_special_key = 0
 before start_loop【q】
 after start_loop【q】
 type(c)=【0】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【w】
before apply1 from i to 
 type(c)=【0】
 before 【q<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【w】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【q<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【w】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【q】
 mode:【i to i】
 start error 【q】
 error2 【q】
 after error 【q】
 brefore retry : s:char=【q】
 s:retry_keys=【】
 s:saved_keys=【w】
 before_if【w】
 before_getchar【w】
【after get esc】
 after_if【w】
 before_exit【w】
 after_exit【w】
is_special_key = 0
 before start_loop【w】
 after start_loop【w】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【w<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【w<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【w】
 mode:【i to i】
 start error 【w】
 error2 【w】
 after error 【w】
 brefore retry : s:char=【w】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【 】
 before_getchar【 】
【l:map】<Space>     * <C-G>u<Space>
【after get esc】
 after_if【 】
 before_exit【 】
 after_exit【 】
is_special_key = 0
 before start_loop【 】
 after start_loop【 】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【 <80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【 <80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【 】
 mode:【i to i】
 start error 【 】
 error2 【 】
 after error 【 】
 brefore retry : s:char=【 】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【a】
 before_getchar【a】
【after get esc】
 after_if【a】
 before_exit【a】
 after_exit【a】
is_special_key = 0
 before start_loop【a】
 after start_loop【a】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【a<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【a<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【a】
 mode:【i to i】
 start error 【a】
 error2 【a】
 after error 【a】
 brefore retry : s:char=【a】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【 】
 before_getchar【 】
【l:map】<Space>     * <C-G>u<Space>
【after get esc】
 after_if【 】
 before_exit【 】
 after_exit【 】
is_special_key = 0
 before start_loop【 】
 after start_loop【 】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【 <80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【 <80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【 】
 mode:【i to i】
 start error 【 】
 error2 【 】
 after error 【 】
 brefore retry : s:char=【 】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【s】
 before_getchar【s】
【after get esc】
 after_if【s】
 before_exit【s】
 after_exit【s】
is_special_key = 0
 before start_loop【s】
 after start_loop【s】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【s<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【s<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【s】
 mode:【i to i】
 start error 【s】
 error2 【s】
 after error 【s】
 brefore retry : s:char=【s】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【d】
 before_getchar【d】
【after get esc】
 after_if【d】
 before_exit【d】
 after_exit【d】
is_special_key = 0
 before start_loop【d】
 after start_loop【d】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【d<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【d<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【d】
 mode:【i to i】
 start error 【d】
 error2 【d】
 after error 【d】
 brefore retry : s:char=【d】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【a】
 before_getchar【a】
【after get esc】
 after_if【a】
 before_exit【a】
 after_exit【a】
is_special_key = 0
 before start_loop【a】
 after start_loop【a】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【a<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【a<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【a】
 mode:【i to i】
 start error 【a】
 error2 【a】
 after error 【a】
 brefore retry : s:char=【a】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【s】
 before_getchar【s】
【after get esc】
 after_if【s】
 before_exit【s】
 after_exit【s】
is_special_key = 0
 before start_loop【s】
 after start_loop【s】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【s<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【s<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【s】
 mode:【i to i】
 start error 【s】
 error2 【s】
 after error 【s】
 brefore retry : s:char=【s】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【d】
 before_getchar【d】
【after get esc】
 after_if【d】
 before_exit【d】
 after_exit【d】
is_special_key = 0
 before start_loop【d】
 after start_loop【d】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【d<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【d<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【d】
 mode:【i to i】
 start error 【d】
 error2 【d】
 after error 【d】
 brefore retry : s:char=【d】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【 】
 before_getchar【 】
【l:map】<Space>     * <C-G>u<Space>
【after get esc】
 after_if【 】
 before_exit【 】
 after_exit【 】
is_special_key = 0
 before start_loop【 】
 after start_loop【 】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【 <80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【 <80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【 】
 mode:【i to i】
 start error 【 】
 error2 【 】
 after error 【 】
 brefore retry : s:char=【 】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【a】
 before_getchar【a】
【after get esc】
 after_if【a】
 before_exit【a】
 after_exit【a】
is_special_key = 0
 before start_loop【a】
 after start_loop【a】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【a<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【a<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【a】
 mode:【i to i】
 start error 【a】
 error2 【a】
 after error 【a】
 brefore retry : s:char=【a】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【s】
 before_getchar【s】
【after get esc】
 after_if【s】
 before_exit【s】
 after_exit【s】
is_special_key = 0
 before start_loop【s】
 after start_loop【s】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【s<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【s<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【s】
 mode:【i to i】
 start error 【s】
 error2 【s】
 after error 【s】
 brefore retry : s:char=【s】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【d】
 before_getchar【d】
【after get esc】
 after_if【d】
 before_exit【d】
 after_exit【d】
is_special_key = 0
 before start_loop【d】
 after start_loop【d】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【d<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【d<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【d】
 mode:【i to i】
 start error 【d】
 error2 【d】
 after error 【d】
 brefore retry : s:char=【d】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【^Z】
 before_getchar【^Z】
【l:map】<C-Z>       * <C-O>u
【after get esc】
 after_if【^Z】
 before_exit【^Z】
 after_exit【^Z】
is_special_key = 0
 before start_loop【^Z】
 after start_loop【^Z】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【^Z】
 mode:【i to i】
 start error 【^Z】
 error2 【^Z】
 after error 【^Z】
 brefore retry : s:char=【^Z】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【^Z】
 before_getchar【^Z】
【l:map】<C-Z>       * <C-O>u
【after get esc】
 after_if【^Z】
 before_exit【^Z】
 after_exit【^Z】
is_special_key = 0
 before start_loop【^Z】
 after start_loop【^Z】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【^Z】
 mode:【i to i】
 start error 【^Z】
 error2 【^Z】
 after error 【^Z】
 brefore retry : s:char=【^Z】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【^Z】
 before_getchar【^Z】
【l:map】<C-Z>       * <C-O>u
【after get esc】
 after_if【^Z】
 before_exit【^Z】
 after_exit【^Z】
is_special_key = 0
 before start_loop【^Z】
 after start_loop【^Z】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【^Z】
 mode:【i to i】
 start error 【^Z】
 error2 【^Z】
 after error 【^Z】
 brefore retry : s:char=【^Z】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【^Z】
 before_getchar【^Z】
【l:map】<C-Z>       * <C-O>u
【after get esc】
 after_if【^Z】
 before_exit【^Z】
 after_exit【^Z】
is_special_key = 0
 before start_loop【^Z】
 after start_loop【^Z】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【^Z】
 mode:【i to i】
 start error 【^Z】
 error2 【^Z】
 after error 【^Z】
 brefore retry : s:char=【^Z】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【^Z】
 before_getchar【^Z】
【l:map】<C-Z>       * <C-O>u
【after get esc】
 after_if【^Z】
 before_exit【^Z】
 after_exit【^Z】
is_special_key = 0
 before start_loop【^Z】
 after start_loop【^Z】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【^Z】
 mode:【i to i】
 start error 【^Z】
 error2 【^Z】
 after error 【^Z】
 brefore retry : s:char=【^Z】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【^Z】
 before_getchar【^Z】
【l:map】<C-Z>       * <C-O>u
【after get esc】
 after_if【^Z】
 before_exit【^Z】
 after_exit【^Z】
is_special_key = 0
 before start_loop【^Z】
 after start_loop【^Z】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
invalid input: from mode i to 
now mode: n
after invalid input: from mode i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
invalid input: from mode i to i
now mode: n
after invalid input: from mode i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【^Z】
 mode:【i to i】
 start error 【^Z】
 error2 【^Z】
 can't be replayed in 2cursors 【^Z】
 after error 【^Z】
 brefore retry : s:char=【^Z】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【a】
 before_getchar【a】
【after get esc】
 after_if【a】
 before_exit【a】
 after_exit【a】
is_special_key = 0
 before start_loop【a】
 after start_loop【a】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【a<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【a<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【a】
 mode:【i to i】
 start error 【a】
 error2 【a】
 after error 【a】
 brefore retry : s:char=【a】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【s】
 before_getchar【s】
【after get esc】
 after_if【s】
 before_exit【s】
 after_exit【s】
is_special_key = 0
 before start_loop【s】
 after start_loop【s】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【s<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【s<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【s】
 mode:【i to i】
 start error 【s】
 error2 【s】
 after error 【s】
 brefore retry : s:char=【s】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【d】
 before_getchar【d】
【after get esc】
 after_if【d】
 before_exit【d】
 after_exit【d】
is_special_key = 0
 before start_loop【d】
 after start_loop【d】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【d<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【d<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【d】
 mode:【i to i】
 start error 【d】
 error2 【d】
 after error 【d】
 brefore retry : s:char=【d】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【 】
 before_getchar【 】
【l:map】<Space>     * <C-G>u<Space>
【after get esc】
 after_if【 】
 before_exit【 】
 after_exit【 】
is_special_key = 0
 before start_loop【 】
 after start_loop【 】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【 <80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【 <80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【 】
 mode:【i to i】
 start error 【 】
 error2 【 】
 after error 【 】
 brefore retry : s:char=【 】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【 】
 before_getchar【 】
【l:map】<Space>     * <C-G>u<Space>
【after get esc】
 after_if【 】
 before_exit【 】
 after_exit【 】
is_special_key = 0
 before start_loop【 】
 after start_loop【 】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【 <80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【 <80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【 】
 mode:【i to i】
 start error 【 】
 error2 【 】
 after error 【 】
 brefore retry : s:char=【 】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【s】
 before_getchar【s】
【after get esc】
 after_if【s】
 before_exit【s】
 after_exit【s】
is_special_key = 0
 before start_loop【s】
 after start_loop【s】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【s<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【s<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【s】
 mode:【i to i】
 start error 【s】
 error2 【s】
 after error 【s】
 brefore retry : s:char=【s】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【a】
 before_getchar【a】
【after get esc】
 after_if【a】
 before_exit【a】
 after_exit【a】
is_special_key = 0
 before start_loop【a】
 after start_loop【a】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【a<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【a<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【a】
 mode:【i to i】
 start error 【a】
 error2 【a】
 after error 【a】
 brefore retry : s:char=【a】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【d】
 before_getchar【d】
【after get esc】
 after_if【d】
 before_exit【d】
 after_exit【d】
is_special_key = 0
 before start_loop【d】
 after start_loop【d】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【d<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【d<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【d】
 mode:【i to i】
 start error 【d】
 error2 【d】
 after error 【d】
 brefore retry : s:char=【d】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【f】
 before_getchar【f】
【after get esc】
 after_if【f】
 before_exit【f】
 after_exit【f】
is_special_key = 0
 before start_loop【f】
 after start_loop【f】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【f<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【f<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【f】
 mode:【i to i】
 start error 【f】
 error2 【f】
 after error 【f】
 brefore retry : s:char=【f】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【^Z】
 before_getchar【^Z】
【l:map】<C-Z>       * <C-O>u
【after get esc】
 after_if【^Z】
 before_exit【^Z】
 after_exit【^Z】
is_special_key = 0
 before start_loop【^Z】
 after start_loop【^Z】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【^Z】
 mode:【i to i】
 start error 【^Z】
 error2 【^Z】
 after error 【^Z】
 brefore retry : s:char=【^Z】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【^Z】
 before_getchar【^Z】
【l:map】<C-Z>       * <C-O>u
【after get esc】
 after_if【^Z】
 before_exit【^Z】
 after_exit【^Z】
is_special_key = 0
 before start_loop【^Z】
 after start_loop【^Z】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【^Z】
 mode:【i to i】
 start error 【^Z】
 error2 【^Z】
 after error 【^Z】
 brefore retry : s:char=【^Z】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【^Z】
 before_getchar【^Z】
【l:map】<C-Z>       * <C-O>u
【after get esc】
 after_if【^Z】
 before_exit【^Z】
 after_exit【^Z】
is_special_key = 0
 before start_loop【^Z】
 after start_loop【^Z】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
invalid input: from mode i to i
now mode: n
after invalid input: from mode i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【^Z】
 mode:【i to i】
 start error 【^Z】
 error2 【^Z】
 can't be replayed in 1cursors 【^Z】
 after error 【^Z】
 brefore retry : s:char=【^Z】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【≈】
 before_getchar【≈】
【after get esc】
 after_if【≈】
 before_exit【≈】
 start 【】
 mode:【i to 】
 start error 【】
 error2 【】
 after error 【】
 brefore retry : s:char=【】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【^D】
 before_getchar【^D】
【l:map】<C-D>       * :<C-U>stopinsert<CR>gv:<C-U>call multiple_cursors#new("v", 0)<CR>
【after get esc】
 after_if【^D】
 before_exit【^D】
 after_exit【^D】
is_special_key = 1
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-new-word)】
 feedkesys s:saved_keys=【】
 start 【^D】
 mode:【v to 】
 start error 【^D】
 error2 【^D】
 after error 【^D】
 brefore retry : s:char=【^D】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【v】
 before_getchar【v】
【after get esc】
 after_if【v】
 before_exit【v】
 after_exit【v】
is_special_key = 0
 before start_loop【v】
 after start_loop【v】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【v】
 type(c)=【0】
 before 【v<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to n
before mc-input3: from v to n
after mc-input5: from v to n
after mc-input: from v to n
before apply2 from v to n
before apply【v】
 type(c)=【0】
 before 【v<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to n
before mc-detect: from v to n
after mc-detect: from v to n
before mc-input: from v to n
before mc-input2: from v to n
before mc-input3: from v to n
before mc-input4: from v to n
after mc-input: from v to n
 start 【v】
 mode:【v to n】
 start error 【v】
 error2 【v】
 after error 【v】
 brefore retry : s:char=【v】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【a】
 before_getchar【a】
【after get esc】
 after_if【a】
 before_exit【a】
 after_exit【a】
is_special_key = 0
 before start_loop【a】
 after start_loop【a】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from n to 
before apply【a】
 type(c)=【0】
 before 【a<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from n to 
before mc-detect: from n to 
after mc-detect: from n to 
before mc-input: from n to 
before mc-input2: from n to i
before mc-input3: from n to i
after mc-input5: from n to i
after mc-input: from n to i
before apply1 from n to i
 type(c)=【0】
 before 【a<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from n to i
before mc-detect: from n to i
after mc-detect: from n to i
before mc-input: from n to i
before mc-input2: from n to i
before mc-input3: from n to i
before mc-input4: from n to i
after mc-input: from n to i
 start 【a】
 mode:【n to i】
 start error 【a】
 error2 【a】
 after error 【a】
 brefore retry : s:char=【a】
 s:retry_keys=【】
 s:saved_keys=【<80><fd>Rundojoin】
 before_if【<80><fd>Rundojoin】
 before_getchar【<80><fd>Rundojoin】
【l:map】<Plug>undojoin * <C-G>u <BS>
【after get esc】
 after_if【<80><fd>Rundojoin】
 before_exit【<80><fd>Rundojoin】
 after_exit【<80><fd>Rundojoin】
is_special_key = 0
 before start_loop【<80><fd>Rundojoin】
 after start_loop【<80><fd>Rundojoin】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【<80><fd>Rundojoin<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【<80><fd>Rundojoin<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【<80><fd>Rundojoin】
 mode:【i to i】
 start error 【<80><fd>Rundojoin】
 error2 【<80><fd>Rundojoin】
 after error 【<80><fd>Rundojoin】
 brefore retry : s:char=【<80><fd>Rundojoin】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【a】
 before_getchar【a】
【after get esc】
 after_if【a】
 before_exit【a】
 after_exit【a】
is_special_key = 0
 before start_loop【a】
 after start_loop【a】
 type(c)=【0】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【s】
before apply1 from i to 
 type(c)=【0】
 before 【a<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【s】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【a<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【s】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【a】
 mode:【i to i】
 start error 【a】
 error2 【a】
 after error 【a】
 brefore retry : s:char=【a】
 s:retry_keys=【】
 s:saved_keys=【s】
 before_if【s】
 before_getchar【s】
【after get esc】
 after_if【s】
 before_exit【s】
 after_exit【s】
is_special_key = 0
 before start_loop【s】
 after start_loop【s】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【s<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【s<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【s】
 mode:【i to i】
 start error 【s】
 error2 【s】
 after error 【s】
 brefore retry : s:char=【s】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【d】
 before_getchar【d】
【after get esc】
 after_if【d】
 before_exit【d】
 after_exit【d】
is_special_key = 0
 before start_loop【d】
 after start_loop【d】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【d<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【d<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【d】
 mode:【i to i】
 start error 【d】
 error2 【d】
 after error 【d】
 brefore retry : s:char=【d】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【f】
 before_getchar【f】
【after get esc】
 after_if【f】
 before_exit【f】
 after_exit【f】
is_special_key = 0
 before start_loop【f】
 after start_loop【f】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【f<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【f<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【f】
 mode:【i to i】
 start error 【f】
 error2 【f】
 after error 【f】
 brefore retry : s:char=【f】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【s】
 before_getchar【s】
【after get esc】
 after_if【s】
 before_exit【s】
 after_exit【s】
is_special_key = 0
 before start_loop【s】
 after start_loop【s】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【s<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【s<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【s】
 mode:【i to i】
 start error 【s】
 error2 【s】
 after error 【s】
 brefore retry : s:char=【s】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【d】
 before_getchar【d】
【after get esc】
 after_if【d】
 before_exit【d】
 after_exit【d】
is_special_key = 0
 before start_loop【d】
 after start_loop【d】
 type(c)=【0】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【a】
before apply1 from i to 
 type(c)=【0】
 before 【d<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【a】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【d<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【a】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【d】
 mode:【i to i】
 start error 【d】
 error2 【d】
 after error 【d】
 brefore retry : s:char=【d】
 s:retry_keys=【】
 s:saved_keys=【a】
 before_if【a】
 before_getchar【a】
【after get esc】
 after_if【a】
 before_exit【a】
 after_exit【a】
is_special_key = 0
 before start_loop【a】
 after start_loop【a】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【a<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【a<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【a】
 mode:【i to i】
 start error 【a】
 error2 【a】
 after error 【a】
 brefore retry : s:char=【a】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【f】
 before_getchar【f】
【after get esc】
 after_if【f】
 before_exit【f】
 after_exit【f】
is_special_key = 0
 before start_loop【f】
 after start_loop【f】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【f<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【f<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【f】
 mode:【i to i】
 start error 【f】
 error2 【f】
 after error 【f】
 brefore retry : s:char=【f】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【 】
 before_getchar【 】
【l:map】<Space>     * <C-G>u<Space>
【after get esc】
 after_if【 】
 before_exit【 】
 after_exit【 】
is_special_key = 0
 before start_loop【 】
 after start_loop【 】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【 <80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【 <80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【 】
 mode:【i to i】
 start error 【 】
 error2 【 】
 after error 【 】
 brefore retry : s:char=【 】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【 】
 before_getchar【 】
【l:map】<Space>     * <C-G>u<Space>
【after get esc】
 after_if【 】
 before_exit【 】
 after_exit【 】
is_special_key = 0
 before start_loop【 】
 after start_loop【 】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【 <80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【 <80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【 】
 mode:【i to i】
 start error 【 】
 error2 【 】
 after error 【 】
 brefore retry : s:char=【 】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【a】
 before_getchar【a】
【after get esc】
 after_if【a】
 before_exit【a】
 after_exit【a】
is_special_key = 0
 before start_loop【a】
 after start_loop【a】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【a<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 type(c)=【0】
 before 【a<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【s】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【a】
 mode:【i to i】
 start error 【a】
 error2 【a】
 after error 【a】
 brefore retry : s:char=【a】
 s:retry_keys=【】
 s:saved_keys=【s】
 before_if【s】
 before_getchar【s】
【after get esc】
 after_if【s】
 before_exit【s】
 after_exit【s】
is_special_key = 0
 before start_loop【s】
 after start_loop【s】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【s<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【s<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【s】
 mode:【i to i】
 start error 【s】
 error2 【s】
 after error 【s】
 brefore retry : s:char=【s】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【d】
 before_getchar【d】
【after get esc】
 after_if【d】
 before_exit【d】
 after_exit【d】
is_special_key = 0
 before start_loop【d】
 after start_loop【d】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【d<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【d<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【d】
 mode:【i to i】
 start error 【d】
 error2 【d】
 after error 【d】
 brefore retry : s:char=【d】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【^Z】
 before_getchar【^Z】
【l:map】<C-Z>       * <C-O>u
【after get esc】
 after_if【^Z】
 before_exit【^Z】
 after_exit【^Z】
is_special_key = 0
 before start_loop【^Z】
 after start_loop【^Z】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【^Z】
 mode:【i to i】
 start error 【^Z】
 error2 【^Z】
 after error 【^Z】
 brefore retry : s:char=【^Z】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【^Z】
 before_getchar【^Z】
【l:map】<C-Z>       * <C-O>u
【after get esc】
 after_if【^Z】
 before_exit【^Z】
 after_exit【^Z】
is_special_key = 0
 before start_loop【^Z】
 after start_loop【^Z】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【^Z】
 mode:【i to i】
 start error 【^Z】
 error2 【^Z】
 after error 【^Z】
 brefore retry : s:char=【^Z】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【^Z】
 before_getchar【^Z】
【l:map】<C-Z>       * <C-O>u
【after get esc】
 after_if【^Z】
 before_exit【^Z】
 after_exit【^Z】
is_special_key = 0
 before start_loop【^Z】
 after start_loop【^Z】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【^Z】
 mode:【i to i】
 start error 【^Z】
 error2 【^Z】
 after error 【^Z】
 brefore retry : s:char=【^Z】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【^Z】
 before_getchar【^Z】
【l:map】<C-Z>       * <C-O>u
【after get esc】
 after_if【^Z】
 before_exit【^Z】
 after_exit【^Z】
is_special_key = 0
 before start_loop【^Z】
 after start_loop【^Z】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
invalid input: from mode i to i
now mode: n
after invalid input: from mode i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【^Z】
 mode:【i to i】
 start error 【^Z】
 error2 【^Z】
 can't be replayed in 1cursors 【^Z】
 after error 【^Z】
 brefore retry : s:char=【^Z】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【^W】
 before_getchar【^W】
【l:map】<C-W>       * <C-O>:q<CR>
【after get esc】
 after_if【^W】
 before_exit【^W】
 after_exit【^W】
is_special_key = 0
 before start_loop【^W】
 after start_loop【^W】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【^W<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
 start 【】
 mode:【 to 】
 start error 【】
 error2 【】
 after error 【】
 brefore retry : s:char=【】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【^D】
 before_getchar【^D】
【l:map】<C-D>       * :<C-U>stopinsert<CR>gv:<C-U>call multiple_cursors#new("v", 0)<CR>
【after get esc】
 after_if【^D】
 before_exit【^D】
 after_exit【^D】
is_special_key = 1
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-new-word)】
 feedkesys s:saved_keys=【】
 start 【^D】
 mode:【v to 】
 start error 【^D】
 error2 【^D】
 after error 【^D】
 brefore retry : s:char=【^D】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【v】
 before_getchar【v】
【after get esc】
 after_if【v】
 before_exit【v】
 after_exit【v】
is_special_key = 0
 before start_loop【v】
 after start_loop【v】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【v】
 type(c)=【0】
 before 【v<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to n
before mc-input3: from v to n
after mc-input5: from v to n
after mc-input: from v to n
before apply2 from v to n
before apply【v】
 type(c)=【0】
 before 【v<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to n
before mc-detect: from v to n
after mc-detect: from v to n
before mc-input: from v to n
before mc-input2: from v to n
before mc-input3: from v to n
before mc-input4: from v to n
after mc-input: from v to n
 start 【v】
 mode:【v to n】
 start error 【v】
 error2 【v】
 after error 【v】
 brefore retry : s:char=【v】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【a】
 before_getchar【a】
【after get esc】
 after_if【a】
 before_exit【a】
 after_exit【a】
is_special_key = 0
 before start_loop【a】
 after start_loop【a】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from n to 
before apply【a】
 type(c)=【0】
 before 【a<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from n to 
before mc-detect: from n to 
after mc-detect: from n to 
before mc-input: from n to 
before mc-input2: from n to i
before mc-input3: from n to i
after mc-input5: from n to i
after mc-input: from n to i
before apply1 from n to i
 type(c)=【0】
 before 【a<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from n to i
before mc-detect: from n to i
after mc-detect: from n to i
before mc-input: from n to i
before mc-input2: from n to i
before mc-input3: from n to i
before mc-input4: from n to i
after mc-input: from n to i
 start 【a】
 mode:【n to i】
 start error 【a】
 error2 【a】
 after error 【a】
 brefore retry : s:char=【a】
 s:retry_keys=【】
 s:saved_keys=【<80><fd>Rundojoin】
 before_if【<80><fd>Rundojoin】
 before_getchar【<80><fd>Rundojoin】
【l:map】<Plug>undojoin * <C-G>u <BS>
【after get esc】
 after_if【<80><fd>Rundojoin】
 before_exit【<80><fd>Rundojoin】
 after_exit【<80><fd>Rundojoin】
is_special_key = 0
 before start_loop【<80><fd>Rundojoin】
 after start_loop【<80><fd>Rundojoin】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【<80><fd>Rundojoin<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【<80><fd>Rundojoin<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【<80><fd>Rundojoin】
 mode:【i to i】
 start error 【<80><fd>Rundojoin】
 error2 【<80><fd>Rundojoin】
 after error 【<80><fd>Rundojoin】
 brefore retry : s:char=【<80><fd>Rundojoin】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【a】
 before_getchar【a】
【after get esc】
 after_if【a】
 before_exit【a】
 after_exit【a】
is_special_key = 0
 before start_loop【a】
 after start_loop【a】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【a<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【a<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【a】
 mode:【i to i】
 start error 【a】
 error2 【a】
 after error 【a】
 brefore retry : s:char=【a】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【s】
 before_getchar【s】
【after get esc】
 after_if【s】
 before_exit【s】
 after_exit【s】
is_special_key = 0
 before start_loop【s】
 after start_loop【s】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【s<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【s<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【s】
 mode:【i to i】
 start error 【s】
 error2 【s】
 after error 【s】
 brefore retry : s:char=【s】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【d】
 before_getchar【d】
【after get esc】
 after_if【d】
 before_exit【d】
 after_exit【d】
is_special_key = 0
 before start_loop【d】
 after start_loop【d】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【d<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【d<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【d】
 mode:【i to i】
 start error 【d】
 error2 【d】
 after error 【d】
 brefore retry : s:char=【d】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【 】
 before_getchar【 】
【l:map】<Space>     * <C-G>u<Space>
【after get esc】
 after_if【 】
 before_exit【 】
 after_exit【 】
is_special_key = 0
 before start_loop【 】
 after start_loop【 】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【 <80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【 <80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【 】
 mode:【i to i】
 start error 【 】
 error2 【 】
 after error 【 】
 brefore retry : s:char=【 】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【 】
 before_getchar【 】
【l:map】<Space>     * <C-G>u<Space>
【after get esc】
 after_if【 】
 before_exit【 】
 after_exit【 】
is_special_key = 0
 before start_loop【 】
 after start_loop【 】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【 <80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【 <80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【 】
 mode:【i to i】
 start error 【 】
 error2 【 】
 after error 【 】
 brefore retry : s:char=【 】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【a】
 before_getchar【a】
【after get esc】
 after_if【a】
 before_exit【a】
 after_exit【a】
is_special_key = 0
 before start_loop【a】
 after start_loop【a】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【a<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【a<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【a】
 mode:【i to i】
 start error 【a】
 error2 【a】
 after error 【a】
 brefore retry : s:char=【a】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【d】
 before_getchar【d】
【after get esc】
 after_if【d】
 before_exit【d】
 after_exit【d】
is_special_key = 0
 before start_loop【d】
 after start_loop【d】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【d<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【d<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【d】
 mode:【i to i】
 start error 【d】
 error2 【d】
 after error 【d】
 brefore retry : s:char=【d】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【q】
 before_getchar【q】
【after get esc】
 after_if【q】
 before_exit【q】
 after_exit【q】
is_special_key = 0
 before start_loop【q】
 after start_loop【q】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【q<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【q<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【q】
 mode:【i to i】
 start error 【q】
 error2 【q】
 after error 【q】
 brefore retry : s:char=【q】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【w】
 before_getchar【w】
【after get esc】
 after_if【w】
 before_exit【w】
 after_exit【w】
is_special_key = 0
 before start_loop【w】
 after start_loop【w】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【w<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【w<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【w】
 mode:【i to i】
 start error 【w】
 error2 【w】
 after error 【w】
 brefore retry : s:char=【w】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【q】
 before_getchar【q】
【after get esc】
 after_if【q】
 before_exit【q】
 after_exit【q】
is_special_key = 0
 before start_loop【q】
 after start_loop【q】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【q<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【q<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【q】
 mode:【i to i】
 start error 【q】
 error2 【q】
 after error 【q】
 brefore retry : s:char=【q】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【w】
 before_getchar【w】
【after get esc】
 after_if【w】
 before_exit【w】
 after_exit【w】
is_special_key = 0
 before start_loop【w】
 after start_loop【w】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【w<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【w<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【w】
 mode:【i to i】
 start error 【w】
 error2 【w】
 after error 【w】
 brefore retry : s:char=【w】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【d】
 before_getchar【d】
【after get esc】
 after_if【d】
 before_exit【d】
 after_exit【d】
is_special_key = 0
 before start_loop【d】
 after start_loop【d】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【d<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【d<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【d】
 mode:【i to i】
 start error 【d】
 error2 【d】
 after error 【d】
 brefore retry : s:char=【d】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【 】
 before_getchar【 】
【l:map】<Space>     * <C-G>u<Space>
【after get esc】
 after_if【 】
 before_exit【 】
 after_exit【 】
is_special_key = 0
 before start_loop【 】
 after start_loop【 】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【 <80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【 <80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【 】
 mode:【i to i】
 start error 【 】
 error2 【 】
 after error 【 】
 brefore retry : s:char=【 】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【 】
 before_getchar【 】
【l:map】<Space>     * <C-G>u<Space>
【after get esc】
 after_if【 】
 before_exit【 】
 after_exit【 】
is_special_key = 0
 before start_loop【 】
 after start_loop【 】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【 <80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【 <80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【 】
 mode:【i to i】
 start error 【 】
 error2 【 】
 after error 【 】
 brefore retry : s:char=【 】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【 】
 before_getchar【 】
【l:map】<Space>     * <C-G>u<Space>
【after get esc】
 after_if【 】
 before_exit【 】
 after_exit【 】
is_special_key = 0
 before start_loop【 】
 after start_loop【 】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【 <80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【 <80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【 】
 mode:【i to i】
 start error 【 】
 error2 【 】
 after error 【 】
 brefore retry : s:char=【 】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【 】
 before_getchar【 】
【l:map】<Space>     * <C-G>u<Space>
【after get esc】
 after_if【 】
 before_exit【 】
 after_exit【 】
is_special_key = 0
 before start_loop【 】
 after start_loop【 】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【 <80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【 <80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【 】
 mode:【i to i】
 start error 【 】
 error2 【 】
 after error 【 】
 brefore retry : s:char=【 】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【^Z】
 before_getchar【^Z】
【l:map】<C-Z>       * <C-O>u
【after get esc】
 after_if【^Z】
 before_exit【^Z】
 after_exit【^Z】
is_special_key = 0
 before start_loop【^Z】
 after start_loop【^Z】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【^Z】
 mode:【i to i】
 start error 【^Z】
 error2 【^Z】
 after error 【^Z】
 brefore retry : s:char=【^Z】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【^Z】
 before_getchar【^Z】
【l:map】<C-Z>       * <C-O>u
【after get esc】
 after_if【^Z】
 before_exit【^Z】
 after_exit【^Z】
is_special_key = 0
 before start_loop【^Z】
 after start_loop【^Z】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【^Z】
 mode:【i to i】
 start error 【^Z】
 error2 【^Z】
 after error 【^Z】
 brefore retry : s:char=【^Z】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【^Z】
 before_getchar【^Z】
【l:map】<C-Z>       * <C-O>u
【after get esc】
 after_if【^Z】
 before_exit【^Z】
 after_exit【^Z】
is_special_key = 0
 before start_loop【^Z】
 after start_loop【^Z】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【^Z】
 mode:【i to i】
 start error 【^Z】
 error2 【^Z】
 after error 【^Z】
 brefore retry : s:char=【^Z】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【^Z】
 before_getchar【^Z】
【l:map】<C-Z>       * <C-O>u
【after get esc】
 after_if【^Z】
 before_exit【^Z】
 after_exit【^Z】
is_special_key = 0
 before start_loop【^Z】
 after start_loop【^Z】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【^Z】
 mode:【i to i】
 start error 【^Z】
 error2 【^Z】
 after error 【^Z】
 brefore retry : s:char=【^Z】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【^Z】
 before_getchar【^Z】
【l:map】<C-Z>       * <C-O>u
【after get esc】
 after_if【^Z】
 before_exit【^Z】
 after_exit【^Z】
is_special_key = 0
 before start_loop【^Z】
 after start_loop【^Z】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【^Z】
 mode:【i to i】
 start error 【^Z】
 error2 【^Z】
 after error 【^Z】
 brefore retry : s:char=【^Z】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【^Z】
 before_getchar【^Z】
【l:map】<C-Z>       * <C-O>u
【after get esc】
 after_if【^Z】
 before_exit【^Z】
 after_exit【^Z】
is_special_key = 0
 before start_loop【^Z】
 after start_loop【^Z】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【^Z】
 mode:【i to i】
 start error 【^Z】
 error2 【^Z】
 after error 【^Z】
 brefore retry : s:char=【^Z】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【^Z】
 before_getchar【^Z】
【l:map】<C-Z>       * <C-O>u
【after get esc】
 after_if【^Z】
 before_exit【^Z】
 after_exit【^Z】
is_special_key = 0
 before start_loop【^Z】
 after start_loop【^Z】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【^Z】
 mode:【i to i】
 start error 【^Z】
 error2 【^Z】
 after error 【^Z】
 brefore retry : s:char=【^Z】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【^Z】
 before_getchar【^Z】
【l:map】<C-Z>       * <C-O>u
【after get esc】
 after_if【^Z】
 before_exit【^Z】
 after_exit【^Z】
is_special_key = 0
 before start_loop【^Z】
 after start_loop【^Z】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
invalid input: from mode i to 
now mode: n
after invalid input: from mode i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
invalid input: from mode i to i
now mode: n
after invalid input: from mode i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【^Z】
 mode:【i to i】
 start error 【^Z】
 error2 【^Z】
 can't be replayed in 2cursors 【^Z】
 after error 【^Z】
 brefore retry : s:char=【^Z】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【a】
 before_getchar【a】
【after get esc】
 after_if【a】
 before_exit【a】
 after_exit【a】
is_special_key = 0
 before start_loop【a】
 after start_loop【a】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【a<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 type(c)=【0】
 before 【a<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【s】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【a】
 mode:【i to i】
 start error 【a】
 error2 【a】
 after error 【a】
 brefore retry : s:char=【a】
 s:retry_keys=【】
 s:saved_keys=【s】
 before_if【s】
 before_getchar【s】
【after get esc】
 after_if【s】
 before_exit【s】
 after_exit【s】
is_special_key = 0
 before start_loop【s】
 after start_loop【s】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【s<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【s<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【s】
 mode:【i to i】
 start error 【s】
 error2 【s】
 after error 【s】
 brefore retry : s:char=【s】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【d】
 before_getchar【d】
【after get esc】
 after_if【d】
 before_exit【d】
 after_exit【d】
is_special_key = 0
 before start_loop【d】
 after start_loop【d】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【d<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【d<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【d】
 mode:【i to i】
 start error 【d】
 error2 【d】
 after error 【d】
 brefore retry : s:char=【d】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【f】
 before_getchar【f】
【after get esc】
 after_if【f】
 before_exit【f】
 after_exit【f】
is_special_key = 0
 before start_loop【f】
 after start_loop【f】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【f<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【f<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【f】
 mode:【i to i】
 start error 【f】
 error2 【f】
 after error 【f】
 brefore retry : s:char=【f】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【 】
 before_getchar【 】
【l:map】<Space>     * <C-G>u<Space>
【after get esc】
 after_if【 】
 before_exit【 】
 after_exit【 】
is_special_key = 0
 before start_loop【 】
 after start_loop【 】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【 <80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【 <80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【 】
 mode:【i to i】
 start error 【 】
 error2 【 】
 after error 【 】
 brefore retry : s:char=【 】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【s】
 before_getchar【s】
【after get esc】
 after_if【s】
 before_exit【s】
 after_exit【s】
is_special_key = 0
 before start_loop【s】
 after start_loop【s】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【s<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【s<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【s】
 mode:【i to i】
 start error 【s】
 error2 【s】
 after error 【s】
 brefore retry : s:char=【s】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【a】
 before_getchar【a】
【after get esc】
 after_if【a】
 before_exit【a】
 after_exit【a】
is_special_key = 0
 before start_loop【a】
 after start_loop【a】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【a<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 type(c)=【0】
 before 【a<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【d】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【a】
 mode:【i to i】
 start error 【a】
 error2 【a】
 after error 【a】
 brefore retry : s:char=【a】
 s:retry_keys=【】
 s:saved_keys=【d】
 before_if【d】
 before_getchar【d】
【after get esc】
 after_if【d】
 before_exit【d】
 after_exit【d】
is_special_key = 0
 before start_loop【d】
 after start_loop【d】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【d<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【d<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【d】
 mode:【i to i】
 start error 【d】
 error2 【d】
 after error 【d】
 brefore retry : s:char=【d】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【f】
 before_getchar【f】
【after get esc】
 after_if【f】
 before_exit【f】
 after_exit【f】
is_special_key = 0
 before start_loop【f】
 after start_loop【f】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【f<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【f<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【f】
 mode:【i to i】
 start error 【f】
 error2 【f】
 after error 【f】
 brefore retry : s:char=【f】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【 】
 before_getchar【 】
【l:map】<Space>     * <C-G>u<Space>
【after get esc】
 after_if【 】
 before_exit【 】
 after_exit【 】
is_special_key = 0
 before start_loop【 】
 after start_loop【 】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【 <80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【 <80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【 】
 mode:【i to i】
 start error 【 】
 error2 【 】
 after error 【 】
 brefore retry : s:char=【 】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【a】
 before_getchar【a】
【after get esc】
 after_if【a】
 before_exit【a】
 after_exit【a】
is_special_key = 0
 before start_loop【a】
 after start_loop【a】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【a<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【a<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【a】
 mode:【i to i】
 start error 【a】
 error2 【a】
 after error 【a】
 brefore retry : s:char=【a】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【 】
 before_getchar【 】
【l:map】<Space>     * <C-G>u<Space>
【after get esc】
 after_if【 】
 before_exit【 】
 after_exit【 】
is_special_key = 0
 before start_loop【 】
 after start_loop【 】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【 <80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【 <80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【 】
 mode:【i to i】
 start error 【 】
 error2 【 】
 after error 【 】
 brefore retry : s:char=【 】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【f】
 before_getchar【f】
【after get esc】
 after_if【f】
 before_exit【f】
 after_exit【f】
is_special_key = 0
 before start_loop【f】
 after start_loop【f】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【f<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【f<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【f】
 mode:【i to i】
 start error 【f】
 error2 【f】
 after error 【f】
 brefore retry : s:char=【f】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【a】
 before_getchar【a】
【after get esc】
 after_if【a】
 before_exit【a】
 after_exit【a】
is_special_key = 0
 before start_loop【a】
 after start_loop【a】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【a<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【a<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【a】
 mode:【i to i】
 start error 【a】
 error2 【a】
 after error 【a】
 brefore retry : s:char=【a】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【 】
 before_getchar【 】
【l:map】<Space>     * <C-G>u<Space>
【after get esc】
 after_if【 】
 before_exit【 】
 after_exit【 】
is_special_key = 0
 before start_loop【 】
 after start_loop【 】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【 <80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【 <80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【 】
 mode:【i to i】
 start error 【 】
 error2 【 】
 after error 【 】
 brefore retry : s:char=【 】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【d】
 before_getchar【d】
【after get esc】
 after_if【d】
 before_exit【d】
 after_exit【d】
is_special_key = 0
 before start_loop【d】
 after start_loop【d】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【d<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【d<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【d】
 mode:【i to i】
 start error 【d】
 error2 【d】
 after error 【d】
 brefore retry : s:char=【d】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【s】
 before_getchar【s】
【after get esc】
 after_if【s】
 before_exit【s】
 after_exit【s】
is_special_key = 0
 before start_loop【s】
 after start_loop【s】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【s<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【s<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【s】
 mode:【i to i】
 start error 【s】
 error2 【s】
 after error 【s】
 brefore retry : s:char=【s】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【a】
 before_getchar【a】
【after get esc】
 after_if【a】
 before_exit【a】
 after_exit【a】
is_special_key = 0
 before start_loop【a】
 after start_loop【a】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【a<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【a<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【a】
 mode:【i to i】
 start error 【a】
 error2 【a】
 after error 【a】
 brefore retry : s:char=【a】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【 】
 before_getchar【 】
【l:map】<Space>     * <C-G>u<Space>
【after get esc】
 after_if【 】
 before_exit【 】
 after_exit【 】
is_special_key = 0
 before start_loop【 】
 after start_loop【 】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【 <80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【 <80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【 】
 mode:【i to i】
 start error 【 】
 error2 【 】
 after error 【 】
 brefore retry : s:char=【 】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【f】
 before_getchar【f】
【after get esc】
 after_if【f】
 before_exit【f】
 after_exit【f】
is_special_key = 0
 before start_loop【f】
 after start_loop【f】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【f<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【f<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【f】
 mode:【i to i】
 start error 【f】
 error2 【f】
 after error 【f】
 brefore retry : s:char=【f】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【a】
 before_getchar【a】
【after get esc】
 after_if【a】
 before_exit【a】
 after_exit【a】
is_special_key = 0
 before start_loop【a】
 after start_loop【a】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【a<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 type(c)=【0】
 before 【a<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【 】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【a】
 mode:【i to i】
 start error 【a】
 error2 【a】
 after error 【a】
 brefore retry : s:char=【a】
 s:retry_keys=【】
 s:saved_keys=【 】
 before_if【 】
 before_getchar【 】
【l:map】<Space>     * <C-G>u<Space>
【after get esc】
 after_if【 】
 before_exit【 】
 after_exit【 】
is_special_key = 0
 before start_loop【 】
 after start_loop【 】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【 <80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【 <80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【 】
 mode:【i to i】
 start error 【 】
 error2 【 】
 after error 【 】
 brefore retry : s:char=【 】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【d】
 before_getchar【d】
【after get esc】
 after_if【d】
 before_exit【d】
 after_exit【d】
is_special_key = 0
 before start_loop【d】
 after start_loop【d】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【d<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 type(c)=【0】
 before 【d<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【s】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【d】
 mode:【i to i】
 start error 【d】
 error2 【d】
 after error 【d】
 brefore retry : s:char=【d】
 s:retry_keys=【】
 s:saved_keys=【s】
 before_if【s】
 before_getchar【s】
【after get esc】
 after_if【s】
 before_exit【s】
 after_exit【s】
is_special_key = 0
 before start_loop【s】
 after start_loop【s】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【s<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【s<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【s】
 mode:【i to i】
 start error 【s】
 error2 【s】
 after error 【s】
 brefore retry : s:char=【s】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【f】
 before_getchar【f】
【after get esc】
 after_if【f】
 before_exit【f】
 after_exit【f】
is_special_key = 0
 before start_loop【f】
 after start_loop【f】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【f<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【f<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【f】
 mode:【i to i】
 start error 【f】
 error2 【f】
 after error 【f】
 brefore retry : s:char=【f】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【 】
 before_getchar【 】
【l:map】<Space>     * <C-G>u<Space>
【after get esc】
 after_if【 】
 before_exit【 】
 after_exit【 】
is_special_key = 0
 before start_loop【 】
 after start_loop【 】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【 <80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【 <80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【 】
 mode:【i to i】
 start error 【 】
 error2 【 】
 after error 【 】
 brefore retry : s:char=【 】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【w】
 before_getchar【w】
【after get esc】
 after_if【w】
 before_exit【w】
 after_exit【w】
is_special_key = 0
 before start_loop【w】
 after start_loop【w】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【w<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【w<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【w】
 mode:【i to i】
 start error 【w】
 error2 【w】
 after error 【w】
 brefore retry : s:char=【w】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【q】
 before_getchar【q】
【after get esc】
 after_if【q】
 before_exit【q】
 after_exit【q】
is_special_key = 0
 before start_loop【q】
 after start_loop【q】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【q<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【q<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【q】
 mode:【i to i】
 start error 【q】
 error2 【q】
 after error 【q】
 brefore retry : s:char=【q】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【 】
 before_getchar【 】
【l:map】<Space>     * <C-G>u<Space>
【after get esc】
 after_if【 】
 before_exit【 】
 after_exit【 】
is_special_key = 0
 before start_loop【 】
 after start_loop【 】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【 <80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【 <80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【 】
 mode:【i to i】
 start error 【 】
 error2 【 】
 after error 【 】
 brefore retry : s:char=【 】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【f】
 before_getchar【f】
【after get esc】
 after_if【f】
 before_exit【f】
 after_exit【f】
is_special_key = 0
 before start_loop【f】
 after start_loop【f】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【f<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【f<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【f】
 mode:【i to i】
 start error 【f】
 error2 【f】
 after error 【f】
 brefore retry : s:char=【f】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【 】
 before_getchar【 】
【l:map】<Space>     * <C-G>u<Space>
【after get esc】
 after_if【 】
 before_exit【 】
 after_exit【 】
is_special_key = 0
 before start_loop【 】
 after start_loop【 】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【 <80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【 <80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【 】
 mode:【i to i】
 start error 【 】
 error2 【 】
 after error 【 】
 brefore retry : s:char=【 】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【s】
 before_getchar【s】
【after get esc】
 after_if【s】
 before_exit【s】
 after_exit【s】
is_special_key = 0
 before start_loop【s】
 after start_loop【s】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【s<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【s<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【s】
 mode:【i to i】
 start error 【s】
 error2 【s】
 after error 【s】
 brefore retry : s:char=【s】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【a】
 before_getchar【a】
【after get esc】
 after_if【a】
 before_exit【a】
 after_exit【a】
is_special_key = 0
 before start_loop【a】
 after start_loop【a】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【a<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【a<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【a】
 mode:【i to i】
 start error 【a】
 error2 【a】
 after error 【a】
 brefore retry : s:char=【a】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【d】
 before_getchar【d】
【after get esc】
 after_if【d】
 before_exit【d】
 after_exit【d】
is_special_key = 0
 before start_loop【d】
 after start_loop【d】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【d<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【d<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【d】
 mode:【i to i】
 start error 【d】
 error2 【d】
 after error 【d】
 brefore retry : s:char=【d】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【f】
 before_getchar【f】
【after get esc】
 after_if【f】
 before_exit【f】
 after_exit【f】
is_special_key = 0
 before start_loop【f】
 after start_loop【f】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【f<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【f<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【f】
 mode:【i to i】
 start error 【f】
 error2 【f】
 after error 【f】
 brefore retry : s:char=【f】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【 】
 before_getchar【 】
【l:map】<Space>     * <C-G>u<Space>
【after get esc】
 after_if【 】
 before_exit【 】
 after_exit【 】
is_special_key = 0
 before start_loop【 】
 after start_loop【 】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【 <80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【 <80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【 】
 mode:【i to i】
 start error 【 】
 error2 【 】
 after error 【 】
 brefore retry : s:char=【 】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【a】
 before_getchar【a】
【after get esc】
 after_if【a】
 before_exit【a】
 after_exit【a】
is_special_key = 0
 before start_loop【a】
 after start_loop【a】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【a<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【a<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【a】
 mode:【i to i】
 start error 【a】
 error2 【a】
 after error 【a】
 brefore retry : s:char=【a】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【s】
 before_getchar【s】
【after get esc】
 after_if【s】
 before_exit【s】
 after_exit【s】
is_special_key = 0
 before start_loop【s】
 after start_loop【s】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【s<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【s<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【s】
 mode:【i to i】
 start error 【s】
 error2 【s】
 after error 【s】
 brefore retry : s:char=【s】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【^Z】
 before_getchar【^Z】
【l:map】<C-Z>       * <C-O>u
【after get esc】
 after_if【^Z】
 before_exit【^Z】
 after_exit【^Z】
is_special_key = 0
 before start_loop【^Z】
 after start_loop【^Z】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【^Z】
 mode:【i to i】
 start error 【^Z】
 error2 【^Z】
 after error 【^Z】
 brefore retry : s:char=【^Z】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【^Z】
 before_getchar【^Z】
【l:map】<C-Z>       * <C-O>u
【after get esc】
 after_if【^Z】
 before_exit【^Z】
 after_exit【^Z】
is_special_key = 0
 before start_loop【^Z】
 after start_loop【^Z】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【^Z】
 mode:【i to i】
 start error 【^Z】
 error2 【^Z】
 after error 【^Z】
 brefore retry : s:char=【^Z】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【^Z】
 before_getchar【^Z】
【l:map】<C-Z>       * <C-O>u
【after get esc】
 after_if【^Z】
 before_exit【^Z】
 after_exit【^Z】
is_special_key = 0
 before start_loop【^Z】
 after start_loop【^Z】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【^Z】
 mode:【i to i】
 start error 【^Z】
 error2 【^Z】
 after error 【^Z】
 brefore retry : s:char=【^Z】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【^Z】
 before_getchar【^Z】
【l:map】<C-Z>       * <C-O>u
【after get esc】
 after_if【^Z】
 before_exit【^Z】
 after_exit【^Z】
is_special_key = 0
 before start_loop【^Z】
 after start_loop【^Z】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【^Z】
 mode:【i to i】
 start error 【^Z】
 error2 【^Z】
 after error 【^Z】
 brefore retry : s:char=【^Z】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【^Z】
 before_getchar【^Z】
【l:map】<C-Z>       * <C-O>u
【after get esc】
 after_if【^Z】
 before_exit【^Z】
 after_exit【^Z】
is_special_key = 0
 before start_loop【^Z】
 after start_loop【^Z】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【^Z】
 mode:【i to i】
 start error 【^Z】
 error2 【^Z】
 after error 【^Z】
 brefore retry : s:char=【^Z】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【^Z】
 before_getchar【^Z】
【l:map】<C-Z>       * <C-O>u
【after get esc】
 after_if【^Z】
 before_exit【^Z】
 after_exit【^Z】
is_special_key = 0
 before start_loop【^Z】
 after start_loop【^Z】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【^Z】
 mode:【i to i】
 start error 【^Z】
 error2 【^Z】
 after error 【^Z】
 brefore retry : s:char=【^Z】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【^Z】
 before_getchar【^Z】
【l:map】<C-Z>       * <C-O>u
【after get esc】
 after_if【^Z】
 before_exit【^Z】
 after_exit【^Z】
is_special_key = 0
 before start_loop【^Z】
 after start_loop【^Z】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【^Z】
 mode:【i to i】
 start error 【^Z】
 error2 【^Z】
 after error 【^Z】
 brefore retry : s:char=【^Z】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【^Z】
 before_getchar【^Z】
【l:map】<C-Z>       * <C-O>u
【after get esc】
 after_if【^Z】
 before_exit【^Z】
 after_exit【^Z】
is_special_key = 0
 before start_loop【^Z】
 after start_loop【^Z】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【^Z】
 mode:【i to i】
 start error 【^Z】
 error2 【^Z】
 after error 【^Z】
 brefore retry : s:char=【^Z】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【^Z】
 before_getchar【^Z】
【l:map】<C-Z>       * <C-O>u
【after get esc】
 after_if【^Z】
 before_exit【^Z】
 after_exit【^Z】
is_special_key = 0
 before start_loop【^Z】
 after start_loop【^Z】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【^Z】
 mode:【i to i】
 start error 【^Z】
 error2 【^Z】
 after error 【^Z】
 brefore retry : s:char=【^Z】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【^Z】
 before_getchar【^Z】
【l:map】<C-Z>       * <C-O>u
【after get esc】
 after_if【^Z】
 before_exit【^Z】
 after_exit【^Z】
is_special_key = 0
 before start_loop【^Z】
 after start_loop【^Z】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【^Z】
 mode:【i to i】
 start error 【^Z】
 error2 【^Z】
 after error 【^Z】
 brefore retry : s:char=【^Z】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【^Z】
 before_getchar【^Z】
【l:map】<C-Z>       * <C-O>u
【after get esc】
 after_if【^Z】
 before_exit【^Z】
 after_exit【^Z】
is_special_key = 0
 before start_loop【^Z】
 after start_loop【^Z】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【^Z】
 mode:【i to i】
 start error 【^Z】
 error2 【^Z】
 after error 【^Z】
 brefore retry : s:char=【^Z】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【^Z】
 before_getchar【^Z】
【l:map】<C-Z>       * <C-O>u
【after get esc】
 after_if【^Z】
 before_exit【^Z】
 after_exit【^Z】
is_special_key = 0
 before start_loop【^Z】
 after start_loop【^Z】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【^Z】
 mode:【i to i】
 start error 【^Z】
 error2 【^Z】
 after error 【^Z】
 brefore retry : s:char=【^Z】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【^Z】
 before_getchar【^Z】
【l:map】<C-Z>       * <C-O>u
【after get esc】
 after_if【^Z】
 before_exit【^Z】
 after_exit【^Z】
is_special_key = 0
 before start_loop【^Z】
 after start_loop【^Z】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
invalid input: from mode i to i
now mode: n
after invalid input: from mode i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【^Z】
 mode:【i to i】
 start error 【^Z】
 error2 【^Z】
 can't be replayed in 1cursors 【^Z】
 after error 【^Z】
 brefore retry : s:char=【^Z】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【^Z】
 before_getchar【^Z】
【l:map】<C-Z>       * <C-O>u
【after get esc】
 after_if【^Z】
 before_exit【^Z】
 after_exit【^Z】
is_special_key = 0
 before start_loop【^Z】
 after start_loop【^Z】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
invalid input: from mode i to 
now mode: n
after invalid input: from mode i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
invalid input: from mode i to i
now mode: n
after invalid input: from mode i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【^Z】
 mode:【i to i】
 start error 【^Z】
 error2 【^Z】
 can't be replayed in 2cursors 【^Z】
 after error 【^Z】
 brefore retry : s:char=【^Z】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【^Z】
 before_getchar【^Z】
【l:map】<C-Z>       * <C-O>u
【after get esc】
 after_if【^Z】
 before_exit【^Z】
 after_exit【^Z】
is_special_key = 0
 before start_loop【^Z】
 after start_loop【^Z】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
invalid input: from mode i to 
now mode: n
after invalid input: from mode i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
invalid input: from mode i to i
now mode: n
after invalid input: from mode i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【^Z】
 mode:【i to i】
 start error 【^Z】
 error2 【^Z】
 can't be replayed in 2cursors 【^Z】
 after error 【^Z】
 brefore retry : s:char=【^Z】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【^Z】
 before_getchar【^Z】
【l:map】<C-Z>       * <C-O>u
【after get esc】
 after_if【^Z】
 before_exit【^Z】
 after_exit【^Z】
is_special_key = 0
 before start_loop【^Z】
 after start_loop【^Z】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
invalid input: from mode i to 
now mode: n
after invalid input: from mode i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
invalid input: from mode i to i
now mode: n
after invalid input: from mode i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【^Z】
 mode:【i to i】
 start error 【^Z】
 error2 【^Z】
 can't be replayed in 2cursors 【^Z】
 after error 【^Z】
 brefore retry : s:char=【^Z】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【^Z】
 before_getchar【^Z】
【l:map】<C-Z>       * <C-O>u
【after get esc】
 after_if【^Z】
 before_exit【^Z】
 after_exit【^Z】
is_special_key = 0
 before start_loop【^Z】
 after start_loop【^Z】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
invalid input: from mode i to 
now mode: n
after invalid input: from mode i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
invalid input: from mode i to i
now mode: n
after invalid input: from mode i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【^Z】
 mode:【i to i】
 start error 【^Z】
 error2 【^Z】
 can't be replayed in 2cursors 【^Z】
 after error 【^Z】
 brefore retry : s:char=【^Z】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【^Z】
 before_getchar【^Z】
【l:map】<C-Z>       * <C-O>u
【after get esc】
 after_if【^Z】
 before_exit【^Z】
 after_exit【^Z】
is_special_key = 0
 before start_loop【^Z】
 after start_loop【^Z】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
invalid input: from mode i to 
now mode: n
after invalid input: from mode i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
invalid input: from mode i to i
now mode: n
after invalid input: from mode i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【^Z】
 mode:【i to i】
 start error 【^Z】
 error2 【^Z】
 can't be replayed in 2cursors 【^Z】
 after error 【^Z】
 brefore retry : s:char=【^Z】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【^W】
 before_getchar【^W】
【l:map】<C-W>       * <C-O>:q<CR>
【after get esc】
 after_if【^W】
 before_exit【^W】
 after_exit【^W】
is_special_key = 0
 before start_loop【^W】
 after start_loop【^W】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【^W<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
 start 【】
 mode:【 to 】
 start error 【】
 error2 【】
 after error 【】
 brefore retry : s:char=【】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【^D】
 before_getchar【^D】
【l:map】<C-D>       * :<C-U>stopinsert<CR>gv:<C-U>call multiple_cursors#new("v", 0)<CR>
【after get esc】
 after_if【^D】
 before_exit【^D】
 after_exit【^D】
is_special_key = 1
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-new-word)】
 feedkesys s:saved_keys=【】
 start 【^D】
 mode:【v to 】
 start error 【^D】
 error2 【^D】
 after error 【^D】
 brefore retry : s:char=【^D】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kr】
 before_getchar【<80>kr】
【after get esc】
 after_if【<80>kr】
 before_exit【<80>kr】
 after_exit【<80>kr】
is_special_key = 0
 before start_loop【<80>kr】
 after start_loop【<80>kr】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kr】
 type(c)=【0】
 before 【<80>kr<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
after mc-input5: from v to v
after mc-input: from v to v
before apply2 from v to v
before apply【<80>kr】
 type(c)=【0】
 before 【<80>kr<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to v
before mc-detect: from v to v
after mc-detect: from v to v
before mc-input: from v to v
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kr】
 mode:【v to v】
 start error 【<80>kr】
 error2 【<80>kr】
 after error 【<80>kr】
 brefore retry : s:char=【<80>kr】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【a】
 before_getchar【a】
【after get esc】
 after_if【a】
 before_exit【a】
 after_exit【a】
is_special_key = 0
 before start_loop【a】
 after start_loop【a】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【a】
 type(c)=【0】
 before 【a<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
invalid input: from mode v to 
now mode: v
after invalid input: from mode v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
after mc-input5: from v to v
after mc-input: from v to v
before apply2 from v to v
before apply【a】
 type(c)=【0】
 before 【a<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to v
before mc-detect: from v to v
after mc-detect: from v to v
invalid input: from mode v to v
now mode: v
after invalid input: from mode v to v
before mc-input: from v to v
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【a】
 mode:【v to v】
 start error 【a】
 error1 【a】
 after error 【a】
 brefore retry : s:char=【a】
 s:retry_keys=【a】
 s:saved_keys=【】
 before_if【as】
 before_getchar【as】
【after get esc】
 after_if【as】
 before_exit【as】
 after_exit【as】
is_special_key = 0
 before start_loop【as】
 after start_loop【as】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【as】
 type(c)=【0】
 before 【as<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
after mc-input5: from v to v
after mc-input: from v to v
before apply2 from v to v
before apply【as】
 type(c)=【0】
 before 【as<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to v
before mc-detect: from v to v
after mc-detect: from v to v
before mc-input: from v to v
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【as】
 mode:【v to v】
 start error 【as】
 error2 【as】
 after error 【as】
 brefore retry : s:char=【as】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【d】
 before_getchar【d】
【l:map】d             d:call system('nc localhost 8377', @")<CR>
【after get esc】
 after_if【d】
 before_exit【d】
 after_exit【d】
is_special_key = 0
 before start_loop【d】
 after start_loop【d】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【d】
 type(c)=【0】
 before 【d<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to n
before mc-input3: from v to n
after mc-input5: from v to n
after mc-input: from v to n
before apply2 from v to n
before apply【d】
 type(c)=【0】
 type(c)=【0】
 before 【d<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【f】
after apply2 from v to n
before mc-detect: from v to n
after mc-detect: from v to n
before mc-input: from v to n
before mc-input2: from v to n
before mc-input3: from v to n
before mc-input4: from v to n
after mc-input: from v to n
 start 【d】
 mode:【v to n】
 start error 【d】
 error2 【d】
 after error 【d】
 brefore retry : s:char=【d】
 s:retry_keys=【】
 s:saved_keys=【f】
 before_if【f】
 before_getchar【f】
【after get esc】
 after_if【f】
 before_exit【f】
 after_exit【f】
is_special_key = 0
 before start_loop【f】
 after start_loop【f】
 type(c)=【0】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【s】
before apply2 from n to 
before apply【f】
 type(c)=【0】
 before 【f<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【s】
after apply2 from n to 
before mc-detect: from n to 
after mc-detect: from n to 
invalid input: from mode n to 
now mode: n
after invalid input: from mode n to 
before mc-input: from n to 
before mc-input2: from n to n
before mc-input3: from n to n
after mc-input5: from n to n
after mc-input: from n to n
before apply2 from n to n
before apply【f】
 type(c)=【0】
 before 【f<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【s】
after apply2 from n to n
before mc-detect: from n to n
after mc-detect: from n to n
invalid input: from mode n to n
now mode: n
after invalid input: from mode n to n
before mc-input: from n to n
before mc-input2: from n to n
before mc-input3: from n to n
before mc-input4: from n to n
after mc-input: from n to n
 start 【f】
 mode:【n to n】
 start error 【f】
 error1 【f】
 after error 【f】
 brefore retry : s:char=【f】
 s:retry_keys=【f】
 s:saved_keys=【s】
 before_if【fs】
 before_getchar【fs】
【after get esc】
 after_if【fs】
 before_exit【fs】
 after_exit【fs】
is_special_key = 0
 before start_loop【fs】
 after start_loop【fs】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from n to 
before apply【fs】
 type(c)=【0】
 before 【fs<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from n to 
before mc-detect: from n to 
after mc-detect: from n to 
invalid input: from mode n to 
now mode: n
after invalid input: from mode n to 
before mc-input: from n to 
before mc-input2: from n to n
before mc-input3: from n to n
after mc-input5: from n to n
after mc-input: from n to n
before apply2 from n to n
before apply【fs】
 type(c)=【0】
 before 【fs<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from n to n
before mc-detect: from n to n
after mc-detect: from n to n
invalid input: from mode n to n
now mode: n
after invalid input: from mode n to n
before mc-input: from n to n
before mc-input2: from n to n
before mc-input3: from n to n
before mc-input4: from n to n
after mc-input: from n to n
 start 【fs】
 mode:【n to n】
 start error 【fs】
 error1 【fs】
 after error 【fs】
 brefore retry : s:char=【fs】
 s:retry_keys=【fs】
 s:saved_keys=【】
 before_if【fs^Z】
 before_getchar【fs^Z】
【after get esc】
 after_if【fs^Z】
 before_exit【fs^Z】
 after_exit【fs^Z】
is_special_key = 0
 before start_loop【fs^Z】
 after start_loop【fs^Z】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from n to 
before apply【fs^Z】
 type(c)=【0】
 before 【fs^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from n to 
before mc-detect: from n to 
after mc-detect: from n to 
invalid input: from mode n to 
now mode: n
after invalid input: from mode n to 
before mc-input: from n to 
before mc-input2: from n to n
before mc-input3: from n to n
after mc-input5: from n to n
after mc-input: from n to n
before apply2 from n to n
before apply【fs^Z】
 type(c)=【0】
 before 【fs^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from n to n
before mc-detect: from n to n
after mc-detect: from n to n
invalid input: from mode n to n
now mode: n
after invalid input: from mode n to n
before mc-input: from n to n
before mc-input2: from n to n
before mc-input3: from n to n
before mc-input4: from n to n
after mc-input: from n to n
 start 【fs^Z】
 mode:【n to n】
 start error 【fs^Z】
 error1 【fs^Z】
 after error 【fs^Z】
 brefore retry : s:char=【fs^Z】
 s:retry_keys=【fs^Z】
 s:saved_keys=【】
 before_if【fs^Z^Z】
 before_getchar【fs^Z^Z】
【after get esc】
 after_if【fs^Z^Z】
 before_exit【fs^Z^Z】
 after_exit【fs^Z^Z】
is_special_key = 0
 before start_loop【fs^Z^Z】
 after start_loop【fs^Z^Z】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from n to 
before apply【fs^Z^Z】
 type(c)=【0】
 before 【fs^Z^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from n to 
before mc-detect: from n to 
after mc-detect: from n to 
invalid input: from mode n to 
now mode: n
after invalid input: from mode n to 
before mc-input: from n to 
before mc-input2: from n to n
before mc-input3: from n to n
after mc-input5: from n to n
after mc-input: from n to n
before apply2 from n to n
before apply【fs^Z^Z】
 type(c)=【0】
 before 【fs^Z^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from n to n
before mc-detect: from n to n
after mc-detect: from n to n
invalid input: from mode n to n
now mode: n
after invalid input: from mode n to n
before mc-input: from n to n
before mc-input2: from n to n
before mc-input3: from n to n
before mc-input4: from n to n
after mc-input: from n to n
 start 【fs^Z^Z】
 mode:【n to n】
 start error 【fs^Z^Z】
 error1 【fs^Z^Z】
 after error 【fs^Z^Z】
 brefore retry : s:char=【fs^Z^Z】
 s:retry_keys=【fs^Z^Z】
 s:saved_keys=【】
 before_if【fs^Z^Z^Z】
 before_getchar【fs^Z^Z^Z】
【after get esc】
 after_if【fs^Z^Z^Z】
 before_exit【fs^Z^Z^Z】
 after_exit【fs^Z^Z^Z】
is_special_key = 0
 before start_loop【fs^Z^Z^Z】
 after start_loop【fs^Z^Z^Z】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from n to 
before apply【fs^Z^Z^Z】
 type(c)=【0】
 before 【fs^Z^Z^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from n to 
before mc-detect: from n to 
after mc-detect: from n to 
invalid input: from mode n to 
now mode: n
after invalid input: from mode n to 
before mc-input: from n to 
before mc-input2: from n to n
before mc-input3: from n to n
after mc-input5: from n to n
after mc-input: from n to n
before apply2 from n to n
before apply【fs^Z^Z^Z】
 type(c)=【0】
 before 【fs^Z^Z^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from n to n
before mc-detect: from n to n
after mc-detect: from n to n
invalid input: from mode n to n
now mode: n
after invalid input: from mode n to n
before mc-input: from n to n
before mc-input2: from n to n
before mc-input3: from n to n
before mc-input4: from n to n
after mc-input: from n to n
 start 【fs^Z^Z^Z】
 mode:【n to n】
 start error 【fs^Z^Z^Z】
 error1 【fs^Z^Z^Z】
 after error 【fs^Z^Z^Z】
 brefore retry : s:char=【fs^Z^Z^Z】
 s:retry_keys=【fs^Z^Z^Z】
 s:saved_keys=【】
 before_if【fs^Z^Z^Z^Z】
 before_getchar【fs^Z^Z^Z^Z】
【after get esc】
 after_if【fs^Z^Z^Z^Z】
 before_exit【fs^Z^Z^Z^Z】
 after_exit【fs^Z^Z^Z^Z】
is_special_key = 0
 before start_loop【fs^Z^Z^Z^Z】
 after start_loop【fs^Z^Z^Z^Z】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from n to 
before apply【fs^Z^Z^Z^Z】
 type(c)=【0】
 before 【fs^Z^Z^Z^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from n to 
before mc-detect: from n to 
after mc-detect: from n to 
invalid input: from mode n to 
now mode: n
after invalid input: from mode n to 
before mc-input: from n to 
before mc-input2: from n to n
before mc-input3: from n to n
after mc-input5: from n to n
after mc-input: from n to n
before apply2 from n to n
before apply【fs^Z^Z^Z^Z】
 type(c)=【0】
 before 【fs^Z^Z^Z^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from n to n
before mc-detect: from n to n
after mc-detect: from n to n
invalid input: from mode n to n
now mode: n
after invalid input: from mode n to n
before mc-input: from n to n
before mc-input2: from n to n
before mc-input3: from n to n
before mc-input4: from n to n
after mc-input: from n to n
 start 【fs^Z^Z^Z^Z】
 mode:【n to n】
 start error 【fs^Z^Z^Z^Z】
 error1 【fs^Z^Z^Z^Z】
 after error 【fs^Z^Z^Z^Z】
 brefore retry : s:char=【fs^Z^Z^Z^Z】
 s:retry_keys=【fs^Z^Z^Z^Z】
 s:saved_keys=【】
 before_if【fs^Z^Z^Z^Z^Z】
 before_getchar【fs^Z^Z^Z^Z^Z】
【after get esc】
 after_if【fs^Z^Z^Z^Z^Z】
 before_exit【fs^Z^Z^Z^Z^Z】
 after_exit【fs^Z^Z^Z^Z^Z】
is_special_key = 0
 before start_loop【fs^Z^Z^Z^Z^Z】
 after start_loop【fs^Z^Z^Z^Z^Z】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from n to 
before apply【fs^Z^Z^Z^Z^Z】
 type(c)=【0】
 before 【fs^Z^Z^Z^Z^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from n to 
before mc-detect: from n to 
after mc-detect: from n to 
invalid input: from mode n to 
now mode: n
after invalid input: from mode n to 
before mc-input: from n to 
before mc-input2: from n to n
before mc-input3: from n to n
after mc-input5: from n to n
after mc-input: from n to n
before apply2 from n to n
before apply【fs^Z^Z^Z^Z^Z】
 type(c)=【0】
 before 【fs^Z^Z^Z^Z^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from n to n
before mc-detect: from n to n
after mc-detect: from n to n
invalid input: from mode n to n
now mode: n
after invalid input: from mode n to n
before mc-input: from n to n
before mc-input2: from n to n
before mc-input3: from n to n
before mc-input4: from n to n
after mc-input: from n to n
 start 【fs^Z^Z^Z^Z^Z】
 mode:【n to n】
 start error 【fs^Z^Z^Z^Z^Z】
 error1 【fs^Z^Z^Z^Z^Z】
 after error 【fs^Z^Z^Z^Z^Z】
 brefore retry : s:char=【fs^Z^Z^Z^Z^Z】
 s:retry_keys=【fs^Z^Z^Z^Z^Z】
 s:saved_keys=【】
 before_if【fs^Z^Z^Z^Z^Z^Z】
 before_getchar【fs^Z^Z^Z^Z^Z^Z】
【after get esc】
 after_if【fs^Z^Z^Z^Z^Z^Z】
 before_exit【fs^Z^Z^Z^Z^Z^Z】
 after_exit【fs^Z^Z^Z^Z^Z^Z】
is_special_key = 0
 before start_loop【fs^Z^Z^Z^Z^Z^Z】
 after start_loop【fs^Z^Z^Z^Z^Z^Z】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from n to 
before apply【fs^Z^Z^Z^Z^Z^Z】
 type(c)=【0】
 before 【fs^Z^Z^Z^Z^Z^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from n to 
before mc-detect: from n to 
after mc-detect: from n to 
invalid input: from mode n to 
now mode: n
after invalid input: from mode n to 
before mc-input: from n to 
before mc-input2: from n to n
before mc-input3: from n to n
after mc-input5: from n to n
after mc-input: from n to n
before apply2 from n to n
before apply【fs^Z^Z^Z^Z^Z^Z】
 type(c)=【0】
 before 【fs^Z^Z^Z^Z^Z^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from n to n
before mc-detect: from n to n
after mc-detect: from n to n
invalid input: from mode n to n
now mode: n
after invalid input: from mode n to n
before mc-input: from n to n
before mc-input2: from n to n
before mc-input3: from n to n
before mc-input4: from n to n
after mc-input: from n to n
 start 【fs^Z^Z^Z^Z^Z^Z】
 mode:【n to n】
 start error 【fs^Z^Z^Z^Z^Z^Z】
 error1 【fs^Z^Z^Z^Z^Z^Z】
 after error 【fs^Z^Z^Z^Z^Z^Z】
 brefore retry : s:char=【fs^Z^Z^Z^Z^Z^Z】
 s:retry_keys=【fs^Z^Z^Z^Z^Z^Z】
 s:saved_keys=【】
 before_if【fs^Z^Z^Z^Z^Z^Z^Z】
 before_getchar【fs^Z^Z^Z^Z^Z^Z^Z】
【after get esc】
 after_if【fs^Z^Z^Z^Z^Z^Z^Z】
 before_exit【fs^Z^Z^Z^Z^Z^Z^Z】
 after_exit【fs^Z^Z^Z^Z^Z^Z^Z】
is_special_key = 0
 before start_loop【fs^Z^Z^Z^Z^Z^Z^Z】
 after start_loop【fs^Z^Z^Z^Z^Z^Z^Z】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from n to 
before apply【fs^Z^Z^Z^Z^Z^Z^Z】
 type(c)=【0】
 before 【fs^Z^Z^Z^Z^Z^Z^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from n to 
before mc-detect: from n to 
after mc-detect: from n to 
invalid input: from mode n to 
now mode: n
after invalid input: from mode n to 
before mc-input: from n to 
before mc-input2: from n to n
before mc-input3: from n to n
after mc-input5: from n to n
after mc-input: from n to n
before apply2 from n to n
before apply【fs^Z^Z^Z^Z^Z^Z^Z】
 type(c)=【0】
 before 【fs^Z^Z^Z^Z^Z^Z^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from n to n
before mc-detect: from n to n
after mc-detect: from n to n
invalid input: from mode n to n
now mode: n
after invalid input: from mode n to n
before mc-input: from n to n
before mc-input2: from n to n
before mc-input3: from n to n
before mc-input4: from n to n
after mc-input: from n to n
 start 【fs^Z^Z^Z^Z^Z^Z^Z】
 mode:【n to n】
 start error 【fs^Z^Z^Z^Z^Z^Z^Z】
 error1 【fs^Z^Z^Z^Z^Z^Z^Z】
 after error 【fs^Z^Z^Z^Z^Z^Z^Z】
 brefore retry : s:char=【fs^Z^Z^Z^Z^Z^Z^Z】
 s:retry_keys=【fs^Z^Z^Z^Z^Z^Z^Z】
 s:saved_keys=【】
 before_if【fs^Z^Z^Z^Z^Z^Z^Z^Z】
 before_getchar【fs^Z^Z^Z^Z^Z^Z^Z^Z】
【after get esc】
 after_if【fs^Z^Z^Z^Z^Z^Z^Z^Z】
 before_exit【fs^Z^Z^Z^Z^Z^Z^Z^Z】
 after_exit【fs^Z^Z^Z^Z^Z^Z^Z^Z】
is_special_key = 0
 before start_loop【fs^Z^Z^Z^Z^Z^Z^Z^Z】
 after start_loop【fs^Z^Z^Z^Z^Z^Z^Z^Z】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from n to 
before apply【fs^Z^Z^Z^Z^Z^Z^Z^Z】
 type(c)=【0】
 before 【fs^Z^Z^Z^Z^Z^Z^Z^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from n to 
before mc-detect: from n to 
after mc-detect: from n to 
invalid input: from mode n to 
now mode: n
after invalid input: from mode n to 
before mc-input: from n to 
before mc-input2: from n to n
before mc-input3: from n to n
after mc-input5: from n to n
after mc-input: from n to n
before apply2 from n to n
before apply【fs^Z^Z^Z^Z^Z^Z^Z^Z】
 type(c)=【0】
 before 【fs^Z^Z^Z^Z^Z^Z^Z^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from n to n
before mc-detect: from n to n
after mc-detect: from n to n
invalid input: from mode n to n
now mode: n
after invalid input: from mode n to n
before mc-input: from n to n
before mc-input2: from n to n
before mc-input3: from n to n
before mc-input4: from n to n
after mc-input: from n to n
 start 【fs^Z^Z^Z^Z^Z^Z^Z^Z】
 mode:【n to n】
 start error 【fs^Z^Z^Z^Z^Z^Z^Z^Z】
 error1 【fs^Z^Z^Z^Z^Z^Z^Z^Z】
 after error 【fs^Z^Z^Z^Z^Z^Z^Z^Z】
 brefore retry : s:char=【fs^Z^Z^Z^Z^Z^Z^Z^Z】
 s:retry_keys=【fs^Z^Z^Z^Z^Z^Z^Z^Z】
 s:saved_keys=【】
 before_if【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z】
 before_getchar【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z】
【after get esc】
 after_if【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z】
 before_exit【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z】
 after_exit【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z】
is_special_key = 0
 before start_loop【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z】
 after start_loop【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from n to 
before apply【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z】
 type(c)=【0】
 before 【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from n to 
before mc-detect: from n to 
after mc-detect: from n to 
invalid input: from mode n to 
now mode: n
after invalid input: from mode n to 
before mc-input: from n to 
before mc-input2: from n to n
before mc-input3: from n to n
after mc-input5: from n to n
after mc-input: from n to n
before apply2 from n to n
before apply【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z】
 type(c)=【0】
 before 【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from n to n
before mc-detect: from n to n
after mc-detect: from n to n
invalid input: from mode n to n
now mode: n
after invalid input: from mode n to n
before mc-input: from n to n
before mc-input2: from n to n
before mc-input3: from n to n
before mc-input4: from n to n
after mc-input: from n to n
 start 【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z】
 mode:【n to n】
 start error 【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z】
 error1 【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z】
 after error 【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z】
 brefore retry : s:char=【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z】
 s:retry_keys=【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z】
 s:saved_keys=【】
 before_if【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z】
 before_getchar【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z】
【after get esc】
 after_if【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z】
 before_exit【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z】
 after_exit【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z】
is_special_key = 0
 before start_loop【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z】
 after start_loop【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from n to 
before apply【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z】
 type(c)=【0】
 before 【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from n to 
before mc-detect: from n to 
after mc-detect: from n to 
invalid input: from mode n to 
now mode: n
after invalid input: from mode n to 
before mc-input: from n to 
before mc-input2: from n to n
before mc-input3: from n to n
after mc-input5: from n to n
after mc-input: from n to n
before apply2 from n to n
before apply【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z】
 type(c)=【0】
 before 【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from n to n
before mc-detect: from n to n
after mc-detect: from n to n
invalid input: from mode n to n
now mode: n
after invalid input: from mode n to n
before mc-input: from n to n
before mc-input2: from n to n
before mc-input3: from n to n
before mc-input4: from n to n
after mc-input: from n to n
 start 【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z】
 mode:【n to n】
 start error 【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z】
 error1 【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z】
 after error 【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z】
 brefore retry : s:char=【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z】
 s:retry_keys=【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z】
 s:saved_keys=【】
 before_if【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z】
 before_getchar【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z】
【after get esc】
 after_if【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z】
 before_exit【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z】
 after_exit【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z】
is_special_key = 0
 before start_loop【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z】
 after start_loop【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from n to 
before apply【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z】
 type(c)=【0】
 before 【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from n to 
before mc-detect: from n to 
after mc-detect: from n to 
invalid input: from mode n to 
now mode: n
after invalid input: from mode n to 
before mc-input: from n to 
before mc-input2: from n to n
before mc-input3: from n to n
after mc-input5: from n to n
after mc-input: from n to n
before apply2 from n to n
before apply【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z】
 type(c)=【0】
 before 【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from n to n
before mc-detect: from n to n
after mc-detect: from n to n
invalid input: from mode n to n
now mode: n
after invalid input: from mode n to n
before mc-input: from n to n
before mc-input2: from n to n
before mc-input3: from n to n
before mc-input4: from n to n
after mc-input: from n to n
 start 【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z】
 mode:【n to n】
 start error 【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z】
 error1 【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z】
 after error 【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z】
 brefore retry : s:char=【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z】
 s:retry_keys=【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z】
 s:saved_keys=【】
 before_if【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z】
 before_getchar【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z】
【after get esc】
 after_if【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z】
 before_exit【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z】
 after_exit【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z】
is_special_key = 0
 before start_loop【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z】
 after start_loop【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from n to 
before apply【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z】
 type(c)=【0】
 before 【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from n to 
before mc-detect: from n to 
after mc-detect: from n to 
invalid input: from mode n to 
now mode: n
after invalid input: from mode n to 
before mc-input: from n to 
before mc-input2: from n to n
before mc-input3: from n to n
after mc-input5: from n to n
after mc-input: from n to n
before apply2 from n to n
before apply【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z】
 type(c)=【0】
 before 【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from n to n
before mc-detect: from n to n
after mc-detect: from n to n
invalid input: from mode n to n
now mode: n
after invalid input: from mode n to n
before mc-input: from n to n
before mc-input2: from n to n
before mc-input3: from n to n
before mc-input4: from n to n
after mc-input: from n to n
 start 【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z】
 mode:【n to n】
 start error 【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z】
 error1 【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z】
 after error 【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z】
 brefore retry : s:char=【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z】
 s:retry_keys=【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z】
 s:saved_keys=【】
 before_if【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z】
 before_getchar【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z】
【after get esc】
 after_if【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z】
 before_exit【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z】
 after_exit【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z】
is_special_key = 0
 before start_loop【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z】
 after start_loop【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from n to 
before apply【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z】
 type(c)=【0】
 before 【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from n to 
before mc-detect: from n to 
after mc-detect: from n to 
invalid input: from mode n to 
now mode: n
after invalid input: from mode n to 
before mc-input: from n to 
before mc-input2: from n to n
before mc-input3: from n to n
after mc-input5: from n to n
after mc-input: from n to n
before apply2 from n to n
before apply【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z】
 type(c)=【0】
 before 【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from n to n
before mc-detect: from n to n
after mc-detect: from n to n
invalid input: from mode n to n
now mode: n
after invalid input: from mode n to n
before mc-input: from n to n
before mc-input2: from n to n
before mc-input3: from n to n
before mc-input4: from n to n
after mc-input: from n to n
 start 【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z】
 mode:【n to n】
 start error 【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z】
 error1 【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z】
 after error 【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z】
 brefore retry : s:char=【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z】
 s:retry_keys=【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z】
 s:saved_keys=【】
 before_if【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z】
 before_getchar【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z】
【after get esc】
 after_if【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z】
 before_exit【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z】
 after_exit【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z】
is_special_key = 0
 before start_loop【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z】
 after start_loop【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from n to 
before apply【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z】
 type(c)=【0】
 before 【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from n to 
before mc-detect: from n to 
after mc-detect: from n to 
invalid input: from mode n to 
now mode: n
after invalid input: from mode n to 
before mc-input: from n to 
before mc-input2: from n to n
before mc-input3: from n to n
after mc-input5: from n to n
after mc-input: from n to n
before apply2 from n to n
before apply【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z】
 type(c)=【0】
 before 【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from n to n
before mc-detect: from n to n
after mc-detect: from n to n
invalid input: from mode n to n
now mode: n
after invalid input: from mode n to n
before mc-input: from n to n
before mc-input2: from n to n
before mc-input3: from n to n
before mc-input4: from n to n
after mc-input: from n to n
 start 【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z】
 mode:【n to n】
 start error 【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z】
 error1 【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z】
 after error 【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z】
 brefore retry : s:char=【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z】
 s:retry_keys=【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z】
 s:saved_keys=【】
 before_if【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z】
 before_getchar【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z】
【after get esc】
 after_if【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z】
 before_exit【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z】
 after_exit【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z】
is_special_key = 0
 before start_loop【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z】
 after start_loop【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from n to 
before apply【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z】
 type(c)=【0】
 before 【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from n to 
before mc-detect: from n to 
after mc-detect: from n to 
invalid input: from mode n to 
now mode: n
after invalid input: from mode n to 
before mc-input: from n to 
before mc-input2: from n to n
before mc-input3: from n to n
after mc-input5: from n to n
after mc-input: from n to n
before apply2 from n to n
before apply【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z】
 type(c)=【0】
 before 【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from n to n
before mc-detect: from n to n
after mc-detect: from n to n
invalid input: from mode n to n
now mode: n
after invalid input: from mode n to n
before mc-input: from n to n
before mc-input2: from n to n
before mc-input3: from n to n
before mc-input4: from n to n
after mc-input: from n to n
 start 【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z】
 mode:【n to n】
 start error 【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z】
 error1 【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z】
 after error 【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z】
 brefore retry : s:char=【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z】
 s:retry_keys=【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z】
 s:saved_keys=【】
 before_if【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z】
 before_getchar【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z】
【after get esc】
 after_if【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z】
 before_exit【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z】
 after_exit【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z】
is_special_key = 0
 before start_loop【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z】
 after start_loop【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from n to 
before apply【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z】
 type(c)=【0】
 before 【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from n to 
before mc-detect: from n to 
after mc-detect: from n to 
invalid input: from mode n to 
now mode: n
after invalid input: from mode n to 
before mc-input: from n to 
before mc-input2: from n to n
before mc-input3: from n to n
after mc-input5: from n to n
after mc-input: from n to n
before apply2 from n to n
before apply【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z】
 type(c)=【0】
 before 【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from n to n
before mc-detect: from n to n
after mc-detect: from n to n
invalid input: from mode n to n
now mode: n
after invalid input: from mode n to n
before mc-input: from n to n
before mc-input2: from n to n
before mc-input3: from n to n
before mc-input4: from n to n
after mc-input: from n to n
 start 【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z】
 mode:【n to n】
 start error 【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z】
 error1 【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z】
 after error 【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z】
 brefore retry : s:char=【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z】
 s:retry_keys=【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z】
 s:saved_keys=【】
 before_if【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z】
 before_getchar【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z】
【after get esc】
 after_if【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z】
 before_exit【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z】
 after_exit【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z】
is_special_key = 0
 before start_loop【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z】
 after start_loop【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from n to 
before apply【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z】
 type(c)=【0】
 before 【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from n to 
before mc-detect: from n to 
after mc-detect: from n to 
invalid input: from mode n to 
now mode: n
after invalid input: from mode n to 
before mc-input: from n to 
before mc-input2: from n to n
before mc-input3: from n to n
after mc-input5: from n to n
after mc-input: from n to n
before apply2 from n to n
before apply【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z】
 type(c)=【0】
 before 【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from n to n
before mc-detect: from n to n
after mc-detect: from n to n
invalid input: from mode n to n
now mode: n
after invalid input: from mode n to n
before mc-input: from n to n
before mc-input2: from n to n
before mc-input3: from n to n
before mc-input4: from n to n
after mc-input: from n to n
 start 【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z】
 mode:【n to n】
 start error 【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z】
 error1 【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z】
 after error 【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z】
 brefore retry : s:char=【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z】
 s:retry_keys=【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z】
 s:saved_keys=【】
 before_if【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z】
 before_getchar【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z】
【after get esc】
 after_if【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z】
 before_exit【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z】
 after_exit【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z】
is_special_key = 0
 before start_loop【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z】
 after start_loop【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from n to 
before apply【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z】
 type(c)=【0】
 before 【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from n to 
before mc-detect: from n to 
after mc-detect: from n to 
invalid input: from mode n to 
now mode: n
after invalid input: from mode n to 
before mc-input: from n to 
before mc-input2: from n to n
before mc-input3: from n to n
after mc-input5: from n to n
after mc-input: from n to n
before apply2 from n to n
before apply【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z】
 type(c)=【0】
 before 【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from n to n
before mc-detect: from n to n
after mc-detect: from n to n
invalid input: from mode n to n
now mode: n
after invalid input: from mode n to n
before mc-input: from n to n
before mc-input2: from n to n
before mc-input3: from n to n
before mc-input4: from n to n
after mc-input: from n to n
 start 【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z】
 mode:【n to n】
 start error 【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z】
 error1 【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z】
 after error 【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z】
 brefore retry : s:char=【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z】
 s:retry_keys=【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z】
 s:saved_keys=【】
 before_if【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z】
 before_getchar【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z】
【after get esc】
 after_if【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z】
 before_exit【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z】
 after_exit【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z】
is_special_key = 0
 before start_loop【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z】
 after start_loop【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from n to 
before apply【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z】
 type(c)=【0】
 before 【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from n to 
before mc-detect: from n to 
after mc-detect: from n to 
invalid input: from mode n to 
now mode: n
after invalid input: from mode n to 
before mc-input: from n to 
before mc-input2: from n to n
before mc-input3: from n to n
after mc-input5: from n to n
after mc-input: from n to n
before apply2 from n to n
before apply【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z】
 type(c)=【0】
 before 【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from n to n
before mc-detect: from n to n
after mc-detect: from n to n
invalid input: from mode n to n
now mode: n
after invalid input: from mode n to n
before mc-input: from n to n
before mc-input2: from n to n
before mc-input3: from n to n
before mc-input4: from n to n
after mc-input: from n to n
 start 【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z】
 mode:【n to n】
 start error 【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z】
 error1 【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z】
 after error 【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z】
 brefore retry : s:char=【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z】
 s:retry_keys=【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z】
 s:saved_keys=【】
 before_if【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈】
 before_getchar【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈】
【after get esc】
 after_if【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈】
 before_exit【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈】
 after_exit【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈】
is_special_key = 0
 before start_loop【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈】
 after start_loop【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from n to 
before apply【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈】
 type(c)=【0】
 before 【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from n to 
before mc-detect: from n to 
after mc-detect: from n to 
invalid input: from mode n to 
now mode: n
after invalid input: from mode n to 
before mc-input: from n to 
before mc-input2: from n to n
before mc-input3: from n to n
after mc-input5: from n to n
after mc-input: from n to n
before apply2 from n to n
before apply【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈】
 type(c)=【0】
 before 【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from n to n
before mc-detect: from n to n
after mc-detect: from n to n
invalid input: from mode n to n
now mode: n
after invalid input: from mode n to n
before mc-input: from n to n
before mc-input2: from n to n
before mc-input3: from n to n
before mc-input4: from n to n
after mc-input: from n to n
 start 【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈】
 mode:【n to n】
 start error 【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈】
 error1 【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈】
 after error 【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈】
 brefore retry : s:char=【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈】
 s:retry_keys=【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈】
 s:saved_keys=【】
 before_if【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z】
 before_getchar【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z】
【after get esc】
 after_if【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z】
 before_exit【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z】
 after_exit【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z】
is_special_key = 0
 before start_loop【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z】
 after start_loop【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from n to 
before apply【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z】
 type(c)=【0】
 before 【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from n to 
before mc-detect: from n to 
after mc-detect: from n to 
invalid input: from mode n to 
now mode: n
after invalid input: from mode n to 
before mc-input: from n to 
before mc-input2: from n to n
before mc-input3: from n to n
after mc-input5: from n to n
after mc-input: from n to n
before apply2 from n to n
before apply【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z】
 type(c)=【0】
 before 【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from n to n
before mc-detect: from n to n
after mc-detect: from n to n
invalid input: from mode n to n
now mode: n
after invalid input: from mode n to n
before mc-input: from n to n
before mc-input2: from n to n
before mc-input3: from n to n
before mc-input4: from n to n
after mc-input: from n to n
 start 【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z】
 mode:【n to n】
 start error 【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z】
 error1 【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z】
 after error 【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z】
 brefore retry : s:char=【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z】
 s:retry_keys=【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z】
 s:saved_keys=【】
 before_if【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z】
 before_getchar【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z】
【after get esc】
 after_if【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z】
 before_exit【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z】
 after_exit【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z】
is_special_key = 0
 before start_loop【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z】
 after start_loop【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from n to 
before apply【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z】
 type(c)=【0】
 before 【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from n to 
before mc-detect: from n to 
after mc-detect: from n to 
invalid input: from mode n to 
now mode: n
after invalid input: from mode n to 
before mc-input: from n to 
before mc-input2: from n to n
before mc-input3: from n to n
after mc-input5: from n to n
after mc-input: from n to n
before apply2 from n to n
before apply【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z】
 type(c)=【0】
 before 【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from n to n
before mc-detect: from n to n
after mc-detect: from n to n
invalid input: from mode n to n
now mode: n
after invalid input: from mode n to n
before mc-input: from n to n
before mc-input2: from n to n
before mc-input3: from n to n
before mc-input4: from n to n
after mc-input: from n to n
 start 【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z】
 mode:【n to n】
 start error 【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z】
 error1 【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z】
 after error 【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z】
 brefore retry : s:char=【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z】
 s:retry_keys=【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z】
 s:saved_keys=【】
 before_if【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z】
 before_getchar【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z】
【after get esc】
 after_if【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z】
 before_exit【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z】
 after_exit【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z】
is_special_key = 0
 before start_loop【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z】
 after start_loop【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from n to 
before apply【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z】
 type(c)=【0】
 before 【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from n to 
before mc-detect: from n to 
after mc-detect: from n to 
invalid input: from mode n to 
now mode: n
after invalid input: from mode n to 
before mc-input: from n to 
before mc-input2: from n to n
before mc-input3: from n to n
after mc-input5: from n to n
after mc-input: from n to n
before apply2 from n to n
before apply【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z】
 type(c)=【0】
 before 【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from n to n
before mc-detect: from n to n
after mc-detect: from n to n
invalid input: from mode n to n
now mode: n
after invalid input: from mode n to n
before mc-input: from n to n
before mc-input2: from n to n
before mc-input3: from n to n
before mc-input4: from n to n
after mc-input: from n to n
 start 【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z】
 mode:【n to n】
 start error 【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z】
 error1 【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z】
 after error 【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z】
 brefore retry : s:char=【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z】
 s:retry_keys=【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z】
 s:saved_keys=【】
 before_if【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z】
 before_getchar【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z】
【after get esc】
 after_if【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z】
 before_exit【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z】
 after_exit【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z】
is_special_key = 0
 before start_loop【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z】
 after start_loop【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from n to 
before apply【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z】
 type(c)=【0】
 before 【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from n to 
before mc-detect: from n to 
after mc-detect: from n to 
invalid input: from mode n to 
now mode: n
after invalid input: from mode n to 
before mc-input: from n to 
before mc-input2: from n to n
before mc-input3: from n to n
after mc-input5: from n to n
after mc-input: from n to n
before apply2 from n to n
before apply【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z】
 type(c)=【0】
 before 【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from n to n
before mc-detect: from n to n
after mc-detect: from n to n
invalid input: from mode n to n
now mode: n
after invalid input: from mode n to n
before mc-input: from n to n
before mc-input2: from n to n
before mc-input3: from n to n
before mc-input4: from n to n
after mc-input: from n to n
 start 【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z】
 mode:【n to n】
 start error 【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z】
 error1 【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z】
 after error 【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z】
 brefore retry : s:char=【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z】
 s:retry_keys=【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z】
 s:saved_keys=【】
 before_if【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈】
 before_getchar【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈】
【after get esc】
 after_if【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈】
 before_exit【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈】
 after_exit【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈】
is_special_key = 0
 before start_loop【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈】
 after start_loop【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from n to 
before apply【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈】
 type(c)=【0】
 before 【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from n to 
before mc-detect: from n to 
after mc-detect: from n to 
invalid input: from mode n to 
now mode: n
after invalid input: from mode n to 
before mc-input: from n to 
before mc-input2: from n to n
before mc-input3: from n to n
after mc-input5: from n to n
after mc-input: from n to n
before apply2 from n to n
before apply【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈】
 type(c)=【0】
 before 【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from n to n
before mc-detect: from n to n
after mc-detect: from n to n
invalid input: from mode n to n
now mode: n
after invalid input: from mode n to n
before mc-input: from n to n
before mc-input2: from n to n
before mc-input3: from n to n
before mc-input4: from n to n
after mc-input: from n to n
 start 【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈】
 mode:【n to n】
 start error 【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈】
 error1 【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈】
 after error 【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈】
 brefore retry : s:char=【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈】
 s:retry_keys=【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈】
 s:saved_keys=【】
 before_if【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,】
 before_getchar【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,】
【after get esc】
 after_if【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,】
 before_exit【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,】
 after_exit【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,】
is_special_key = 0
 before start_loop【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,】
 after start_loop【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from n to 
before apply【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,】
 type(c)=【0】
 before 【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from n to 
before mc-detect: from n to 
after mc-detect: from n to 
invalid input: from mode n to 
now mode: n
after invalid input: from mode n to 
before mc-input: from n to 
before mc-input2: from n to n
before mc-input3: from n to n
after mc-input5: from n to n
after mc-input: from n to n
before apply2 from n to n
before apply【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,】
 type(c)=【0】
 before 【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from n to n
before mc-detect: from n to n
after mc-detect: from n to n
invalid input: from mode n to n
now mode: n
after invalid input: from mode n to n
before mc-input: from n to n
before mc-input2: from n to n
before mc-input3: from n to n
before mc-input4: from n to n
after mc-input: from n to n
 start 【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,】
 mode:【n to n】
 start error 【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,】
 error1 【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,】
 after error 【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,】
 brefore retry : s:char=【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,】
 s:retry_keys=【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,】
 s:saved_keys=【】
 before_if【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.】
 before_getchar【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.】
【after get esc】
 after_if【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.】
 before_exit【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.】
 after_exit【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.】
is_special_key = 0
 before start_loop【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.】
 after start_loop【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from n to 
before apply【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.】
 type(c)=【0】
 before 【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from n to 
before mc-detect: from n to 
after mc-detect: from n to 
invalid input: from mode n to 
now mode: n
after invalid input: from mode n to 
before mc-input: from n to 
before mc-input2: from n to n
before mc-input3: from n to n
after mc-input5: from n to n
after mc-input: from n to n
before apply2 from n to n
before apply【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.】
 type(c)=【0】
 before 【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from n to n
before mc-detect: from n to n
after mc-detect: from n to n
invalid input: from mode n to n
now mode: n
after invalid input: from mode n to n
before mc-input: from n to n
before mc-input2: from n to n
before mc-input3: from n to n
before mc-input4: from n to n
after mc-input: from n to n
 start 【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.】
 mode:【n to n】
 start error 【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.】
 error1 【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.】
 after error 【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.】
 brefore retry : s:char=【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.】
 s:retry_keys=【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.】
 s:saved_keys=【】
 before_if【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v】
 before_getchar【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v】
【after get esc】
 after_if【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v】
 before_exit【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v】
 after_exit【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v】
is_special_key = 0
 before start_loop【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v】
 after start_loop【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from n to 
before apply【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v】
 type(c)=【0】
 before 【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from n to 
before mc-detect: from n to 
after mc-detect: from n to 
invalid input: from mode n to 
now mode: n
after invalid input: from mode n to 
before mc-input: from n to 
before mc-input2: from n to n
before mc-input3: from n to n
after mc-input5: from n to n
after mc-input: from n to n
before apply2 from n to n
before apply【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v】
 type(c)=【0】
 before 【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from n to n
before mc-detect: from n to n
after mc-detect: from n to n
invalid input: from mode n to n
now mode: n
after invalid input: from mode n to n
before mc-input: from n to n
before mc-input2: from n to n
before mc-input3: from n to n
before mc-input4: from n to n
after mc-input: from n to n
 start 【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v】
 mode:【n to n】
 start error 【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v】
 error1 【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v】
 after error 【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v】
 brefore retry : s:char=【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v】
 s:retry_keys=【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v】
 s:saved_keys=【】
 before_if【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈】
 before_getchar【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈】
【after get esc】
 after_if【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈】
 before_exit【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈】
 after_exit【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈】
is_special_key = 0
 before start_loop【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈】
 after start_loop【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from n to 
before apply【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈】
 type(c)=【0】
 before 【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from n to 
before mc-detect: from n to 
after mc-detect: from n to 
invalid input: from mode n to 
now mode: n
after invalid input: from mode n to 
before mc-input: from n to 
before mc-input2: from n to n
before mc-input3: from n to n
after mc-input5: from n to n
after mc-input: from n to n
before apply2 from n to n
before apply【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈】
 type(c)=【0】
 before 【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from n to n
before mc-detect: from n to n
after mc-detect: from n to n
invalid input: from mode n to n
now mode: n
after invalid input: from mode n to n
before mc-input: from n to n
before mc-input2: from n to n
before mc-input3: from n to n
before mc-input4: from n to n
after mc-input: from n to n
 start 【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈】
 mode:【n to n】
 start error 【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈】
 error1 【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈】
 after error 【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈】
 brefore retry : s:char=【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈】
 s:retry_keys=【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈】
 s:saved_keys=【】
 before_if【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈≈】
 before_getchar【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈≈】
【after get esc】
 after_if【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈≈】
 before_exit【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈≈】
 after_exit【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈≈】
is_special_key = 0
 before start_loop【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈≈】
 after start_loop【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈≈】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from n to 
before apply【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈≈】
 type(c)=【0】
 before 【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈≈<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from n to 
before mc-detect: from n to 
after mc-detect: from n to 
invalid input: from mode n to 
now mode: n
after invalid input: from mode n to 
before mc-input: from n to 
before mc-input2: from n to n
before mc-input3: from n to n
after mc-input5: from n to n
after mc-input: from n to n
before apply2 from n to n
before apply【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈≈】
 type(c)=【0】
 before 【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈≈<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from n to n
before mc-detect: from n to n
after mc-detect: from n to n
invalid input: from mode n to n
now mode: n
after invalid input: from mode n to n
before mc-input: from n to n
before mc-input2: from n to n
before mc-input3: from n to n
before mc-input4: from n to n
after mc-input: from n to n
 start 【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈≈】
 mode:【n to n】
 start error 【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈≈】
 error1 【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈≈】
 after error 【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈≈】
 brefore retry : s:char=【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈≈】
 s:retry_keys=【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈≈】
 s:saved_keys=【】
 before_if【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈≈】
 before_getchar【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈≈】
【after get esc】
 after_if【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈≈】
 before_exit【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈≈】
 after_exit【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈≈】
is_special_key = 0
 before start_loop【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈≈】
 after start_loop【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈≈】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from n to 
before apply【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈≈】
 type(c)=【0】
 before 【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈≈<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from n to 
before mc-detect: from n to 
after mc-detect: from n to 
invalid input: from mode n to 
now mode: n
after invalid input: from mode n to 
before mc-input: from n to 
before mc-input2: from n to n
before mc-input3: from n to n
after mc-input5: from n to n
after mc-input: from n to n
before apply2 from n to n
before apply【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈≈】
 type(c)=【0】
 before 【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈≈<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from n to n
before mc-detect: from n to n
after mc-detect: from n to n
invalid input: from mode n to n
now mode: n
after invalid input: from mode n to n
before mc-input: from n to n
before mc-input2: from n to n
before mc-input3: from n to n
before mc-input4: from n to n
after mc-input: from n to n
 start 【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈≈】
 mode:【n to n】
 start error 【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈≈】
 error1 【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈≈】
 after error 【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈≈】
 brefore retry : s:char=【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈≈】
 s:retry_keys=【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈≈】
 s:saved_keys=【】
 before_if【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈≈】
 before_getchar【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈≈】
【after get esc】
 after_if【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈≈】
 before_exit【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈≈】
 after_exit【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈≈】
is_special_key = 0
 before start_loop【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈≈】
 after start_loop【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈≈】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from n to 
before apply【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈≈】
 type(c)=【0】
 before 【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈≈<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from n to 
before mc-detect: from n to 
after mc-detect: from n to 
invalid input: from mode n to 
now mode: n
after invalid input: from mode n to 
before mc-input: from n to 
before mc-input2: from n to n
before mc-input3: from n to n
after mc-input5: from n to n
after mc-input: from n to n
before apply2 from n to n
before apply【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈≈】
 type(c)=【0】
 before 【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈≈<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from n to n
before mc-detect: from n to n
after mc-detect: from n to n
invalid input: from mode n to n
now mode: n
after invalid input: from mode n to n
before mc-input: from n to n
before mc-input2: from n to n
before mc-input3: from n to n
before mc-input4: from n to n
after mc-input: from n to n
 start 【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈≈】
 mode:【n to n】
 start error 【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈≈】
 error1 【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈≈】
 after error 【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈≈】
 brefore retry : s:char=【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈≈】
 s:retry_keys=【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈≈】
 s:saved_keys=【】
 before_if【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈≈^Z】
 before_getchar【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈≈^Z】
【after get esc】
 after_if【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈≈^Z】
 before_exit【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈≈^Z】
 after_exit【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈≈^Z】
is_special_key = 0
 before start_loop【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈≈^Z】
 after start_loop【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈≈^Z】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from n to 
before apply【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈≈^Z】
 type(c)=【0】
 before 【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈≈^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from n to 
before mc-detect: from n to 
after mc-detect: from n to 
invalid input: from mode n to 
now mode: n
after invalid input: from mode n to 
before mc-input: from n to 
before mc-input2: from n to n
before mc-input3: from n to n
after mc-input5: from n to n
after mc-input: from n to n
before apply2 from n to n
before apply【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈≈^Z】
 type(c)=【0】
 before 【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈≈^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from n to n
before mc-detect: from n to n
after mc-detect: from n to n
invalid input: from mode n to n
now mode: n
after invalid input: from mode n to n
before mc-input: from n to n
before mc-input2: from n to n
before mc-input3: from n to n
before mc-input4: from n to n
after mc-input: from n to n
 start 【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈≈^Z】
 mode:【n to n】
 start error 【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈≈^Z】
 error1 【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈≈^Z】
 after error 【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈≈^Z】
 brefore retry : s:char=【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈≈^Z】
 s:retry_keys=【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈≈^Z】
 s:saved_keys=【】
 before_if【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈≈^Z^X】
 before_getchar【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈≈^Z^X】
【after get esc】
 after_if【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈≈^Z^X】
 before_exit【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈≈^Z^X】
 after_exit【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈≈^Z^X】
is_special_key = 0
 before start_loop【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈≈^Z^X】
 after start_loop【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈≈^Z^X】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from n to 
before apply【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈≈^Z^X】
 type(c)=【0】
 before 【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈≈^Z^X<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from n to 
before mc-detect: from n to 
after mc-detect: from n to 
invalid input: from mode n to 
now mode: n
after invalid input: from mode n to 
before mc-input: from n to 
before mc-input2: from n to n
before mc-input3: from n to n
after mc-input5: from n to n
after mc-input: from n to n
before apply2 from n to n
before apply【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈≈^Z^X】
 type(c)=【0】
 before 【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈≈^Z^X<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from n to n
before mc-detect: from n to n
after mc-detect: from n to n
invalid input: from mode n to n
now mode: n
after invalid input: from mode n to n
before mc-input: from n to n
before mc-input2: from n to n
before mc-input3: from n to n
before mc-input4: from n to n
after mc-input: from n to n
 start 【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈≈^Z^X】
 mode:【n to n】
 start error 【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈≈^Z^X】
 error1 【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈≈^Z^X】
 after error 【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈≈^Z^X】
 brefore retry : s:char=【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈≈^Z^X】
 s:retry_keys=【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈≈^Z^X】
 s:saved_keys=【】
 before_if【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈≈^Z^X^C】
 before_getchar【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈≈^Z^X^C】
【after get esc】
 after_if【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈≈^Z^X^C】
 before_exit【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈≈^Z^X^C】
 after_exit【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈≈^Z^X^C】
is_special_key = 0
 before start_loop【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈≈^Z^X^C】
 after start_loop【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈≈^Z^X^C】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from n to 
before apply【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈≈^Z^X^C】
 type(c)=【0】
 before 【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈≈^Z^X^C<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from n to 
before mc-detect: from n to 
after mc-detect: from n to 
invalid input: from mode n to 
now mode: n
after invalid input: from mode n to 
before mc-input: from n to 
before mc-input2: from n to n
before mc-input3: from n to n
after mc-input5: from n to n
after mc-input: from n to n
before apply2 from n to n
before apply【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈≈^Z^X^C】
 type(c)=【0】
 before 【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈≈^Z^X^C<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from n to n
before mc-detect: from n to n
after mc-detect: from n to n
invalid input: from mode n to n
now mode: n
after invalid input: from mode n to n
before mc-input: from n to n
before mc-input2: from n to n
before mc-input3: from n to n
before mc-input4: from n to n
after mc-input: from n to n
 start 【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈≈^Z^X^C】
 mode:【n to n】
 start error 【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈≈^Z^X^C】
 error1 【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈≈^Z^X^C】
 after error 【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈≈^Z^X^C】
 brefore retry : s:char=【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈≈^Z^X^C】
 s:retry_keys=【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈≈^Z^X^C】
 s:saved_keys=【】
 before_if【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈≈^Z^X^C^D】
 before_getchar【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈≈^Z^X^C^D】
【after get esc】
 after_if【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈≈^Z^X^C^D】
 before_exit【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈≈^Z^X^C^D】
 after_exit【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈≈^Z^X^C^D】
is_special_key = 0
 before start_loop【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈≈^Z^X^C^D】
 after start_loop【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈≈^Z^X^C^D】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from n to 
before apply【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈≈^Z^X^C^D】
 type(c)=【0】
 before 【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈≈^Z^X^C^D<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from n to 
before mc-detect: from n to 
after mc-detect: from n to 
invalid input: from mode n to 
now mode: n
after invalid input: from mode n to 
before mc-input: from n to 
before mc-input2: from n to n
before mc-input3: from n to n
after mc-input5: from n to n
after mc-input: from n to n
before apply2 from n to n
before apply【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈≈^Z^X^C^D】
 type(c)=【0】
 before 【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈≈^Z^X^C^D<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from n to n
before mc-detect: from n to n
after mc-detect: from n to n
invalid input: from mode n to n
now mode: n
after invalid input: from mode n to n
before mc-input: from n to n
before mc-input2: from n to n
before mc-input3: from n to n
before mc-input4: from n to n
after mc-input: from n to n
 start 【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈≈^Z^X^C^D】
 mode:【n to n】
 start error 【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈≈^Z^X^C^D】
 error1 【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈≈^Z^X^C^D】
 after error 【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈≈^Z^X^C^D】
 brefore retry : s:char=【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈≈^Z^X^C^D】
 s:retry_keys=【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈≈^Z^X^C^D】
 s:saved_keys=【】
 before_if【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈≈^Z^X^C^D^[】
 before_getchar【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈≈^Z^X^C^D^[】
【after get esc】
 after_if【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈≈^Z^X^C^D^[】
 before_exit【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈≈^Z^X^C^D^[】
 after_exit【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈≈^Z^X^C^D^[】
is_special_key = 0
 before start_loop【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈≈^Z^X^C^D^[】
 after start_loop【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈≈^Z^X^C^D^[】
 type(c)=【0】
 type(c)=【0】
 type(c)=【0】
 type(c)=【0】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【^[^[^[^[】
before apply2 from n to 
before apply【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈≈^Z^X^C^D^[】
 type(c)=【0】
 before 【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈≈^Z^X^C^D^[<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【^[^[^[^[】
after apply2 from n to 
before mc-detect: from n to 
after mc-detect: from n to 
invalid input: from mode n to 
now mode: n
after invalid input: from mode n to 
before mc-input: from n to 
before mc-input2: from n to n
before mc-input3: from n to n
after mc-input5: from n to n
after mc-input: from n to n
before apply2 from n to n
before apply【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈≈^Z^X^C^D^[】
 type(c)=【0】
 before 【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈≈^Z^X^C^D^[<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【^[^[^[^[】
after apply2 from n to n
before mc-detect: from n to n
after mc-detect: from n to n
invalid input: from mode n to n
now mode: n
after invalid input: from mode n to n
before mc-input: from n to n
before mc-input2: from n to n
before mc-input3: from n to n
before mc-input4: from n to n
after mc-input: from n to n
 start 【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈≈^Z^X^C^D^[】
 mode:【n to n】
 start error 【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈≈^Z^X^C^D^[】
 error1 【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈≈^Z^X^C^D^[】
 after error 【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈≈^Z^X^C^D^[】
 brefore retry : s:char=【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈≈^Z^X^C^D^[】
 s:retry_keys=【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈≈^Z^X^C^D^[】
 s:saved_keys=【^[^[^[^[】
 before_if【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈≈^Z^X^C^D^[^[^[^[^[】
 before_getchar【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈≈^Z^X^C^D^[^[^[^[^[】
【after get esc】
 after_if【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈≈^Z^X^C^D^[^[^[^[^[】
 before_exit【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈≈^Z^X^C^D^[^[^[^[^[】
 after_exit【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈≈^Z^X^C^D^[^[^[^[^[】
is_special_key = 0
 before start_loop【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈≈^Z^X^C^D^[^[^[^[^[】
 after start_loop【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈≈^Z^X^C^D^[^[^[^[^[】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from n to 
before apply【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈≈^Z^X^C^D^[^[^[^[^[】
 type(c)=【0】
 before 【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈≈^Z^X^C^D^[^[^[^[^[<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from n to 
before mc-detect: from n to 
after mc-detect: from n to 
invalid input: from mode n to 
now mode: n
after invalid input: from mode n to 
before mc-input: from n to 
before mc-input2: from n to n
before mc-input3: from n to n
after mc-input5: from n to n
after mc-input: from n to n
before apply2 from n to n
before apply【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈≈^Z^X^C^D^[^[^[^[^[】
 type(c)=【0】
 before 【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈≈^Z^X^C^D^[^[^[^[^[<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from n to n
before mc-detect: from n to n
after mc-detect: from n to n
invalid input: from mode n to n
now mode: n
after invalid input: from mode n to n
before mc-input: from n to n
before mc-input2: from n to n
before mc-input3: from n to n
before mc-input4: from n to n
after mc-input: from n to n
 start 【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈≈^Z^X^C^D^[^[^[^[^[】
 mode:【n to n】
 start error 【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈≈^Z^X^C^D^[^[^[^[^[】
 error1 【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈≈^Z^X^C^D^[^[^[^[^[】
 after error 【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈≈^Z^X^C^D^[^[^[^[^[】
 brefore retry : s:char=【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈≈^Z^X^C^D^[^[^[^[^[】
 s:retry_keys=【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈≈^Z^X^C^D^[^[^[^[^[】
 s:saved_keys=【】
 before_if【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈≈^Z^X^C^D^[^[^[^[^[≈】
 before_getchar【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈≈^Z^X^C^D^[^[^[^[^[≈】
【after get esc】
 after_if【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈≈^Z^X^C^D^[^[^[^[^[≈】
 before_exit【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈≈^Z^X^C^D^[^[^[^[^[≈】
 after_exit【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈≈^Z^X^C^D^[^[^[^[^[≈】
is_special_key = 0
 before start_loop【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈≈^Z^X^C^D^[^[^[^[^[≈】
 after start_loop【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈≈^Z^X^C^D^[^[^[^[^[≈】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from n to 
before apply【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈≈^Z^X^C^D^[^[^[^[^[≈】
 type(c)=【0】
 before 【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈≈^Z^X^C^D^[^[^[^[^[≈<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from n to 
before mc-detect: from n to 
after mc-detect: from n to 
invalid input: from mode n to 
now mode: n
after invalid input: from mode n to 
before mc-input: from n to 
before mc-input2: from n to n
before mc-input3: from n to n
after mc-input5: from n to n
after mc-input: from n to n
before apply2 from n to n
before apply【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈≈^Z^X^C^D^[^[^[^[^[≈】
 type(c)=【0】
 before 【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈≈^Z^X^C^D^[^[^[^[^[≈<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from n to n
before mc-detect: from n to n
after mc-detect: from n to n
invalid input: from mode n to n
now mode: n
after invalid input: from mode n to n
before mc-input: from n to n
before mc-input2: from n to n
before mc-input3: from n to n
before mc-input4: from n to n
after mc-input: from n to n
 start 【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈≈^Z^X^C^D^[^[^[^[^[≈】
 mode:【n to n】
 start error 【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈≈^Z^X^C^D^[^[^[^[^[≈】
 error1 【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈≈^Z^X^C^D^[^[^[^[^[≈】
 after error 【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈≈^Z^X^C^D^[^[^[^[^[≈】
 brefore retry : s:char=【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈≈^Z^X^C^D^[^[^[^[^[≈】
 s:retry_keys=【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈≈^Z^X^C^D^[^[^[^[^[≈】
 s:saved_keys=【】
 before_if【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈≈^Z^X^C^D^[^[^[^[^[≈】
 before_getchar【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈≈^Z^X^C^D^[^[^[^[^[≈】
【after get esc】
 after_if【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈≈^Z^X^C^D^[^[^[^[^[≈】
 before_exit【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈≈^Z^X^C^D^[^[^[^[^[≈】
 after_exit【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈≈^Z^X^C^D^[^[^[^[^[≈】
is_special_key = 0
 before start_loop【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈≈^Z^X^C^D^[^[^[^[^[≈】
 after start_loop【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈≈^Z^X^C^D^[^[^[^[^[≈】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from n to 
before apply【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈≈^Z^X^C^D^[^[^[^[^[≈】
 type(c)=【0】
 before 【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈≈^Z^X^C^D^[^[^[^[^[≈<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from n to 
before mc-detect: from n to 
after mc-detect: from n to 
invalid input: from mode n to 
now mode: n
after invalid input: from mode n to 
before mc-input: from n to 
before mc-input2: from n to n
before mc-input3: from n to n
after mc-input5: from n to n
after mc-input: from n to n
before apply2 from n to n
before apply【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈≈^Z^X^C^D^[^[^[^[^[≈】
 type(c)=【0】
 before 【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈≈^Z^X^C^D^[^[^[^[^[≈<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from n to n
before mc-detect: from n to n
after mc-detect: from n to n
invalid input: from mode n to n
now mode: n
after invalid input: from mode n to n
before mc-input: from n to n
before mc-input2: from n to n
before mc-input3: from n to n
before mc-input4: from n to n
after mc-input: from n to n
 start 【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈≈^Z^X^C^D^[^[^[^[^[≈】
 mode:【n to n】
 start error 【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈≈^Z^X^C^D^[^[^[^[^[≈】
 error1 【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈≈^Z^X^C^D^[^[^[^[^[≈】
 after error 【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈≈^Z^X^C^D^[^[^[^[^[≈】
 brefore retry : s:char=【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈≈^Z^X^C^D^[^[^[^[^[≈】
 s:retry_keys=【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈≈^Z^X^C^D^[^[^[^[^[≈】
 s:saved_keys=【】
 before_if【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈≈^Z^X^C^D^[^[^[^[^[≈<80><fd>,】
 before_getchar【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈≈^Z^X^C^D^[^[^[^[^[≈<80><fd>,】
【after get esc】
 after_if【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈≈^Z^X^C^D^[^[^[^[^[≈<80><fd>,】
 before_exit【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈≈^Z^X^C^D^[^[^[^[^[≈<80><fd>,】
 after_exit【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈≈^Z^X^C^D^[^[^[^[^[≈<80><fd>,】
is_special_key = 0
 before start_loop【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈≈^Z^X^C^D^[^[^[^[^[≈<80><fd>,】
 after start_loop【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈≈^Z^X^C^D^[^[^[^[^[≈<80><fd>,】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from n to 
before apply【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈≈^Z^X^C^D^[^[^[^[^[≈<80><fd>,】
 type(c)=【0】
 before 【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈≈^Z^X^C^D^[^[^[^[^[≈<80><fd>,<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from n to 
before mc-detect: from n to 
after mc-detect: from n to 
invalid input: from mode n to 
now mode: n
after invalid input: from mode n to 
before mc-input: from n to 
before mc-input2: from n to n
before mc-input3: from n to n
after mc-input5: from n to n
after mc-input: from n to n
before apply2 from n to n
before apply【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈≈^Z^X^C^D^[^[^[^[^[≈<80><fd>,】
 type(c)=【0】
 before 【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈≈^Z^X^C^D^[^[^[^[^[≈<80><fd>,<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from n to n
before mc-detect: from n to n
after mc-detect: from n to n
invalid input: from mode n to n
now mode: n
after invalid input: from mode n to n
before mc-input: from n to n
before mc-input2: from n to n
before mc-input3: from n to n
before mc-input4: from n to n
after mc-input: from n to n
 start 【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈≈^Z^X^C^D^[^[^[^[^[≈<80><fd>,】
 mode:【n to n】
 start error 【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈≈^Z^X^C^D^[^[^[^[^[≈<80><fd>,】
 error1 【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈≈^Z^X^C^D^[^[^[^[^[≈<80><fd>,】
 after error 【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈≈^Z^X^C^D^[^[^[^[^[≈<80><fd>,】
 brefore retry : s:char=【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈≈^Z^X^C^D^[^[^[^[^[≈<80><fd>,】
 s:retry_keys=【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈≈^Z^X^C^D^[^[^[^[^[≈<80><fd>,】
 s:saved_keys=【】
 before_if【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈≈^Z^X^C^D^[^[^[^[^[≈<80><fd>,<80><fd>.】
 before_getchar【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈≈^Z^X^C^D^[^[^[^[^[≈<80><fd>,<80><fd>.】
【after get esc】
 after_if【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈≈^Z^X^C^D^[^[^[^[^[≈<80><fd>,<80><fd>.】
 before_exit【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈≈^Z^X^C^D^[^[^[^[^[≈<80><fd>,<80><fd>.】
 after_exit【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈≈^Z^X^C^D^[^[^[^[^[≈<80><fd>,<80><fd>.】
is_special_key = 0
 before start_loop【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈≈^Z^X^C^D^[^[^[^[^[≈<80><fd>,<80><fd>.】
 after start_loop【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈≈^Z^X^C^D^[^[^[^[^[≈<80><fd>,<80><fd>.】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from n to 
before apply【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈≈^Z^X^C^D^[^[^[^[^[≈<80><fd>,<80><fd>.】
 type(c)=【0】
 before 【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈≈^Z^X^C^D^[^[^[^[^[≈<80><fd>,<80><fd>.<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from n to 
before mc-detect: from n to 
after mc-detect: from n to 
invalid input: from mode n to 
now mode: n
after invalid input: from mode n to 
before mc-input: from n to 
before mc-input2: from n to n
before mc-input3: from n to n
after mc-input5: from n to n
after mc-input: from n to n
before apply2 from n to n
before apply【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈≈^Z^X^C^D^[^[^[^[^[≈<80><fd>,<80><fd>.】
 type(c)=【0】
 before 【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈≈^Z^X^C^D^[^[^[^[^[≈<80><fd>,<80><fd>.<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from n to n
before mc-detect: from n to n
after mc-detect: from n to n
invalid input: from mode n to n
now mode: n
after invalid input: from mode n to n
before mc-input: from n to n
before mc-input2: from n to n
before mc-input3: from n to n
before mc-input4: from n to n
after mc-input: from n to n
 start 【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈≈^Z^X^C^D^[^[^[^[^[≈<80><fd>,<80><fd>.】
 mode:【n to n】
 start error 【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈≈^Z^X^C^D^[^[^[^[^[≈<80><fd>,<80><fd>.】
 error1 【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈≈^Z^X^C^D^[^[^[^[^[≈<80><fd>,<80><fd>.】
 after error 【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈≈^Z^X^C^D^[^[^[^[^[≈<80><fd>,<80><fd>.】
 brefore retry : s:char=【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈≈^Z^X^C^D^[^[^[^[^[≈<80><fd>,<80><fd>.】
 s:retry_keys=【fs^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z^Z≈^Z^Z^Z^Z≈<80><fd>,<80><fd>.v≈≈^Z^X^C^D^[^[^[^[^[≈<80><fd>,<80><fd>.】
 s:saved_keys=【】
 start 【】
 mode:【 to 】
 start error 【】
 error2 【】
 after error 【】
 brefore retry : s:char=【】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【^D】
 before_getchar【^D】
【l:map】<C-D>       * :<C-U>stopinsert<CR>gv:<C-U>call multiple_cursors#new("v", 0)<CR>
【after get esc】
 after_if【^D】
 before_exit【^D】
 after_exit【^D】
is_special_key = 1
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-new-word)】
 feedkesys s:saved_keys=【】
 start 【^D】
 mode:【v to 】
 start error 【^D】
 error2 【^D】
 after error 【^D】
 brefore retry : s:char=【^D】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【v】
 before_getchar【v】
【after get esc】
 after_if【v】
 before_exit【v】
 after_exit【v】
is_special_key = 0
 before start_loop【v】
 after start_loop【v】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【v】
 type(c)=【0】
 before 【v<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to n
before mc-input3: from v to n
after mc-input5: from v to n
after mc-input: from v to n
before apply2 from v to n
before apply【v】
 type(c)=【0】
 before 【v<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to n
before mc-detect: from v to n
after mc-detect: from v to n
before mc-input: from v to n
before mc-input2: from v to n
before mc-input3: from v to n
before mc-input4: from v to n
after mc-input: from v to n
 start 【v】
 mode:【v to n】
 start error 【v】
 error2 【v】
 after error 【v】
 brefore retry : s:char=【v】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【i】
 before_getchar【i】
【after get esc】
 after_if【i】
 before_exit【i】
 after_exit【i】
is_special_key = 0
 before start_loop【i】
 after start_loop【i】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from n to 
before apply【i】
 type(c)=【0】
 before 【i<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from n to 
before mc-detect: from n to 
after mc-detect: from n to 
before mc-input: from n to 
before mc-input2: from n to i
before mc-input3: from n to i
after mc-input5: from n to i
after mc-input: from n to i
before apply1 from n to i
 type(c)=【0】
 before 【i<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from n to i
before mc-detect: from n to i
after mc-detect: from n to i
before mc-input: from n to i
before mc-input2: from n to i
before mc-input3: from n to i
before mc-input4: from n to i
after mc-input: from n to i
 start 【i】
 mode:【n to i】
 start error 【i】
 error2 【i】
 after error 【i】
 brefore retry : s:char=【i】
 s:retry_keys=【】
 s:saved_keys=【<80><fd>Rundojoin】
 before_if【<80><fd>Rundojoin】
 before_getchar【<80><fd>Rundojoin】
【l:map】<Plug>undojoin * <C-G>u <BS>
【after get esc】
 after_if【<80><fd>Rundojoin】
 before_exit【<80><fd>Rundojoin】
 after_exit【<80><fd>Rundojoin】
is_special_key = 0
 before start_loop【<80><fd>Rundojoin】
 after start_loop【<80><fd>Rundojoin】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【<80><fd>Rundojoin<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【<80><fd>Rundojoin<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【<80><fd>Rundojoin】
 mode:【i to i】
 start error 【<80><fd>Rundojoin】
 error2 【<80><fd>Rundojoin】
 after error 【<80><fd>Rundojoin】
 brefore retry : s:char=【<80><fd>Rundojoin】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【d】
 before_getchar【d】
【after get esc】
 after_if【d】
 before_exit【d】
 after_exit【d】
is_special_key = 0
 before start_loop【d】
 after start_loop【d】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【d<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【d<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【d】
 mode:【i to i】
 start error 【d】
 error2 【d】
 after error 【d】
 brefore retry : s:char=【d】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【s】
 before_getchar【s】
【after get esc】
 after_if【s】
 before_exit【s】
 after_exit【s】
is_special_key = 0
 before start_loop【s】
 after start_loop【s】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【s<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【s<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【s】
 mode:【i to i】
 start error 【s】
 error2 【s】
 after error 【s】
 brefore retry : s:char=【s】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【f】
 before_getchar【f】
【after get esc】
 after_if【f】
 before_exit【f】
 after_exit【f】
is_special_key = 0
 before start_loop【f】
 after start_loop【f】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【f<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【f<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【f】
 mode:【i to i】
 start error 【f】
 error2 【f】
 after error 【f】
 brefore retry : s:char=【f】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【a】
 before_getchar【a】
【after get esc】
 after_if【a】
 before_exit【a】
 after_exit【a】
is_special_key = 0
 before start_loop【a】
 after start_loop【a】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【a<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【a<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【a】
 mode:【i to i】
 start error 【a】
 error2 【a】
 after error 【a】
 brefore retry : s:char=【a】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【a】
 before_getchar【a】
【after get esc】
 after_if【a】
 before_exit【a】
 after_exit【a】
is_special_key = 0
 before start_loop【a】
 after start_loop【a】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【a<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【a<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【a】
 mode:【i to i】
 start error 【a】
 error2 【a】
 after error 【a】
 brefore retry : s:char=【a】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【e】
 before_getchar【e】
【after get esc】
 after_if【e】
 before_exit【e】
 after_exit【e】
is_special_key = 0
 before start_loop【e】
 after start_loop【e】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【e<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【e<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【e】
 mode:【i to i】
 start error 【e】
 error2 【e】
 after error 【e】
 brefore retry : s:char=【e】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【w】
 before_getchar【w】
【after get esc】
 after_if【w】
 before_exit【w】
 after_exit【w】
is_special_key = 0
 before start_loop【w】
 after start_loop【w】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【w<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【w<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【w】
 mode:【i to i】
 start error 【w】
 error2 【w】
 after error 【w】
 brefore retry : s:char=【w】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【 】
 before_getchar【 】
【l:map】<Space>     * <C-G>u<Space>
【after get esc】
 after_if【 】
 before_exit【 】
 after_exit【 】
is_special_key = 0
 before start_loop【 】
 after start_loop【 】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【 <80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【 <80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【 】
 mode:【i to i】
 start error 【 】
 error2 【 】
 after error 【 】
 brefore retry : s:char=【 】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【 】
 before_getchar【 】
【l:map】<Space>     * <C-G>u<Space>
【after get esc】
 after_if【 】
 before_exit【 】
 after_exit【 】
is_special_key = 0
 before start_loop【 】
 after start_loop【 】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【 <80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【 <80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【 】
 mode:【i to i】
 start error 【 】
 error2 【 】
 after error 【 】
 brefore retry : s:char=【 】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【s】
 before_getchar【s】
【after get esc】
 after_if【s】
 before_exit【s】
 after_exit【s】
is_special_key = 0
 before start_loop【s】
 after start_loop【s】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【s<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【s<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【s】
 mode:【i to i】
 start error 【s】
 error2 【s】
 after error 【s】
 brefore retry : s:char=【s】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【 】
 before_getchar【 】
【l:map】<Space>     * <C-G>u<Space>
【after get esc】
 after_if【 】
 before_exit【 】
 after_exit【 】
is_special_key = 0
 before start_loop【 】
 after start_loop【 】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 type(c)=【0】
 before 【 <80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【a】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【 <80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【a】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【 】
 mode:【i to i】
 start error 【 】
 error2 【 】
 after error 【 】
 brefore retry : s:char=【 】
 s:retry_keys=【】
 s:saved_keys=【a】
 before_if【a】
 before_getchar【a】
【after get esc】
 after_if【a】
 before_exit【a】
 after_exit【a】
is_special_key = 0
 before start_loop【a】
 after start_loop【a】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【a<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【a<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【a】
 mode:【i to i】
 start error 【a】
 error2 【a】
 after error 【a】
 brefore retry : s:char=【a】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【f】
 before_getchar【f】
【after get esc】
 after_if【f】
 before_exit【f】
 after_exit【f】
is_special_key = 0
 before start_loop【f】
 after start_loop【f】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【f<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【f<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【f】
 mode:【i to i】
 start error 【f】
 error2 【f】
 after error 【f】
 brefore retry : s:char=【f】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【d】
 before_getchar【d】
【after get esc】
 after_if【d】
 before_exit【d】
 after_exit【d】
is_special_key = 0
 before start_loop【d】
 after start_loop【d】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【d<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【d<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【d】
 mode:【i to i】
 start error 【d】
 error2 【d】
 after error 【d】
 brefore retry : s:char=【d】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【^Z】
 before_getchar【^Z】
【l:map】<C-Z>       * <C-O>u
【after get esc】
 after_if【^Z】
 before_exit【^Z】
 after_exit【^Z】
is_special_key = 0
 before start_loop【^Z】
 after start_loop【^Z】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【^Z】
 mode:【i to i】
 start error 【^Z】
 error2 【^Z】
 after error 【^Z】
 brefore retry : s:char=【^Z】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【^Z】
 before_getchar【^Z】
【l:map】<C-Z>       * <C-O>u
【after get esc】
 after_if【^Z】
 before_exit【^Z】
 after_exit【^Z】
is_special_key = 0
 before start_loop【^Z】
 after start_loop【^Z】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【^Z】
 mode:【i to i】
 start error 【^Z】
 error2 【^Z】
 after error 【^Z】
 brefore retry : s:char=【^Z】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【^Z】
 before_getchar【^Z】
【l:map】<C-Z>       * <C-O>u
【after get esc】
 after_if【^Z】
 before_exit【^Z】
 after_exit【^Z】
is_special_key = 0
 before start_loop【^Z】
 after start_loop【^Z】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【^Z】
 mode:【i to i】
 start error 【^Z】
 error2 【^Z】
 after error 【^Z】
 brefore retry : s:char=【^Z】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【^Z】
 before_getchar【^Z】
【l:map】<C-Z>       * <C-O>u
【after get esc】
 after_if【^Z】
 before_exit【^Z】
 after_exit【^Z】
is_special_key = 0
 before start_loop【^Z】
 after start_loop【^Z】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【^Z】
 mode:【i to i】
 start error 【^Z】
 error2 【^Z】
 after error 【^Z】
 brefore retry : s:char=【^Z】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【^Z】
 before_getchar【^Z】
【l:map】<C-Z>       * <C-O>u
【after get esc】
 after_if【^Z】
 before_exit【^Z】
 after_exit【^Z】
is_special_key = 0
 before start_loop【^Z】
 after start_loop【^Z】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
invalid input: from mode i to 
now mode: n
after invalid input: from mode i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
invalid input: from mode i to i
now mode: n
after invalid input: from mode i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【^Z】
 mode:【i to i】
 start error 【^Z】
 error2 【^Z】
 can't be replayed in 2cursors 【^Z】
 after error 【^Z】
 brefore retry : s:char=【^Z】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【a】
 before_getchar【a】
【after get esc】
 after_if【a】
 before_exit【a】
 after_exit【a】
is_special_key = 0
 before start_loop【a】
 after start_loop【a】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【a<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 type(c)=【0】
 before 【a<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【s】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【a】
 mode:【i to i】
 start error 【a】
 error2 【a】
 after error 【a】
 brefore retry : s:char=【a】
 s:retry_keys=【】
 s:saved_keys=【s】
 before_if【s】
 before_getchar【s】
【after get esc】
 after_if【s】
 before_exit【s】
 after_exit【s】
is_special_key = 0
 before start_loop【s】
 after start_loop【s】
 type(c)=【0】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【d】
before apply1 from i to 
 type(c)=【0】
 before 【s<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【d】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【s<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【d】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【s】
 mode:【i to i】
 start error 【s】
 error2 【s】
 after error 【s】
 brefore retry : s:char=【s】
 s:retry_keys=【】
 s:saved_keys=【d】
 before_if【d】
 before_getchar【d】
【after get esc】
 after_if【d】
 before_exit【d】
 after_exit【d】
is_special_key = 0
 before start_loop【d】
 after start_loop【d】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【d<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【d<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【d】
 mode:【i to i】
 start error 【d】
 error2 【d】
 after error 【d】
 brefore retry : s:char=【d】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【f】
 before_getchar【f】
【after get esc】
 after_if【f】
 before_exit【f】
 after_exit【f】
is_special_key = 0
 before start_loop【f】
 after start_loop【f】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【f<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【f<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【f】
 mode:【i to i】
 start error 【f】
 error2 【f】
 after error 【f】
 brefore retry : s:char=【f】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【^Z】
 before_getchar【^Z】
【l:map】<C-Z>       * <C-O>u
【after get esc】
 after_if【^Z】
 before_exit【^Z】
 after_exit【^Z】
is_special_key = 0
 before start_loop【^Z】
 after start_loop【^Z】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【^Z】
 mode:【i to i】
 start error 【^Z】
 error2 【^Z】
 after error 【^Z】
 brefore retry : s:char=【^Z】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【^[】
 before_getchar【^[】
【l:map】<Esc>[4~      <End>
【get esc】
【char_mapping】
【l:map】<Esc>[4~      <End>
【char_mapping】
【l:map】<Esc>[4~      <End>
【char_mapping】
【l:map】<Esc>[4~      <End>
【char_mapping】
【l:map】<Esc>[4~      <End>
【char_mapping】
【l:map】<Esc>[4~      <End>
【char_mapping】
【l:map】<Esc>[4~      <End>
【char_mapping】
【l:map】<Esc>[4~      <End>
【char_mapping】
【l:map】<Esc>[4~      <End>
【char_mapping】
【l:map】<Esc>[4~      <End>
【char_mapping】
【l:map】<Esc>[4~      <End>
【char_mapping】
【l:map】<Esc>[4~      <End>
【char_mapping】
【l:map】<Esc>[4~      <End>
【char_mapping】
【l:map】<Esc>[4~      <End>
【char_mapping】
【l:map】<Esc>[4~      <End>
【char_mapping】
【l:map】<Esc>[4~      <End>
【char_mapping】
【l:map】<Esc>[4~      <End>
【char_mapping】
 before_subs【^[<80>kr】
 after_subs【】
【after get esc】
 after_if【】
 before_exit【】
 after_exit【】
is_special_key = 0
 before start_loop【】
 after start_loop【】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【】
 mode:【i to i】
 start error 【】
 error2 【】
 after error 【】
 brefore retry : s:char=【】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kr】
 before_getchar【<80>kr】
【after get esc】
 after_if【<80>kr】
 before_exit【<80>kr】
 after_exit【<80>kr】
is_special_key = 0
 before start_loop【<80>kr】
 after start_loop【<80>kr】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【<80>kr<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【<80>kr<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【<80>kr】
 mode:【i to i】
 start error 【<80>kr】
 error2 【<80>kr】
 after error 【<80>kr】
 brefore retry : s:char=【<80>kr】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kr】
 before_getchar【<80>kr】
【after get esc】
 after_if【<80>kr】
 before_exit【<80>kr】
 after_exit【<80>kr】
is_special_key = 0
 before start_loop【<80>kr】
 after start_loop【<80>kr】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【<80>kr<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【<80>kr<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【<80>kr】
 mode:【i to i】
 start error 【<80>kr】
 error2 【<80>kr】
 after error 【<80>kr】
 brefore retry : s:char=【<80>kr】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kr】
 before_getchar【<80>kr】
【after get esc】
 after_if【<80>kr】
 before_exit【<80>kr】
 after_exit【<80>kr】
is_special_key = 0
 before start_loop【<80>kr】
 after start_loop【<80>kr】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【<80>kr<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【<80>kr<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【<80>kr】
 mode:【i to i】
 start error 【<80>kr】
 error2 【<80>kr】
 after error 【<80>kr】
 brefore retry : s:char=【<80>kr】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kr】
 before_getchar【<80>kr】
【after get esc】
 after_if【<80>kr】
 before_exit【<80>kr】
 after_exit【<80>kr】
is_special_key = 0
 before start_loop【<80>kr】
 after start_loop【<80>kr】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【<80>kr<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【<80>kr<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【<80>kr】
 mode:【i to i】
 start error 【<80>kr】
 error2 【<80>kr】
 after error 【<80>kr】
 brefore retry : s:char=【<80>kr】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kr】
 before_getchar【<80>kr】
【after get esc】
 after_if【<80>kr】
 before_exit【<80>kr】
 after_exit【<80>kr】
is_special_key = 0
 before start_loop【<80>kr】
 after start_loop【<80>kr】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【<80>kr<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【<80>kr<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【<80>kr】
 mode:【i to i】
 start error 【<80>kr】
 error2 【<80>kr】
 after error 【<80>kr】
 brefore retry : s:char=【<80>kr】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kr】
 before_getchar【<80>kr】
【after get esc】
 after_if【<80>kr】
 before_exit【<80>kr】
 after_exit【<80>kr】
is_special_key = 0
 before start_loop【<80>kr】
 after start_loop【<80>kr】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【<80>kr<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【<80>kr<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【<80>kr】
 mode:【i to i】
 start error 【<80>kr】
 error2 【<80>kr】
 after error 【<80>kr】
 brefore retry : s:char=【<80>kr】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kr】
 before_getchar【<80>kr】
【after get esc】
 after_if【<80>kr】
 before_exit【<80>kr】
 after_exit【<80>kr】
is_special_key = 0
 before start_loop【<80>kr】
 after start_loop【<80>kr】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【<80>kr<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【<80>kr<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【<80>kr】
 mode:【i to i】
 start error 【<80>kr】
 error2 【<80>kr】
 after error 【<80>kr】
 brefore retry : s:char=【<80>kr】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kr】
 before_getchar【<80>kr】
【after get esc】
 after_if【<80>kr】
 before_exit【<80>kr】
 after_exit【<80>kr】
is_special_key = 0
 before start_loop【<80>kr】
 after start_loop【<80>kr】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【<80>kr<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【<80>kr<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【<80>kr】
 mode:【i to i】
 start error 【<80>kr】
 error2 【<80>kr】
 after error 【<80>kr】
 brefore retry : s:char=【<80>kr】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kr】
 before_getchar【<80>kr】
【after get esc】
 after_if【<80>kr】
 before_exit【<80>kr】
 after_exit【<80>kr】
is_special_key = 0
 before start_loop【<80>kr】
 after start_loop【<80>kr】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【<80>kr<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【<80>kr<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【<80>kr】
 mode:【i to i】
 start error 【<80>kr】
 error2 【<80>kr】
 after error 【<80>kr】
 brefore retry : s:char=【<80>kr】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【i】
 before_getchar【i】
【after get esc】
 after_if【i】
 before_exit【i】
 after_exit【i】
is_special_key = 0
 before start_loop【i】
 after start_loop【i】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【i<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【i<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【i】
 mode:【i to i】
 start error 【i】
 error2 【i】
 after error 【i】
 brefore retry : s:char=【i】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kb】
 before_getchar【<80>kb】
【after get esc】
 after_if【<80>kb】
 before_exit【<80>kb】
 after_exit【<80>kb】
is_special_key = 0
 before start_loop【<80>kb】
 after start_loop【<80>kb】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【<80>kb<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【<80>kb<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【<80>kb】
 mode:【i to i】
 start error 【<80>kb】
 error2 【<80>kb】
 after error 【<80>kb】
 brefore retry : s:char=【<80>kb】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【^[】
 before_getchar【^[】
【l:map】<Esc>[4~      <End>
【get esc】
【char_mapping】
【l:map】<Esc>[4~      <End>
【char_mapping】
【l:map】<Esc>[4~      <End>
【char_mapping】
【l:map】<Esc>[4~      <End>
【char_mapping】
【l:map】<Esc>[4~      <End>
【char_mapping】
【l:map】<Esc>[4~      <End>
【char_mapping】
【l:map】<Esc>[4~      <End>
【char_mapping】
【l:map】<Esc>[4~      <End>
【char_mapping】
【l:map】<Esc>[4~      <End>
【char_mapping】
【l:map】<Esc>[4~      <End>
【char_mapping】
【l:map】<Esc>[4~      <End>
【char_mapping】
【l:map】<Esc>[4~      <End>
【char_mapping】
【l:map】<Esc>[4~      <End>
【char_mapping】
【l:map】<Esc>[4~      <End>
【char_mapping】
【l:map】<Esc>[4~      <End>
【char_mapping】
【l:map】<Esc>[4~      <End>
【char_mapping】
【l:map】<Esc>[4~      <End>
【char_mapping】
【l:map】<Esc>[4~      <End>
【char_mapping】
【l:map】<Esc>[4~      <End>
【after get esc】
 after_if【^[】
 before_exit【^[】
 after_exit【^[】
is_special_key = 0
 before start_loop【^[】
 after start_loop【^[】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【^[<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to n
before mc-input3: from i to n
after mc-input5: from i to n
after mc-input: from i to n
before apply1 from i to n
 type(c)=【0】
 before 【^[<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to n
before mc-detect: from i to n
after mc-detect: from i to n
before mc-input: from i to n
before mc-input2: from i to n
before mc-input3: from i to n
before mc-input4: from i to n
after mc-input: from i to n
 start 【^[】
 mode:【i to n】
 start error 【^[】
 error2 【^[】
 after error 【^[】
 brefore retry : s:char=【^[】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kr】
 before_getchar【<80>kr】
【after get esc】
 after_if【<80>kr】
 before_exit【<80>kr】
 after_exit【<80>kr】
is_special_key = 0
 before start_loop【<80>kr】
 after start_loop【<80>kr】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from n to 
before apply【<80>kr】
 type(c)=【0】
 before 【<80>kr<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from n to 
before mc-detect: from n to 
after mc-detect: from n to 
before mc-input: from n to 
before mc-input2: from n to n
before mc-input3: from n to n
after mc-input5: from n to n
after mc-input: from n to n
before apply2 from n to n
before apply【<80>kr】
 type(c)=【0】
 before 【<80>kr<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from n to n
before mc-detect: from n to n
after mc-detect: from n to n
before mc-input: from n to n
before mc-input2: from n to n
before mc-input3: from n to n
before mc-input4: from n to n
after mc-input: from n to n
 start 【<80>kr】
 mode:【n to n】
 start error 【<80>kr】
 error2 【<80>kr】
 after error 【<80>kr】
 brefore retry : s:char=【<80>kr】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【i】
 before_getchar【i】
【after get esc】
 after_if【i】
 before_exit【i】
 after_exit【i】
is_special_key = 0
 before start_loop【i】
 after start_loop【i】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from n to 
before apply【i】
 type(c)=【0】
 before 【i<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from n to 
before mc-detect: from n to 
after mc-detect: from n to 
before mc-input: from n to 
before mc-input2: from n to i
before mc-input3: from n to i
after mc-input5: from n to i
after mc-input: from n to i
before apply1 from n to i
 type(c)=【0】
 before 【i<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from n to i
before mc-detect: from n to i
after mc-detect: from n to i
before mc-input: from n to i
before mc-input2: from n to i
before mc-input3: from n to i
before mc-input4: from n to i
after mc-input: from n to i
 start 【i】
 mode:【n to i】
 start error 【i】
 error2 【i】
 after error 【i】
 brefore retry : s:char=【i】
 s:retry_keys=【】
 s:saved_keys=【<80><fd>Rundojoin】
 before_if【<80><fd>Rundojoin】
 before_getchar【<80><fd>Rundojoin】
【l:map】<Plug>undojoin * <C-G>u <BS>
【after get esc】
 after_if【<80><fd>Rundojoin】
 before_exit【<80><fd>Rundojoin】
 after_exit【<80><fd>Rundojoin】
is_special_key = 0
 before start_loop【<80><fd>Rundojoin】
 after start_loop【<80><fd>Rundojoin】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【<80><fd>Rundojoin<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【<80><fd>Rundojoin<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【<80><fd>Rundojoin】
 mode:【i to i】
 start error 【<80><fd>Rundojoin】
 error2 【<80><fd>Rundojoin】
 after error 【<80><fd>Rundojoin】
 brefore retry : s:char=【<80><fd>Rundojoin】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【a】
 before_getchar【a】
【after get esc】
 after_if【a】
 before_exit【a】
 after_exit【a】
is_special_key = 0
 before start_loop【a】
 after start_loop【a】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【a<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【a<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【a】
 mode:【i to i】
 start error 【a】
 error2 【a】
 after error 【a】
 brefore retry : s:char=【a】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【s】
 before_getchar【s】
【after get esc】
 after_if【s】
 before_exit【s】
 after_exit【s】
is_special_key = 0
 before start_loop【s】
 after start_loop【s】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【s<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【s<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【s】
 mode:【i to i】
 start error 【s】
 error2 【s】
 after error 【s】
 brefore retry : s:char=【s】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【d】
 before_getchar【d】
【after get esc】
 after_if【d】
 before_exit【d】
 after_exit【d】
is_special_key = 0
 before start_loop【d】
 after start_loop【d】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【d<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【d<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【d】
 mode:【i to i】
 start error 【d】
 error2 【d】
 after error 【d】
 brefore retry : s:char=【d】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【s】
 before_getchar【s】
【after get esc】
 after_if【s】
 before_exit【s】
 after_exit【s】
is_special_key = 0
 before start_loop【s】
 after start_loop【s】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【s<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 type(c)=【0】
 before 【s<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【a】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【s】
 mode:【i to i】
 start error 【s】
 error2 【s】
 after error 【s】
 brefore retry : s:char=【s】
 s:retry_keys=【】
 s:saved_keys=【a】
 before_if【a】
 before_getchar【a】
【after get esc】
 after_if【a】
 before_exit【a】
 after_exit【a】
is_special_key = 0
 before start_loop【a】
 after start_loop【a】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【a<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【a<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【a】
 mode:【i to i】
 start error 【a】
 error2 【a】
 after error 【a】
 brefore retry : s:char=【a】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【d】
 before_getchar【d】
【after get esc】
 after_if【d】
 before_exit【d】
 after_exit【d】
is_special_key = 0
 before start_loop【d】
 after start_loop【d】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【d<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【d<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【d】
 mode:【i to i】
 start error 【d】
 error2 【d】
 after error 【d】
 brefore retry : s:char=【d】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【 】
 before_getchar【 】
【l:map】<Space>     * <C-G>u<Space>
【after get esc】
 after_if【 】
 before_exit【 】
 after_exit【 】
is_special_key = 0
 before start_loop【 】
 after start_loop【 】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【 <80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【 <80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【 】
 mode:【i to i】
 start error 【 】
 error2 【 】
 after error 【 】
 brefore retry : s:char=【 】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【a】
 before_getchar【a】
【after get esc】
 after_if【a】
 before_exit【a】
 after_exit【a】
is_special_key = 0
 before start_loop【a】
 after start_loop【a】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【a<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【a<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【a】
 mode:【i to i】
 start error 【a】
 error2 【a】
 after error 【a】
 brefore retry : s:char=【a】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【 】
 before_getchar【 】
【l:map】<Space>     * <C-G>u<Space>
【after get esc】
 after_if【 】
 before_exit【 】
 after_exit【 】
is_special_key = 0
 before start_loop【 】
 after start_loop【 】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【 <80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【 <80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【 】
 mode:【i to i】
 start error 【 】
 error2 【 】
 after error 【 】
 brefore retry : s:char=【 】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【s】
 before_getchar【s】
【after get esc】
 after_if【s】
 before_exit【s】
 after_exit【s】
is_special_key = 0
 before start_loop【s】
 after start_loop【s】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【s<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【s<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【s】
 mode:【i to i】
 start error 【s】
 error2 【s】
 after error 【s】
 brefore retry : s:char=【s】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【d】
 before_getchar【d】
【after get esc】
 after_if【d】
 before_exit【d】
 after_exit【d】
is_special_key = 0
 before start_loop【d】
 after start_loop【d】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【d<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【d<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【d】
 mode:【i to i】
 start error 【d】
 error2 【d】
 after error 【d】
 brefore retry : s:char=【d】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【 】
 before_getchar【 】
【l:map】<Space>     * <C-G>u<Space>
【after get esc】
 after_if【 】
 before_exit【 】
 after_exit【 】
is_special_key = 0
 before start_loop【 】
 after start_loop【 】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【 <80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【 <80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【 】
 mode:【i to i】
 start error 【 】
 error2 【 】
 after error 【 】
 brefore retry : s:char=【 】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【a】
 before_getchar【a】
【after get esc】
 after_if【a】
 before_exit【a】
 after_exit【a】
is_special_key = 0
 before start_loop【a】
 after start_loop【a】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【a<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【a<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【a】
 mode:【i to i】
 start error 【a】
 error2 【a】
 after error 【a】
 brefore retry : s:char=【a】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【s】
 before_getchar【s】
【after get esc】
 after_if【s】
 before_exit【s】
 after_exit【s】
is_special_key = 0
 before start_loop【s】
 after start_loop【s】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【s<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【s<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【s】
 mode:【i to i】
 start error 【s】
 error2 【s】
 after error 【s】
 brefore retry : s:char=【s】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【 】
 before_getchar【 】
【l:map】<Space>     * <C-G>u<Space>
【after get esc】
 after_if【 】
 before_exit【 】
 after_exit【 】
is_special_key = 0
 before start_loop【 】
 after start_loop【 】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【 <80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【 <80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【 】
 mode:【i to i】
 start error 【 】
 error2 【 】
 after error 【 】
 brefore retry : s:char=【 】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【a】
 before_getchar【a】
【after get esc】
 after_if【a】
 before_exit【a】
 after_exit【a】
is_special_key = 0
 before start_loop【a】
 after start_loop【a】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【a<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【a<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【a】
 mode:【i to i】
 start error 【a】
 error2 【a】
 after error 【a】
 brefore retry : s:char=【a】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【s】
 before_getchar【s】
【after get esc】
 after_if【s】
 before_exit【s】
 after_exit【s】
is_special_key = 0
 before start_loop【s】
 after start_loop【s】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【s<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【s<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【s】
 mode:【i to i】
 start error 【s】
 error2 【s】
 after error 【s】
 brefore retry : s:char=【s】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【d】
 before_getchar【d】
【after get esc】
 after_if【d】
 before_exit【d】
 after_exit【d】
is_special_key = 0
 before start_loop【d】
 after start_loop【d】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【d<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【d<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【d】
 mode:【i to i】
 start error 【d】
 error2 【d】
 after error 【d】
 brefore retry : s:char=【d】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【 】
 before_getchar【 】
【l:map】<Space>     * <C-G>u<Space>
【after get esc】
 after_if【 】
 before_exit【 】
 after_exit【 】
is_special_key = 0
 before start_loop【 】
 after start_loop【 】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【 <80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【 <80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【 】
 mode:【i to i】
 start error 【 】
 error2 【 】
 after error 【 】
 brefore retry : s:char=【 】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【f】
 before_getchar【f】
【after get esc】
 after_if【f】
 before_exit【f】
 after_exit【f】
is_special_key = 0
 before start_loop【f】
 after start_loop【f】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【f<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【f<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【f】
 mode:【i to i】
 start error 【f】
 error2 【f】
 after error 【f】
 brefore retry : s:char=【f】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【 】
 before_getchar【 】
【l:map】<Space>     * <C-G>u<Space>
【after get esc】
 after_if【 】
 before_exit【 】
 after_exit【 】
is_special_key = 0
 before start_loop【 】
 after start_loop【 】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【 <80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【 <80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【 】
 mode:【i to i】
 start error 【 】
 error2 【 】
 after error 【 】
 brefore retry : s:char=【 】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【 】
 before_getchar【 】
【l:map】<Space>     * <C-G>u<Space>
【after get esc】
 after_if【 】
 before_exit【 】
 after_exit【 】
is_special_key = 0
 before start_loop【 】
 after start_loop【 】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【 <80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【 <80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【 】
 mode:【i to i】
 start error 【 】
 error2 【 】
 after error 【 】
 brefore retry : s:char=【 】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【d】
 before_getchar【d】
【after get esc】
 after_if【d】
 before_exit【d】
 after_exit【d】
is_special_key = 0
 before start_loop【d】
 after start_loop【d】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【d<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 type(c)=【0】
 before 【d<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【s】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【d】
 mode:【i to i】
 start error 【d】
 error2 【d】
 after error 【d】
 brefore retry : s:char=【d】
 s:retry_keys=【】
 s:saved_keys=【s】
 before_if【s】
 before_getchar【s】
【after get esc】
 after_if【s】
 before_exit【s】
 after_exit【s】
is_special_key = 0
 before start_loop【s】
 after start_loop【s】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【s<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【s<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【s】
 mode:【i to i】
 start error 【s】
 error2 【s】
 after error 【s】
 brefore retry : s:char=【s】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【f】
 before_getchar【f】
【after get esc】
 after_if【f】
 before_exit【f】
 after_exit【f】
is_special_key = 0
 before start_loop【f】
 after start_loop【f】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【f<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【f<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【f】
 mode:【i to i】
 start error 【f】
 error2 【f】
 after error 【f】
 brefore retry : s:char=【f】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【^Z】
 before_getchar【^Z】
【l:map】<C-Z>       * <C-O>u
【after get esc】
 after_if【^Z】
 before_exit【^Z】
 after_exit【^Z】
is_special_key = 0
 before start_loop【^Z】
 after start_loop【^Z】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【^Z】
 mode:【i to i】
 start error 【^Z】
 error2 【^Z】
 after error 【^Z】
 brefore retry : s:char=【^Z】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【^Z】
 before_getchar【^Z】
【l:map】<C-Z>       * <C-O>u
【after get esc】
 after_if【^Z】
 before_exit【^Z】
 after_exit【^Z】
is_special_key = 0
 before start_loop【^Z】
 after start_loop【^Z】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【^Z】
 mode:【i to i】
 start error 【^Z】
 error2 【^Z】
 after error 【^Z】
 brefore retry : s:char=【^Z】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>#4】
 before_getchar【<80>#4】
【l:map】<S-Left>    * <Left><C-O>gE<Right>
【after get esc】
 after_if【<80>#4】
 before_exit【<80>#4】
 after_exit【<80>#4】
is_special_key = 0
 before start_loop【<80>#4】
 after start_loop【<80>#4】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【<80>#4<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【<80>#4<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【<80>#4】
 mode:【i to i】
 start error 【<80>#4】
 error2 【<80>#4】
 after error 【<80>#4】
 brefore retry : s:char=【<80>#4】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>%i】
 before_getchar【<80>%i】
【l:map】<S-Right>   * <C-O>E<Right>
【after get esc】
 after_if【<80>%i】
 before_exit【<80>%i】
 after_exit【<80>%i】
is_special_key = 0
 before start_loop【<80>%i】
 after start_loop【<80>%i】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【<80>%i<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【<80>%i<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【<80>%i】
 mode:【i to i】
 start error 【<80>%i】
 error2 【<80>%i】
 after error 【<80>%i】
 brefore retry : s:char=【<80>%i】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>#4】
 before_getchar【<80>#4】
【l:map】<S-Left>    * <Left><C-O>gE<Right>
【after get esc】
 after_if【<80>#4】
 before_exit【<80>#4】
 after_exit【<80>#4】
is_special_key = 0
 before start_loop【<80>#4】
 after start_loop【<80>#4】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【<80>#4<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【<80>#4<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【<80>#4】
 mode:【i to i】
 start error 【<80>#4】
 error2 【<80>#4】
 after error 【<80>#4】
 brefore retry : s:char=【<80>#4】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>#4】
 before_getchar【<80>#4】
【l:map】<S-Left>    * <Left><C-O>gE<Right>
【after get esc】
 after_if【<80>#4】
 before_exit【<80>#4】
 after_exit【<80>#4】
is_special_key = 0
 before start_loop【<80>#4】
 after start_loop【<80>#4】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【<80>#4<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【<80>#4<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【<80>#4】
 mode:【i to i】
 start error 【<80>#4】
 error2 【<80>#4】
 after error 【<80>#4】
 brefore retry : s:char=【<80>#4】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kr】
 before_getchar【<80>kr】
【after get esc】
 after_if【<80>kr】
 before_exit【<80>kr】
 after_exit【<80>kr】
is_special_key = 0
 before start_loop【<80>kr】
 after start_loop【<80>kr】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【<80>kr<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【<80>kr<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【<80>kr】
 mode:【i to i】
 start error 【<80>kr】
 error2 【<80>kr】
 after error 【<80>kr】
 brefore retry : s:char=【<80>kr】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kl】
 before_getchar【<80>kl】
【after get esc】
 after_if【<80>kl】
 before_exit【<80>kl】
 after_exit【<80>kl】
is_special_key = 0
 before start_loop【<80>kl】
 after start_loop【<80>kl】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【<80>kl<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【<80>kl<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【<80>kl】
 mode:【i to i】
 start error 【<80>kl】
 error2 【<80>kl】
 after error 【<80>kl】
 brefore retry : s:char=【<80>kl】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kl】
 before_getchar【<80>kl】
【after get esc】
 after_if【<80>kl】
 before_exit【<80>kl】
 after_exit【<80>kl】
is_special_key = 0
 before start_loop【<80>kl】
 after start_loop【<80>kl】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【<80>kl<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【<80>kl<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【<80>kl】
 mode:【i to i】
 start error 【<80>kl】
 error2 【<80>kl】
 after error 【<80>kl】
 brefore retry : s:char=【<80>kl】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kl】
 before_getchar【<80>kl】
【after get esc】
 after_if【<80>kl】
 before_exit【<80>kl】
 after_exit【<80>kl】
is_special_key = 0
 before start_loop【<80>kl】
 after start_loop【<80>kl】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【<80>kl<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【<80>kl<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【<80>kl】
 mode:【i to i】
 start error 【<80>kl】
 error2 【<80>kl】
 after error 【<80>kl】
 brefore retry : s:char=【<80>kl】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kl】
 before_getchar【<80>kl】
【after get esc】
 after_if【<80>kl】
 before_exit【<80>kl】
 after_exit【<80>kl】
is_special_key = 0
 before start_loop【<80>kl】
 after start_loop【<80>kl】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【<80>kl<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【<80>kl<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【<80>kl】
 mode:【i to i】
 start error 【<80>kl】
 error2 【<80>kl】
 after error 【<80>kl】
 brefore retry : s:char=【<80>kl】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kl】
 before_getchar【<80>kl】
【after get esc】
 after_if【<80>kl】
 before_exit【<80>kl】
 after_exit【<80>kl】
is_special_key = 0
 before start_loop【<80>kl】
 after start_loop【<80>kl】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【<80>kl<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【<80>kl<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【<80>kl】
 mode:【i to i】
 start error 【<80>kl】
 error2 【<80>kl】
 after error 【<80>kl】
 brefore retry : s:char=【<80>kl】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kl】
 before_getchar【<80>kl】
【after get esc】
 after_if【<80>kl】
 before_exit【<80>kl】
 after_exit【<80>kl】
is_special_key = 0
 before start_loop【<80>kl】
 after start_loop【<80>kl】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【<80>kl<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【<80>kl<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【<80>kl】
 mode:【i to i】
 start error 【<80>kl】
 error2 【<80>kl】
 after error 【<80>kl】
 brefore retry : s:char=【<80>kl】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kl】
 before_getchar【<80>kl】
【after get esc】
 after_if【<80>kl】
 before_exit【<80>kl】
 after_exit【<80>kl】
is_special_key = 0
 before start_loop【<80>kl】
 after start_loop【<80>kl】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【<80>kl<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【<80>kl<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【<80>kl】
 mode:【i to i】
 start error 【<80>kl】
 error2 【<80>kl】
 after error 【<80>kl】
 brefore retry : s:char=【<80>kl】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kl】
 before_getchar【<80>kl】
【after get esc】
 after_if【<80>kl】
 before_exit【<80>kl】
 after_exit【<80>kl】
is_special_key = 0
 before start_loop【<80>kl】
 after start_loop【<80>kl】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【<80>kl<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【<80>kl<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【<80>kl】
 mode:【i to i】
 start error 【<80>kl】
 error2 【<80>kl】
 after error 【<80>kl】
 brefore retry : s:char=【<80>kl】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kl】
 before_getchar【<80>kl】
【after get esc】
 after_if【<80>kl】
 before_exit【<80>kl】
 after_exit【<80>kl】
is_special_key = 0
 before start_loop【<80>kl】
 after start_loop【<80>kl】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【<80>kl<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【<80>kl<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【<80>kl】
 mode:【i to i】
 start error 【<80>kl】
 error2 【<80>kl】
 after error 【<80>kl】
 brefore retry : s:char=【<80>kl】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kl】
 before_getchar【<80>kl】
【after get esc】
 after_if【<80>kl】
 before_exit【<80>kl】
 after_exit【<80>kl】
is_special_key = 0
 before start_loop【<80>kl】
 after start_loop【<80>kl】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【<80>kl<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【<80>kl<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【<80>kl】
 mode:【i to i】
 start error 【<80>kl】
 error2 【<80>kl】
 after error 【<80>kl】
 brefore retry : s:char=【<80>kl】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kl】
 before_getchar【<80>kl】
【after get esc】
 after_if【<80>kl】
 before_exit【<80>kl】
 after_exit【<80>kl】
is_special_key = 0
 before start_loop【<80>kl】
 after start_loop【<80>kl】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【<80>kl<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【<80>kl<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【<80>kl】
 mode:【i to i】
 start error 【<80>kl】
 error2 【<80>kl】
 after error 【<80>kl】
 brefore retry : s:char=【<80>kl】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kl】
 before_getchar【<80>kl】
【after get esc】
 after_if【<80>kl】
 before_exit【<80>kl】
 after_exit【<80>kl】
is_special_key = 0
 before start_loop【<80>kl】
 after start_loop【<80>kl】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【<80>kl<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【<80>kl<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【<80>kl】
 mode:【i to i】
 start error 【<80>kl】
 error2 【<80>kl】
 after error 【<80>kl】
 brefore retry : s:char=【<80>kl】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kl】
 before_getchar【<80>kl】
【after get esc】
 after_if【<80>kl】
 before_exit【<80>kl】
 after_exit【<80>kl】
is_special_key = 0
 before start_loop【<80>kl】
 after start_loop【<80>kl】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【<80>kl<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【<80>kl<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【<80>kl】
 mode:【i to i】
 start error 【<80>kl】
 error2 【<80>kl】
 after error 【<80>kl】
 brefore retry : s:char=【<80>kl】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kl】
 before_getchar【<80>kl】
【after get esc】
 after_if【<80>kl】
 before_exit【<80>kl】
 after_exit【<80>kl】
is_special_key = 0
 before start_loop【<80>kl】
 after start_loop【<80>kl】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【<80>kl<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【<80>kl<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【<80>kl】
 mode:【i to i】
 start error 【<80>kl】
 error2 【<80>kl】
 after error 【<80>kl】
 brefore retry : s:char=【<80>kl】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>#4】
 before_getchar【<80>#4】
【l:map】<S-Left>    * <Left><C-O>gE<Right>
【after get esc】
 after_if【<80>#4】
 before_exit【<80>#4】
 after_exit【<80>#4】
is_special_key = 0
 before start_loop【<80>#4】
 after start_loop【<80>#4】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【<80>#4<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【<80>#4<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【<80>#4】
 mode:【i to i】
 start error 【<80>#4】
 error2 【<80>#4】
 after error 【<80>#4】
 brefore retry : s:char=【<80>#4】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kr】
 before_getchar【<80>kr】
【after get esc】
 after_if【<80>kr】
 before_exit【<80>kr】
 after_exit【<80>kr】
is_special_key = 0
 before start_loop【<80>kr】
 after start_loop【<80>kr】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【<80>kr<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【<80>kr<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【<80>kr】
 mode:【i to i】
 start error 【<80>kr】
 error2 【<80>kr】
 after error 【<80>kr】
 brefore retry : s:char=【<80>kr】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kr】
 before_getchar【<80>kr】
【after get esc】
 after_if【<80>kr】
 before_exit【<80>kr】
 after_exit【<80>kr】
is_special_key = 0
 before start_loop【<80>kr】
 after start_loop【<80>kr】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【<80>kr<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【<80>kr<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【<80>kr】
 mode:【i to i】
 start error 【<80>kr】
 error2 【<80>kr】
 after error 【<80>kr】
 brefore retry : s:char=【<80>kr】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kr】
 before_getchar【<80>kr】
【after get esc】
 after_if【<80>kr】
 before_exit【<80>kr】
 after_exit【<80>kr】
is_special_key = 0
 before start_loop【<80>kr】
 after start_loop【<80>kr】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【<80>kr<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【<80>kr<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【<80>kr】
 mode:【i to i】
 start error 【<80>kr】
 error2 【<80>kr】
 after error 【<80>kr】
 brefore retry : s:char=【<80>kr】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kr】
 before_getchar【<80>kr】
【after get esc】
 after_if【<80>kr】
 before_exit【<80>kr】
 after_exit【<80>kr】
is_special_key = 0
 before start_loop【<80>kr】
 after start_loop【<80>kr】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【<80>kr<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【<80>kr<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【<80>kr】
 mode:【i to i】
 start error 【<80>kr】
 error2 【<80>kr】
 after error 【<80>kr】
 brefore retry : s:char=【<80>kr】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kr】
 before_getchar【<80>kr】
【after get esc】
 after_if【<80>kr】
 before_exit【<80>kr】
 after_exit【<80>kr】
is_special_key = 0
 before start_loop【<80>kr】
 after start_loop【<80>kr】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【<80>kr<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【<80>kr<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【<80>kr】
 mode:【i to i】
 start error 【<80>kr】
 error2 【<80>kr】
 after error 【<80>kr】
 brefore retry : s:char=【<80>kr】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kr】
 before_getchar【<80>kr】
【after get esc】
 after_if【<80>kr】
 before_exit【<80>kr】
 after_exit【<80>kr】
is_special_key = 0
 before start_loop【<80>kr】
 after start_loop【<80>kr】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【<80>kr<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【<80>kr<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【<80>kr】
 mode:【i to i】
 start error 【<80>kr】
 error2 【<80>kr】
 after error 【<80>kr】
 brefore retry : s:char=【<80>kr】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kr】
 before_getchar【<80>kr】
【after get esc】
 after_if【<80>kr】
 before_exit【<80>kr】
 after_exit【<80>kr】
is_special_key = 0
 before start_loop【<80>kr】
 after start_loop【<80>kr】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【<80>kr<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【<80>kr<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【<80>kr】
 mode:【i to i】
 start error 【<80>kr】
 error2 【<80>kr】
 after error 【<80>kr】
 brefore retry : s:char=【<80>kr】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kr】
 before_getchar【<80>kr】
【after get esc】
 after_if【<80>kr】
 before_exit【<80>kr】
 after_exit【<80>kr】
is_special_key = 0
 before start_loop【<80>kr】
 after start_loop【<80>kr】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【<80>kr<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【<80>kr<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【<80>kr】
 mode:【i to i】
 start error 【<80>kr】
 error2 【<80>kr】
 after error 【<80>kr】
 brefore retry : s:char=【<80>kr】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kr】
 before_getchar【<80>kr】
【after get esc】
 after_if【<80>kr】
 before_exit【<80>kr】
 after_exit【<80>kr】
is_special_key = 0
 before start_loop【<80>kr】
 after start_loop【<80>kr】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【<80>kr<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【<80>kr<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【<80>kr】
 mode:【i to i】
 start error 【<80>kr】
 error2 【<80>kr】
 after error 【<80>kr】
 brefore retry : s:char=【<80>kr】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kr】
 before_getchar【<80>kr】
【after get esc】
 after_if【<80>kr】
 before_exit【<80>kr】
 after_exit【<80>kr】
is_special_key = 0
 before start_loop【<80>kr】
 after start_loop【<80>kr】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【<80>kr<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【<80>kr<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【<80>kr】
 mode:【i to i】
 start error 【<80>kr】
 error2 【<80>kr】
 after error 【<80>kr】
 brefore retry : s:char=【<80>kr】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kr】
 before_getchar【<80>kr】
【after get esc】
 after_if【<80>kr】
 before_exit【<80>kr】
 after_exit【<80>kr】
is_special_key = 0
 before start_loop【<80>kr】
 after start_loop【<80>kr】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【<80>kr<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【<80>kr<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【<80>kr】
 mode:【i to i】
 start error 【<80>kr】
 error2 【<80>kr】
 after error 【<80>kr】
 brefore retry : s:char=【<80>kr】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kr】
 before_getchar【<80>kr】
【after get esc】
 after_if【<80>kr】
 before_exit【<80>kr】
 after_exit【<80>kr】
is_special_key = 0
 before start_loop【<80>kr】
 after start_loop【<80>kr】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【<80>kr<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【<80>kr<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【<80>kr】
 mode:【i to i】
 start error 【<80>kr】
 error2 【<80>kr】
 after error 【<80>kr】
 brefore retry : s:char=【<80>kr】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kr】
 before_getchar【<80>kr】
【after get esc】
 after_if【<80>kr】
 before_exit【<80>kr】
 after_exit【<80>kr】
is_special_key = 0
 before start_loop【<80>kr】
 after start_loop【<80>kr】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【<80>kr<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【<80>kr<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【<80>kr】
 mode:【i to i】
 start error 【<80>kr】
 error2 【<80>kr】
 after error 【<80>kr】
 brefore retry : s:char=【<80>kr】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kr】
 before_getchar【<80>kr】
【after get esc】
 after_if【<80>kr】
 before_exit【<80>kr】
 after_exit【<80>kr】
is_special_key = 0
 before start_loop【<80>kr】
 after start_loop【<80>kr】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【<80>kr<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【<80>kr<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【<80>kr】
 mode:【i to i】
 start error 【<80>kr】
 error2 【<80>kr】
 after error 【<80>kr】
 brefore retry : s:char=【<80>kr】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kr】
 before_getchar【<80>kr】
【after get esc】
 after_if【<80>kr】
 before_exit【<80>kr】
 after_exit【<80>kr】
is_special_key = 0
 before start_loop【<80>kr】
 after start_loop【<80>kr】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【<80>kr<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【<80>kr<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【<80>kr】
 mode:【i to i】
 start error 【<80>kr】
 error2 【<80>kr】
 after error 【<80>kr】
 brefore retry : s:char=【<80>kr】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kr】
 before_getchar【<80>kr】
【after get esc】
 after_if【<80>kr】
 before_exit【<80>kr】
 after_exit【<80>kr】
is_special_key = 0
 before start_loop【<80>kr】
 after start_loop【<80>kr】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【<80>kr<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【<80>kr<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【<80>kr】
 mode:【i to i】
 start error 【<80>kr】
 error2 【<80>kr】
 after error 【<80>kr】
 brefore retry : s:char=【<80>kr】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kr】
 before_getchar【<80>kr】
【after get esc】
 after_if【<80>kr】
 before_exit【<80>kr】
 after_exit【<80>kr】
is_special_key = 0
 before start_loop【<80>kr】
 after start_loop【<80>kr】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【<80>kr<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【<80>kr<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【<80>kr】
 mode:【i to i】
 start error 【<80>kr】
 error2 【<80>kr】
 after error 【<80>kr】
 brefore retry : s:char=【<80>kr】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kr】
 before_getchar【<80>kr】
【after get esc】
 after_if【<80>kr】
 before_exit【<80>kr】
 after_exit【<80>kr】
is_special_key = 0
 before start_loop【<80>kr】
 after start_loop【<80>kr】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【<80>kr<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【<80>kr<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【<80>kr】
 mode:【i to i】
 start error 【<80>kr】
 error2 【<80>kr】
 after error 【<80>kr】
 brefore retry : s:char=【<80>kr】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kr】
 before_getchar【<80>kr】
【after get esc】
 after_if【<80>kr】
 before_exit【<80>kr】
 after_exit【<80>kr】
is_special_key = 0
 before start_loop【<80>kr】
 after start_loop【<80>kr】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【<80>kr<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【<80>kr<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【<80>kr】
 mode:【i to i】
 start error 【<80>kr】
 error2 【<80>kr】
 after error 【<80>kr】
 brefore retry : s:char=【<80>kr】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kr】
 before_getchar【<80>kr】
【after get esc】
 after_if【<80>kr】
 before_exit【<80>kr】
 after_exit【<80>kr】
is_special_key = 0
 before start_loop【<80>kr】
 after start_loop【<80>kr】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【<80>kr<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【<80>kr<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【<80>kr】
 mode:【i to i】
 start error 【<80>kr】
 error2 【<80>kr】
 after error 【<80>kr】
 brefore retry : s:char=【<80>kr】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kr】
 before_getchar【<80>kr】
【after get esc】
 after_if【<80>kr】
 before_exit【<80>kr】
 after_exit【<80>kr】
is_special_key = 0
 before start_loop【<80>kr】
 after start_loop【<80>kr】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【<80>kr<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【<80>kr<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【<80>kr】
 mode:【i to i】
 start error 【<80>kr】
 error2 【<80>kr】
 after error 【<80>kr】
 brefore retry : s:char=【<80>kr】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kr】
 before_getchar【<80>kr】
【after get esc】
 after_if【<80>kr】
 before_exit【<80>kr】
 after_exit【<80>kr】
is_special_key = 0
 before start_loop【<80>kr】
 after start_loop【<80>kr】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【<80>kr<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【<80>kr<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【<80>kr】
 mode:【i to i】
 start error 【<80>kr】
 error2 【<80>kr】
 after error 【<80>kr】
 brefore retry : s:char=【<80>kr】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kr】
 before_getchar【<80>kr】
【after get esc】
 after_if【<80>kr】
 before_exit【<80>kr】
 after_exit【<80>kr】
is_special_key = 0
 before start_loop【<80>kr】
 after start_loop【<80>kr】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【<80>kr<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【<80>kr<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【<80>kr】
 mode:【i to i】
 start error 【<80>kr】
 error2 【<80>kr】
 after error 【<80>kr】
 brefore retry : s:char=【<80>kr】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kr】
 before_getchar【<80>kr】
【after get esc】
 after_if【<80>kr】
 before_exit【<80>kr】
 after_exit【<80>kr】
is_special_key = 0
 before start_loop【<80>kr】
 after start_loop【<80>kr】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【<80>kr<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【<80>kr<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【<80>kr】
 mode:【i to i】
 start error 【<80>kr】
 error2 【<80>kr】
 after error 【<80>kr】
 brefore retry : s:char=【<80>kr】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kr】
 before_getchar【<80>kr】
【after get esc】
 after_if【<80>kr】
 before_exit【<80>kr】
 after_exit【<80>kr】
is_special_key = 0
 before start_loop【<80>kr】
 after start_loop【<80>kr】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【<80>kr<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【<80>kr<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【<80>kr】
 mode:【i to i】
 start error 【<80>kr】
 error2 【<80>kr】
 after error 【<80>kr】
 brefore retry : s:char=【<80>kr】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kr】
 before_getchar【<80>kr】
【after get esc】
 after_if【<80>kr】
 before_exit【<80>kr】
 after_exit【<80>kr】
is_special_key = 0
 before start_loop【<80>kr】
 after start_loop【<80>kr】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【<80>kr<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【<80>kr<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【<80>kr】
 mode:【i to i】
 start error 【<80>kr】
 error2 【<80>kr】
 after error 【<80>kr】
 brefore retry : s:char=【<80>kr】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kr】
 before_getchar【<80>kr】
【after get esc】
 after_if【<80>kr】
 before_exit【<80>kr】
 after_exit【<80>kr】
is_special_key = 0
 before start_loop【<80>kr】
 after start_loop【<80>kr】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【<80>kr<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【<80>kr<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【<80>kr】
 mode:【i to i】
 start error 【<80>kr】
 error2 【<80>kr】
 after error 【<80>kr】
 brefore retry : s:char=【<80>kr】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kr】
 before_getchar【<80>kr】
【after get esc】
 after_if【<80>kr】
 before_exit【<80>kr】
 after_exit【<80>kr】
is_special_key = 0
 before start_loop【<80>kr】
 after start_loop【<80>kr】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【<80>kr<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【<80>kr<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【<80>kr】
 mode:【i to i】
 start error 【<80>kr】
 error2 【<80>kr】
 after error 【<80>kr】
 brefore retry : s:char=【<80>kr】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【^Z】
 before_getchar【^Z】
【l:map】<C-Z>       * <C-O>u
【after get esc】
 after_if【^Z】
 before_exit【^Z】
 after_exit【^Z】
is_special_key = 0
 before start_loop【^Z】
 after start_loop【^Z】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【^Z】
 mode:【i to i】
 start error 【^Z】
 error2 【^Z】
 after error 【^Z】
 brefore retry : s:char=【^Z】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【^Z】
 before_getchar【^Z】
【l:map】<C-Z>       * <C-O>u
【after get esc】
 after_if【^Z】
 before_exit【^Z】
 after_exit【^Z】
is_special_key = 0
 before start_loop【^Z】
 after start_loop【^Z】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【^Z】
 mode:【i to i】
 start error 【^Z】
 error2 【^Z】
 after error 【^Z】
 brefore retry : s:char=【^Z】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【^Z】
 before_getchar【^Z】
【l:map】<C-Z>       * <C-O>u
【after get esc】
 after_if【^Z】
 before_exit【^Z】
 after_exit【^Z】
is_special_key = 0
 before start_loop【^Z】
 after start_loop【^Z】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【^Z】
 mode:【i to i】
 start error 【^Z】
 error2 【^Z】
 after error 【^Z】
 brefore retry : s:char=【^Z】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【^Z】
 before_getchar【^Z】
【l:map】<C-Z>       * <C-O>u
【after get esc】
 after_if【^Z】
 before_exit【^Z】
 after_exit【^Z】
is_special_key = 0
 before start_loop【^Z】
 after start_loop【^Z】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【^Z】
 mode:【i to i】
 start error 【^Z】
 error2 【^Z】
 after error 【^Z】
 brefore retry : s:char=【^Z】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【^Z】
 before_getchar【^Z】
【l:map】<C-Z>       * <C-O>u
【after get esc】
 after_if【^Z】
 before_exit【^Z】
 after_exit【^Z】
is_special_key = 0
 before start_loop【^Z】
 after start_loop【^Z】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【^Z】
 mode:【i to i】
 start error 【^Z】
 error2 【^Z】
 after error 【^Z】
 brefore retry : s:char=【^Z】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【^Z】
 before_getchar【^Z】
【l:map】<C-Z>       * <C-O>u
【after get esc】
 after_if【^Z】
 before_exit【^Z】
 after_exit【^Z】
is_special_key = 0
 before start_loop【^Z】
 after start_loop【^Z】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【^Z】
 mode:【i to i】
 start error 【^Z】
 error2 【^Z】
 after error 【^Z】
 brefore retry : s:char=【^Z】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【^Z】
 before_getchar【^Z】
【l:map】<C-Z>       * <C-O>u
【after get esc】
 after_if【^Z】
 before_exit【^Z】
 after_exit【^Z】
is_special_key = 0
 before start_loop【^Z】
 after start_loop【^Z】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【^Z】
 mode:【i to i】
 start error 【^Z】
 error2 【^Z】
 after error 【^Z】
 brefore retry : s:char=【^Z】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【^Z】
 before_getchar【^Z】
【l:map】<C-Z>       * <C-O>u
【after get esc】
 after_if【^Z】
 before_exit【^Z】
 after_exit【^Z】
is_special_key = 0
 before start_loop【^Z】
 after start_loop【^Z】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
invalid input: from mode i to i
now mode: n
after invalid input: from mode i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【^Z】
 mode:【i to i】
 start error 【^Z】
 error2 【^Z】
 can't be replayed in 1cursors 【^Z】
 after error 【^Z】
 brefore retry : s:char=【^Z】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【^Z】
 before_getchar【^Z】
【l:map】<C-Z>       * <C-O>u
【after get esc】
 after_if【^Z】
 before_exit【^Z】
 after_exit【^Z】
is_special_key = 0
 before start_loop【^Z】
 after start_loop【^Z】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
invalid input: from mode i to 
now mode: n
after invalid input: from mode i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
invalid input: from mode i to i
now mode: n
after invalid input: from mode i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【^Z】
 mode:【i to i】
 start error 【^Z】
 error2 【^Z】
 can't be replayed in 2cursors 【^Z】
 after error 【^Z】
 brefore retry : s:char=【^Z】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【 】
 before_getchar【 】
【l:map】<Space>     * <C-G>u<Space>
【after get esc】
 after_if【 】
 before_exit【 】
 after_exit【 】
is_special_key = 0
 before start_loop【 】
 after start_loop【 】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【 <80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【 <80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【 】
 mode:【i to i】
 start error 【 】
 error2 【 】
 after error 【 】
 brefore retry : s:char=【 】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【^Z】
 before_getchar【^Z】
【l:map】<C-Z>       * <C-O>u
【after get esc】
 after_if【^Z】
 before_exit【^Z】
 after_exit【^Z】
is_special_key = 0
 before start_loop【^Z】
 after start_loop【^Z】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【^Z】
 mode:【i to i】
 start error 【^Z】
 error2 【^Z】
 after error 【^Z】
 brefore retry : s:char=【^Z】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【^Z】
 before_getchar【^Z】
【l:map】<C-Z>       * <C-O>u
【after get esc】
 after_if【^Z】
 before_exit【^Z】
 after_exit【^Z】
is_special_key = 0
 before start_loop【^Z】
 after start_loop【^Z】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
invalid input: from mode i to 
now mode: n
after invalid input: from mode i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
invalid input: from mode i to i
now mode: n
after invalid input: from mode i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【^Z】
 mode:【i to i】
 start error 【^Z】
 error2 【^Z】
 can't be replayed in 2cursors 【^Z】
 after error 【^Z】
 brefore retry : s:char=【^Z】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【≈】
 before_getchar【≈】
【after get esc】
 after_if【≈】
 before_exit【≈】
 start 【】
 mode:【i to 】
 start error 【】
 error2 【】
 after error 【】
 brefore retry : s:char=【】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【^D】
 before_getchar【^D】
【l:map】<C-D>       * :<C-U>stopinsert<CR>gv:<C-U>call multiple_cursors#new("v", 0)<CR>
【after get esc】
 after_if【^D】
 before_exit【^D】
 after_exit【^D】
is_special_key = 1
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-new-word)】
 feedkesys s:saved_keys=【】
 start 【^D】
 mode:【v to 】
 start error 【^D】
 error2 【^D】
 after error 【^D】
 brefore retry : s:char=【^D】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kr】
 before_getchar【<80>kr】
【after get esc】
 after_if【<80>kr】
 before_exit【<80>kr】
 after_exit【<80>kr】
is_special_key = 0
 before start_loop【<80>kr】
 after start_loop【<80>kr】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kr】
 type(c)=【0】
 before 【<80>kr<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
after mc-input5: from v to v
after mc-input: from v to v
before apply2 from v to v
before apply【<80>kr】
 type(c)=【0】
 before 【<80>kr<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to v
before mc-detect: from v to v
after mc-detect: from v to v
before mc-input: from v to v
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kr】
 mode:【v to v】
 start error 【<80>kr】
 error2 【<80>kr】
 after error 【<80>kr】
 brefore retry : s:char=【<80>kr】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【】
 before_getchar【】
【after get esc】
 after_if【】
 before_exit【】
 after_exit【】
is_special_key = 0
 before start_loop【】
 after start_loop【】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
after mc-input5: from v to v
after mc-input: from v to v
before apply2 from v to v
before apply【】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to v
before mc-detect: from v to v
after mc-detect: from v to v
before mc-input: from v to v
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【】
 mode:【v to v】
 start error 【】
 error2 【】
 after error 【】
 brefore retry : s:char=【】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【^Z】
 before_getchar【^Z】
【l:map】<C-Z>       * u
【after get esc】
 after_if【^Z】
 before_exit【^Z】
 after_exit【^Z】
is_special_key = 0
 before start_loop【^Z】
 after start_loop【^Z】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【^Z】
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to n
before mc-input3: from v to n
after mc-input5: from v to n
after mc-input: from v to n
before apply2 from v to n
before apply【^Z】
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to n
before mc-detect: from v to n
after mc-detect: from v to n
before mc-input: from v to n
before mc-input2: from v to n
before mc-input3: from v to n
before mc-input4: from v to n
after mc-input: from v to n
 start 【^Z】
 mode:【v to n】
 start error 【^Z】
 error2 【^Z】
 after error 【^Z】
 brefore retry : s:char=【^Z】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kr】
 before_getchar【<80>kr】
【after get esc】
 after_if【<80>kr】
 before_exit【<80>kr】
 after_exit【<80>kr】
is_special_key = 0
 before start_loop【<80>kr】
 after start_loop【<80>kr】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from n to 
before apply【<80>kr】
 type(c)=【0】
 before 【<80>kr<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from n to 
before mc-detect: from n to 
after mc-detect: from n to 
before mc-input: from n to 
before mc-input2: from n to n
before mc-input3: from n to n
after mc-input5: from n to n
after mc-input: from n to n
before apply2 from n to n
before apply【<80>kr】
 type(c)=【0】
 before 【<80>kr<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from n to n
before mc-detect: from n to n
after mc-detect: from n to n
before mc-input: from n to n
before mc-input2: from n to n
before mc-input3: from n to n
before mc-input4: from n to n
after mc-input: from n to n
 start 【<80>kr】
 mode:【n to n】
 start error 【<80>kr】
 error2 【<80>kr】
 after error 【<80>kr】
 brefore retry : s:char=【<80>kr】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kr】
 before_getchar【<80>kr】
【after get esc】
 after_if【<80>kr】
 before_exit【<80>kr】
 after_exit【<80>kr】
is_special_key = 0
 before start_loop【<80>kr】
 after start_loop【<80>kr】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from n to 
before apply【<80>kr】
 type(c)=【0】
 before 【<80>kr<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from n to 
before mc-detect: from n to 
after mc-detect: from n to 
before mc-input: from n to 
before mc-input2: from n to n
before mc-input3: from n to n
after mc-input5: from n to n
after mc-input: from n to n
before apply2 from n to n
before apply【<80>kr】
 type(c)=【0】
 before 【<80>kr<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from n to n
before mc-detect: from n to n
after mc-detect: from n to n
before mc-input: from n to n
before mc-input2: from n to n
before mc-input3: from n to n
before mc-input4: from n to n
after mc-input: from n to n
 start 【<80>kr】
 mode:【n to n】
 start error 【<80>kr】
 error2 【<80>kr】
 after error 【<80>kr】
 brefore retry : s:char=【<80>kr】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kr】
 before_getchar【<80>kr】
【after get esc】
 after_if【<80>kr】
 before_exit【<80>kr】
 after_exit【<80>kr】
is_special_key = 0
 before start_loop【<80>kr】
 after start_loop【<80>kr】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from n to 
before apply【<80>kr】
 type(c)=【0】
 before 【<80>kr<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from n to 
before mc-detect: from n to 
after mc-detect: from n to 
before mc-input: from n to 
before mc-input2: from n to n
before mc-input3: from n to n
after mc-input5: from n to n
after mc-input: from n to n
before apply2 from n to n
before apply【<80>kr】
 type(c)=【0】
 before 【<80>kr<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from n to n
before mc-detect: from n to n
after mc-detect: from n to n
before mc-input: from n to n
before mc-input2: from n to n
before mc-input3: from n to n
before mc-input4: from n to n
after mc-input: from n to n
 start 【<80>kr】
 mode:【n to n】
 start error 【<80>kr】
 error2 【<80>kr】
 after error 【<80>kr】
 brefore retry : s:char=【<80>kr】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kr】
 before_getchar【<80>kr】
【after get esc】
 after_if【<80>kr】
 before_exit【<80>kr】
 after_exit【<80>kr】
is_special_key = 0
 before start_loop【<80>kr】
 after start_loop【<80>kr】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from n to 
before apply【<80>kr】
 type(c)=【0】
 before 【<80>kr<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from n to 
before mc-detect: from n to 
after mc-detect: from n to 
before mc-input: from n to 
before mc-input2: from n to n
before mc-input3: from n to n
after mc-input5: from n to n
after mc-input: from n to n
before apply2 from n to n
before apply【<80>kr】
 type(c)=【0】
 before 【<80>kr<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from n to n
before mc-detect: from n to n
after mc-detect: from n to n
before mc-input: from n to n
before mc-input2: from n to n
before mc-input3: from n to n
before mc-input4: from n to n
after mc-input: from n to n
 start 【<80>kr】
 mode:【n to n】
 start error 【<80>kr】
 error2 【<80>kr】
 after error 【<80>kr】
 brefore retry : s:char=【<80>kr】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【i】
 before_getchar【i】
【after get esc】
 after_if【i】
 before_exit【i】
 after_exit【i】
is_special_key = 0
 before start_loop【i】
 after start_loop【i】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from n to 
before apply【i】
 type(c)=【0】
 before 【i<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from n to 
before mc-detect: from n to 
after mc-detect: from n to 
before mc-input: from n to 
before mc-input2: from n to i
before mc-input3: from n to i
after mc-input5: from n to i
after mc-input: from n to i
before apply1 from n to i
 type(c)=【0】
 before 【i<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from n to i
before mc-detect: from n to i
after mc-detect: from n to i
before mc-input: from n to i
before mc-input2: from n to i
before mc-input3: from n to i
before mc-input4: from n to i
after mc-input: from n to i
 start 【i】
 mode:【n to i】
 start error 【i】
 error2 【i】
 after error 【i】
 brefore retry : s:char=【i】
 s:retry_keys=【】
 s:saved_keys=【<80><fd>Rundojoin】
 before_if【<80><fd>Rundojoin】
 before_getchar【<80><fd>Rundojoin】
【l:map】<Plug>undojoin * <C-G>u <BS>
【after get esc】
 after_if【<80><fd>Rundojoin】
 before_exit【<80><fd>Rundojoin】
 after_exit【<80><fd>Rundojoin】
is_special_key = 0
 before start_loop【<80><fd>Rundojoin】
 after start_loop【<80><fd>Rundojoin】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【<80><fd>Rundojoin<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【<80><fd>Rundojoin<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【<80><fd>Rundojoin】
 mode:【i to i】
 start error 【<80><fd>Rundojoin】
 error2 【<80><fd>Rundojoin】
 after error 【<80><fd>Rundojoin】
 brefore retry : s:char=【<80><fd>Rundojoin】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【s】
 before_getchar【s】
【after get esc】
 after_if【s】
 before_exit【s】
 after_exit【s】
is_special_key = 0
 before start_loop【s】
 after start_loop【s】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【s<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【s<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【s】
 mode:【i to i】
 start error 【s】
 error2 【s】
 after error 【s】
 brefore retry : s:char=【s】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【a】
 before_getchar【a】
【after get esc】
 after_if【a】
 before_exit【a】
 after_exit【a】
is_special_key = 0
 before start_loop【a】
 after start_loop【a】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【a<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【a<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【a】
 mode:【i to i】
 start error 【a】
 error2 【a】
 after error 【a】
 brefore retry : s:char=【a】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【d】
 before_getchar【d】
【after get esc】
 after_if【d】
 before_exit【d】
 after_exit【d】
is_special_key = 0
 before start_loop【d】
 after start_loop【d】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【d<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【d<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【d】
 mode:【i to i】
 start error 【d】
 error2 【d】
 after error 【d】
 brefore retry : s:char=【d】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【 】
 before_getchar【 】
【l:map】<Space>     * <C-G>u<Space>
【after get esc】
 after_if【 】
 before_exit【 】
 after_exit【 】
is_special_key = 0
 before start_loop【 】
 after start_loop【 】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【 <80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【 <80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【 】
 mode:【i to i】
 start error 【 】
 error2 【 】
 after error 【 】
 brefore retry : s:char=【 】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【 】
 before_getchar【 】
【l:map】<Space>     * <C-G>u<Space>
【after get esc】
 after_if【 】
 before_exit【 】
 after_exit【 】
is_special_key = 0
 before start_loop【 】
 after start_loop【 】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【 <80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【 <80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【 】
 mode:【i to i】
 start error 【 】
 error2 【 】
 after error 【 】
 brefore retry : s:char=【 】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【a】
 before_getchar【a】
【after get esc】
 after_if【a】
 before_exit【a】
 after_exit【a】
is_special_key = 0
 before start_loop【a】
 after start_loop【a】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【a<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【a<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【a】
 mode:【i to i】
 start error 【a】
 error2 【a】
 after error 【a】
 brefore retry : s:char=【a】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【s】
 before_getchar【s】
【after get esc】
 after_if【s】
 before_exit【s】
 after_exit【s】
is_special_key = 0
 before start_loop【s】
 after start_loop【s】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【s<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【s<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【s】
 mode:【i to i】
 start error 【s】
 error2 【s】
 after error 【s】
 brefore retry : s:char=【s】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【d】
 before_getchar【d】
【after get esc】
 after_if【d】
 before_exit【d】
 after_exit【d】
is_special_key = 0
 before start_loop【d】
 after start_loop【d】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【d<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【d<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【d】
 mode:【i to i】
 start error 【d】
 error2 【d】
 after error 【d】
 brefore retry : s:char=【d】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【s】
 before_getchar【s】
【after get esc】
 after_if【s】
 before_exit【s】
 after_exit【s】
is_special_key = 0
 before start_loop【s】
 after start_loop【s】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【s<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【s<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【s】
 mode:【i to i】
 start error 【s】
 error2 【s】
 after error 【s】
 brefore retry : s:char=【s】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【a】
 before_getchar【a】
【after get esc】
 after_if【a】
 before_exit【a】
 after_exit【a】
is_special_key = 0
 before start_loop【a】
 after start_loop【a】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【a<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【a<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【a】
 mode:【i to i】
 start error 【a】
 error2 【a】
 after error 【a】
 brefore retry : s:char=【a】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【 】
 before_getchar【 】
【l:map】<Space>     * <C-G>u<Space>
【after get esc】
 after_if【 】
 before_exit【 】
 after_exit【 】
is_special_key = 0
 before start_loop【 】
 after start_loop【 】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【 <80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【 <80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【 】
 mode:【i to i】
 start error 【 】
 error2 【 】
 after error 【 】
 brefore retry : s:char=【 】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【 】
 before_getchar【 】
【l:map】<Space>     * <C-G>u<Space>
【after get esc】
 after_if【 】
 before_exit【 】
 after_exit【 】
is_special_key = 0
 before start_loop【 】
 after start_loop【 】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【 <80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【 <80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【 】
 mode:【i to i】
 start error 【 】
 error2 【 】
 after error 【 】
 brefore retry : s:char=【 】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【^Z】
 before_getchar【^Z】
【l:map】<C-Z>       * <C-O>u
【after get esc】
 after_if【^Z】
 before_exit【^Z】
 after_exit【^Z】
is_special_key = 0
 before start_loop【^Z】
 after start_loop【^Z】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【^Z】
 mode:【i to i】
 start error 【^Z】
 error2 【^Z】
 after error 【^Z】
 brefore retry : s:char=【^Z】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【^Z】
 before_getchar【^Z】
【l:map】<C-Z>       * <C-O>u
【after get esc】
 after_if【^Z】
 before_exit【^Z】
 after_exit【^Z】
is_special_key = 0
 before start_loop【^Z】
 after start_loop【^Z】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【^Z】
 mode:【i to i】
 start error 【^Z】
 error2 【^Z】
 after error 【^Z】
 brefore retry : s:char=【^Z】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【^Z】
 before_getchar【^Z】
【l:map】<C-Z>       * <C-O>u
【after get esc】
 after_if【^Z】
 before_exit【^Z】
 after_exit【^Z】
is_special_key = 0
 before start_loop【^Z】
 after start_loop【^Z】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【^Z】
 mode:【i to i】
 start error 【^Z】
 error2 【^Z】
 after error 【^Z】
 brefore retry : s:char=【^Z】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【^Z】
 before_getchar【^Z】
【l:map】<C-Z>       * <C-O>u
【after get esc】
 after_if【^Z】
 before_exit【^Z】
 after_exit【^Z】
is_special_key = 0
 before start_loop【^Z】
 after start_loop【^Z】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【^Z】
 mode:【i to i】
 start error 【^Z】
 error2 【^Z】
 after error 【^Z】
 brefore retry : s:char=【^Z】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【^Z】
 before_getchar【^Z】
【l:map】<C-Z>       * <C-O>u
【after get esc】
 after_if【^Z】
 before_exit【^Z】
 after_exit【^Z】
is_special_key = 0
 before start_loop【^Z】
 after start_loop【^Z】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【^Z】
 mode:【i to i】
 start error 【^Z】
 error2 【^Z】
 after error 【^Z】
 brefore retry : s:char=【^Z】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【^Z】
 before_getchar【^Z】
【l:map】<C-Z>       * <C-O>u
【after get esc】
 after_if【^Z】
 before_exit【^Z】
 after_exit【^Z】
is_special_key = 0
 before start_loop【^Z】
 after start_loop【^Z】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【^Z】
 mode:【i to i】
 start error 【^Z】
 error2 【^Z】
 after error 【^Z】
 brefore retry : s:char=【^Z】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【^Z】
 before_getchar【^Z】
【l:map】<C-Z>       * <C-O>u
【after get esc】
 after_if【^Z】
 before_exit【^Z】
 after_exit【^Z】
is_special_key = 0
 before start_loop【^Z】
 after start_loop【^Z】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
invalid input: from mode i to 
now mode: n
after invalid input: from mode i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
invalid input: from mode i to i
now mode: n
after invalid input: from mode i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【^Z】
 mode:【i to i】
 start error 【^Z】
 error2 【^Z】
 can't be replayed in 2cursors 【^Z】
 after error 【^Z】
 brefore retry : s:char=【^Z】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【≈】
 before_getchar【≈】
【after get esc】
 after_if【≈】
 before_exit【≈】
 start 【】
 mode:【 to 】
 start error 【】
 error2 【】
 after error 【】
 brefore retry : s:char=【】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【^D】
 before_getchar【^D】
【l:map】<C-D>       * :<C-U>stopinsert<CR>gv:<C-U>call multiple_cursors#new("v", 0)<CR>
【after get esc】
 after_if【^D】
 before_exit【^D】
 after_exit【^D】
is_special_key = 1
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-new-word)】
 feedkesys s:saved_keys=【】
 start 【^D】
 mode:【v to 】
 start error 【^D】
 error2 【^D】
 after error 【^D】
 brefore retry : s:char=【^D】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【v】
 before_getchar【v】
【after get esc】
 after_if【v】
 before_exit【v】
 after_exit【v】
is_special_key = 0
 before start_loop【v】
 after start_loop【v】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【v】
 type(c)=【0】
 before 【v<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to n
before mc-input3: from v to n
after mc-input5: from v to n
after mc-input: from v to n
before apply2 from v to n
before apply【v】
 type(c)=【0】
 before 【v<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to n
before mc-detect: from v to n
after mc-detect: from v to n
before mc-input: from v to n
before mc-input2: from v to n
before mc-input3: from v to n
before mc-input4: from v to n
after mc-input: from v to n
 start 【v】
 mode:【v to n】
 start error 【v】
 error2 【v】
 after error 【v】
 brefore retry : s:char=【v】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【a】
 before_getchar【a】
【after get esc】
 after_if【a】
 before_exit【a】
 after_exit【a】
is_special_key = 0
 before start_loop【a】
 after start_loop【a】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from n to 
before apply【a】
 type(c)=【0】
 before 【a<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from n to 
before mc-detect: from n to 
after mc-detect: from n to 
before mc-input: from n to 
before mc-input2: from n to i
before mc-input3: from n to i
after mc-input5: from n to i
after mc-input: from n to i
before apply1 from n to i
 type(c)=【0】
 before 【a<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from n to i
before mc-detect: from n to i
after mc-detect: from n to i
before mc-input: from n to i
before mc-input2: from n to i
before mc-input3: from n to i
before mc-input4: from n to i
after mc-input: from n to i
 start 【a】
 mode:【n to i】
 start error 【a】
 error2 【a】
 after error 【a】
 brefore retry : s:char=【a】
 s:retry_keys=【】
 s:saved_keys=【<80><fd>Rundojoin】
 before_if【<80><fd>Rundojoin】
 before_getchar【<80><fd>Rundojoin】
【l:map】<Plug>undojoin * <C-G>u <BS>
【after get esc】
 after_if【<80><fd>Rundojoin】
 before_exit【<80><fd>Rundojoin】
 after_exit【<80><fd>Rundojoin】
is_special_key = 0
 before start_loop【<80><fd>Rundojoin】
 after start_loop【<80><fd>Rundojoin】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【<80><fd>Rundojoin<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【<80><fd>Rundojoin<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【<80><fd>Rundojoin】
 mode:【i to i】
 start error 【<80><fd>Rundojoin】
 error2 【<80><fd>Rundojoin】
 after error 【<80><fd>Rundojoin】
 brefore retry : s:char=【<80><fd>Rundojoin】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【】
 before_getchar【】
【l:map】<CR>        * <Space><BS><C-O>:call UndoableInsertLine("Cr")<CR>
【after get esc】
 after_if【】
 before_exit【】
 after_exit【】
is_special_key = 0
 before start_loop【】
 after start_loop【】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【】
 mode:【i to i】
 start error 【】
 error2 【】
 after error 【】
 brefore retry : s:char=【】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【^Z】
 before_getchar【^Z】
【l:map】<C-Z>       * <C-O>u
【after get esc】
 after_if【^Z】
 before_exit【^Z】
 after_exit【^Z】
is_special_key = 0
 before start_loop【^Z】
 after start_loop【^Z】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【^Z】
 mode:【i to i】
 start error 【^Z】
 error2 【^Z】
 after error 【^Z】
 brefore retry : s:char=【^Z】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【^Z】
 before_getchar【^Z】
【l:map】<C-Z>       * <C-O>u
【after get esc】
 after_if【^Z】
 before_exit【^Z】
 after_exit【^Z】
is_special_key = 0
 before start_loop【^Z】
 after start_loop【^Z】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【^Z】
 mode:【i to i】
 start error 【^Z】
 error2 【^Z】
 after error 【^Z】
 brefore retry : s:char=【^Z】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【^Z】
 before_getchar【^Z】
【l:map】<C-Z>       * <C-O>u
【after get esc】
 after_if【^Z】
 before_exit【^Z】
 after_exit【^Z】
is_special_key = 0
 before start_loop【^Z】
 after start_loop【^Z】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【^Z】
 mode:【i to i】
 start error 【^Z】
 error2 【^Z】
 after error 【^Z】
 brefore retry : s:char=【^Z】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【 】
 before_getchar【 】
【l:map】<Space>     * <C-G>u<Space>
【after get esc】
 after_if【 】
 before_exit【 】
 after_exit【 】
is_special_key = 0
 before start_loop【 】
 after start_loop【 】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【 <80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【 <80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【 】
 mode:【i to i】
 start error 【 】
 error2 【 】
 after error 【 】
 brefore retry : s:char=【 】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【 】
 before_getchar【 】
【l:map】<Space>     * <C-G>u<Space>
【after get esc】
 after_if【 】
 before_exit【 】
 after_exit【 】
is_special_key = 0
 before start_loop【 】
 after start_loop【 】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【 <80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【 <80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【 】
 mode:【i to i】
 start error 【 】
 error2 【 】
 after error 【 】
 brefore retry : s:char=【 】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【】
 before_getchar【】
【l:map】<CR>        * <Space><BS><C-O>:call UndoableInsertLine("Cr")<CR>
【after get esc】
 after_if【】
 before_exit【】
 after_exit【】
is_special_key = 0
 before start_loop【】
 after start_loop【】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【】
 mode:【i to i】
 start error 【】
 error2 【】
 after error 【】
 brefore retry : s:char=【】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【】
 before_getchar【】
【l:map】<CR>        * <Space><BS><C-O>:call UndoableInsertLine("Cr")<CR>
【after get esc】
 after_if【】
 before_exit【】
 after_exit【】
is_special_key = 0
 before start_loop【】
 after start_loop【】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【】
 mode:【i to i】
 start error 【】
 error2 【】
 after error 【】
 brefore retry : s:char=【】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【^Z】
 before_getchar【^Z】
【l:map】<C-Z>       * <C-O>u
【after get esc】
 after_if【^Z】
 before_exit【^Z】
 after_exit【^Z】
is_special_key = 0
 before start_loop【^Z】
 after start_loop【^Z】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【^Z】
 mode:【i to i】
 start error 【^Z】
 error2 【^Z】
 after error 【^Z】
 brefore retry : s:char=【^Z】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【^Z】
 before_getchar【^Z】
【l:map】<C-Z>       * <C-O>u
【after get esc】
 after_if【^Z】
 before_exit【^Z】
 after_exit【^Z】
is_special_key = 0
 before start_loop【^Z】
 after start_loop【^Z】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【^Z】
 mode:【i to i】
 start error 【^Z】
 error2 【^Z】
 after error 【^Z】
 brefore retry : s:char=【^Z】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【^Z】
 before_getchar【^Z】
【l:map】<C-Z>       * <C-O>u
【after get esc】
 after_if【^Z】
 before_exit【^Z】
 after_exit【^Z】
is_special_key = 0
 before start_loop【^Z】
 after start_loop【^Z】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【^Z】
 mode:【i to i】
 start error 【^Z】
 error2 【^Z】
 after error 【^Z】
 brefore retry : s:char=【^Z】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【^Z】
 before_getchar【^Z】
【l:map】<C-Z>       * <C-O>u
【after get esc】
 after_if【^Z】
 before_exit【^Z】
 after_exit【^Z】
is_special_key = 0
 before start_loop【^Z】
 after start_loop【^Z】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【^Z】
 mode:【i to i】
 start error 【^Z】
 error2 【^Z】
 after error 【^Z】
 brefore retry : s:char=【^Z】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【^Z】
 before_getchar【^Z】
【l:map】<C-Z>       * <C-O>u
【after get esc】
 after_if【^Z】
 before_exit【^Z】
 after_exit【^Z】
is_special_key = 0
 before start_loop【^Z】
 after start_loop【^Z】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【^Z】
 mode:【i to i】
 start error 【^Z】
 error2 【^Z】
 after error 【^Z】
 brefore retry : s:char=【^Z】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【^Z】
 before_getchar【^Z】
【l:map】<C-Z>       * <C-O>u
【after get esc】
 after_if【^Z】
 before_exit【^Z】
 after_exit【^Z】
is_special_key = 0
 before start_loop【^Z】
 after start_loop【^Z】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【^Z】
 mode:【i to i】
 start error 【^Z】
 error2 【^Z】
 after error 【^Z】
 brefore retry : s:char=【^Z】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【^Z】
 before_getchar【^Z】
【l:map】<C-Z>       * <C-O>u
【after get esc】
 after_if【^Z】
 before_exit【^Z】
 after_exit【^Z】
is_special_key = 0
 before start_loop【^Z】
 after start_loop【^Z】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【^Z】
 mode:【i to i】
 start error 【^Z】
 error2 【^Z】
 after error 【^Z】
 brefore retry : s:char=【^Z】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【^Z】
 before_getchar【^Z】
【l:map】<C-Z>       * <C-O>u
【after get esc】
 after_if【^Z】
 before_exit【^Z】
 after_exit【^Z】
is_special_key = 0
 before start_loop【^Z】
 after start_loop【^Z】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【^Z】
 mode:【i to i】
 start error 【^Z】
 error2 【^Z】
 after error 【^Z】
 brefore retry : s:char=【^Z】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【^Z】
 before_getchar【^Z】
【l:map】<C-Z>       * <C-O>u
【after get esc】
 after_if【^Z】
 before_exit【^Z】
 after_exit【^Z】
is_special_key = 0
 before start_loop【^Z】
 after start_loop【^Z】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【^Z】
 mode:【i to i】
 start error 【^Z】
 error2 【^Z】
 after error 【^Z】
 brefore retry : s:char=【^Z】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【^Z】
 before_getchar【^Z】
【l:map】<C-Z>       * <C-O>u
【after get esc】
 after_if【^Z】
 before_exit【^Z】
 after_exit【^Z】
is_special_key = 0
 before start_loop【^Z】
 after start_loop【^Z】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
invalid input: from mode i to i
now mode: n
after invalid input: from mode i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【^Z】
 mode:【i to i】
 start error 【^Z】
 error2 【^Z】
 can't be replayed in 1cursors 【^Z】
 after error 【^Z】
 brefore retry : s:char=【^Z】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【^Z】
 before_getchar【^Z】
【l:map】<C-Z>       * <C-O>u
【after get esc】
 after_if【^Z】
 before_exit【^Z】
 after_exit【^Z】
is_special_key = 0
 before start_loop【^Z】
 after start_loop【^Z】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
invalid input: from mode i to i
now mode: n
after invalid input: from mode i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【^Z】
 mode:【i to i】
 start error 【^Z】
 error2 【^Z】
 can't be replayed in 1cursors 【^Z】
 after error 【^Z】
 brefore retry : s:char=【^Z】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【^Z】
 before_getchar【^Z】
【l:map】<C-Z>       * <C-O>u
【after get esc】
 after_if【^Z】
 before_exit【^Z】
 after_exit【^Z】
is_special_key = 0
 before start_loop【^Z】
 after start_loop【^Z】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
invalid input: from mode i to i
now mode: n
after invalid input: from mode i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【^Z】
 mode:【i to i】
 start error 【^Z】
 error2 【^Z】
 can't be replayed in 1cursors 【^Z】
 after error 【^Z】
 brefore retry : s:char=【^Z】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【^Z】
 before_getchar【^Z】
【l:map】<C-Z>       * <C-O>u
【after get esc】
 after_if【^Z】
 before_exit【^Z】
 after_exit【^Z】
is_special_key = 0
 before start_loop【^Z】
 after start_loop【^Z】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
invalid input: from mode i to i
now mode: n
after invalid input: from mode i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【^Z】
 mode:【i to i】
 start error 【^Z】
 error2 【^Z】
 can't be replayed in 1cursors 【^Z】
 after error 【^Z】
 brefore retry : s:char=【^Z】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【^Z】
 before_getchar【^Z】
【l:map】<C-Z>       * <C-O>u
【after get esc】
 after_if【^Z】
 before_exit【^Z】
 after_exit【^Z】
is_special_key = 0
 before start_loop【^Z】
 after start_loop【^Z】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
after mc-input5: from i to i
after mc-input: from i to i
before apply1 from i to i
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to i
before mc-detect: from i to i
after mc-detect: from i to i
invalid input: from mode i to i
now mode: n
after invalid input: from mode i to i
before mc-input: from i to i
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【^Z】
 mode:【i to i】
 start error 【^Z】
 error2 【^Z】
 can't be replayed in 1cursors 【^Z】
 after error 【^Z】
 brefore retry : s:char=【^Z】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【≈】
 before_getchar【≈】
【after get esc】
 after_if【≈】
 before_exit【≈】