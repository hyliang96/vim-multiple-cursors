

 start 【】
 mode:【 to 】
 start error 【】
 error2 【】
 after error 【】
 brefore retry : s:char=【】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kr】
 before_getchar【<80>kr】
【after get esc】
 after_if【<80>kr】
 before_exit【<80>kr】
 after_exit【<80>kr】
is_special_key = 0
 before start_loop【<80>kr】
 after start_loop【<80>kr】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kr】
 type(c)=【0】
 before 【<80>kr<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kr】
 mode:【v to v】
 start error 【<80>kr】
 error2 【<80>kr】
 after error 【<80>kr】
 brefore retry : s:char=【<80>kr】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kr】
 before_getchar【<80>kr】
【after get esc】
 after_if【<80>kr】
 before_exit【<80>kr】
 after_exit【<80>kr】
is_special_key = 0
 before start_loop【<80>kr】
 after start_loop【<80>kr】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kr】
 type(c)=【0】
 before 【<80>kr<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kr】
 mode:【v to v】
 start error 【<80>kr】
 error2 【<80>kr】
 after error 【<80>kr】
 brefore retry : s:char=【<80>kr】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kr】
 before_getchar【<80>kr】
【after get esc】
 after_if【<80>kr】
 before_exit【<80>kr】
 after_exit【<80>kr】
is_special_key = 0
 before start_loop【<80>kr】
 after start_loop【<80>kr】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kr】
 type(c)=【0】
 before 【<80>kr<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kr】
 mode:【v to v】
 start error 【<80>kr】
 error2 【<80>kr】
 after error 【<80>kr】
 brefore retry : s:char=【<80>kr】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kr】
 before_getchar【<80>kr】
【after get esc】
 after_if【<80>kr】
 before_exit【<80>kr】
 after_exit【<80>kr】
is_special_key = 0
 before start_loop【<80>kr】
 after start_loop【<80>kr】
 type(c)=【1】
 c 【<80>kr】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【<80>kr】
before apply2 from v to 
before apply【<80>kr】
 type(c)=【0】
 before 【<80>kr<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【<80>kr】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kr】
 mode:【v to v】
 start error 【<80>kr】
 error2 【<80>kr】
 after error 【<80>kr】
 brefore retry : s:char=【<80>kr】
 s:retry_keys=【】
 s:saved_keys=【<80>kr】
 before_if【<80>kr】
 before_getchar【<80>kr】
【after get esc】
 after_if【<80>kr】
 before_exit【<80>kr】
 after_exit【<80>kr】
is_special_key = 0
 before start_loop【<80>kr】
 after start_loop【<80>kr】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kr】
 type(c)=【0】
 before 【<80>kr<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kr】
 mode:【v to v】
 start error 【<80>kr】
 error2 【<80>kr】
 after error 【<80>kr】
 brefore retry : s:char=【<80>kr】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>%i】
 before_getchar【<80>%i】
【l:map】<S-Right>   * E
【after get esc】
 after_if【<80>%i】
 before_exit【<80>%i】
 after_exit【<80>%i】
is_special_key = 0
 before start_loop【<80>%i】
 after start_loop【<80>%i】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>%i】
 type(c)=【0】
 before 【<80>%i<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>%i】
 mode:【v to v】
 start error 【<80>%i】
 error2 【<80>%i】
 after error 【<80>%i】
 brefore retry : s:char=【<80>%i】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>#4】
 before_getchar【<80>#4】
【l:map】<S-Left>    * gE
【after get esc】
 after_if【<80>#4】
 before_exit【<80>#4】
 after_exit【<80>#4】
is_special_key = 0
 before start_loop【<80>#4】
 after start_loop【<80>#4】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>#4】
 type(c)=【0】
 before 【<80>#4<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>#4】
 mode:【v to v】
 start error 【<80>#4】
 error2 【<80>#4】
 after error 【<80>#4】
 brefore retry : s:char=【<80>#4】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>#4】
 before_getchar【<80>#4】
【l:map】<S-Left>    * gE
【after get esc】
 after_if【<80>#4】
 before_exit【<80>#4】
 after_exit【<80>#4】
is_special_key = 0
 before start_loop【<80>#4】
 after start_loop【<80>#4】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>#4】
 type(c)=【0】
 before 【<80>#4<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>#4】
 mode:【v to v】
 start error 【<80>#4】
 error2 【<80>#4】
 after error 【<80>#4】
 brefore retry : s:char=【<80>#4】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80><fd>^D】
 before_getchar【<80><fd>^D】
【l:map】<S-Up>      * 0<C-U>
【after get esc】
 after_if【<80><fd>^D】
 before_exit【<80><fd>^D】
 after_exit【<80><fd>^D】
is_special_key = 0
 before start_loop【<80><fd>^D】
 after start_loop【<80><fd>^D】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80><fd>^D】
 type(c)=【0】
 before 【<80><fd>^D<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80><fd>^D】
 mode:【v to v】
 start error 【<80><fd>^D】
 error2 【<80><fd>^D】
 after error 【<80><fd>^D】
 brefore retry : s:char=【<80><fd>^D】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80><fd>^D】
 before_getchar【<80><fd>^D】
【l:map】<S-Up>      * 0<C-U>
【after get esc】
 after_if【<80><fd>^D】
 before_exit【<80><fd>^D】
 after_exit【<80><fd>^D】
is_special_key = 0
 before start_loop【<80><fd>^D】
 after start_loop【<80><fd>^D】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80><fd>^D】
 type(c)=【0】
 before 【<80><fd>^D<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
invalid input: from mode v to 
now mode: v
after invalid input: from mode v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80><fd>^D】
 mode:【v to v】
 start error 【<80><fd>^D】
 error2 【<80><fd>^D】
 can't be replayed in 1cursors 【<80><fd>^D】
 after error 【<80><fd>^D】
 brefore retry : s:char=【<80><fd>^D】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80><fd>^E】
 before_getchar【<80><fd>^E】
【l:map】<S-Down>    * $<C-D>
【after get esc】
 after_if【<80><fd>^E】
 before_exit【<80><fd>^E】
 after_exit【<80><fd>^E】
is_special_key = 0
 before start_loop【<80><fd>^E】
 after start_loop【<80><fd>^E】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80><fd>^E】
 type(c)=【0】
 before 【<80><fd>^E<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80><fd>^E】
 mode:【v to v】
 start error 【<80><fd>^E】
 error2 【<80><fd>^E】
 after error 【<80><fd>^E】
 brefore retry : s:char=【<80><fd>^E】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80><fd>^E】
 before_getchar【<80><fd>^E】
【l:map】<S-Down>    * $<C-D>
【after get esc】
 after_if【<80><fd>^E】
 before_exit【<80><fd>^E】
 after_exit【<80><fd>^E】
is_special_key = 0
 before start_loop【<80><fd>^E】
 after start_loop【<80><fd>^E】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80><fd>^E】
 type(c)=【0】
 before 【<80><fd>^E<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80><fd>^E】
 mode:【v to v】
 start error 【<80><fd>^E】
 error2 【<80><fd>^E】
 after error 【<80><fd>^E】
 brefore retry : s:char=【<80><fd>^E】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80><fd>^E】
 before_getchar【<80><fd>^E】
【l:map】<S-Down>    * $<C-D>
【after get esc】
 after_if【<80><fd>^E】
 before_exit【<80><fd>^E】
 after_exit【<80><fd>^E】
is_special_key = 0
 before start_loop【<80><fd>^E】
 after start_loop【<80><fd>^E】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80><fd>^E】
 type(c)=【0】
 before 【<80><fd>^E<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80><fd>^E】
 mode:【v to v】
 start error 【<80><fd>^E】
 error2 【<80><fd>^E】
 after error 【<80><fd>^E】
 brefore retry : s:char=【<80><fd>^E】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80><fd>^E】
 before_getchar【<80><fd>^E】
【l:map】<S-Down>    * $<C-D>
【after get esc】
 after_if【<80><fd>^E】
 before_exit【<80><fd>^E】
 after_exit【<80><fd>^E】
is_special_key = 0
 before start_loop【<80><fd>^E】
 after start_loop【<80><fd>^E】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80><fd>^E】
 type(c)=【0】
 before 【<80><fd>^E<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80><fd>^E】
 mode:【v to v】
 start error 【<80><fd>^E】
 error2 【<80><fd>^E】
 after error 【<80><fd>^E】
 brefore retry : s:char=【<80><fd>^E】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80><fd>^E】
 before_getchar【<80><fd>^E】
【l:map】<S-Down>    * $<C-D>
【after get esc】
 after_if【<80><fd>^E】
 before_exit【<80><fd>^E】
 after_exit【<80><fd>^E】
is_special_key = 0
 before start_loop【<80><fd>^E】
 after start_loop【<80><fd>^E】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80><fd>^E】
 type(c)=【0】
 before 【<80><fd>^E<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
invalid input: from mode v to 
now mode: v
after invalid input: from mode v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80><fd>^E】
 mode:【v to v】
 start error 【<80><fd>^E】
 error2 【<80><fd>^E】
 can't be replayed in 1cursors 【<80><fd>^E】
 after error 【<80><fd>^E】
 brefore retry : s:char=【<80><fd>^E】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80><fd>^E】
 before_getchar【<80><fd>^E】
【l:map】<S-Down>    * $<C-D>
【after get esc】
 after_if【<80><fd>^E】
 before_exit【<80><fd>^E】
 after_exit【<80><fd>^E】
is_special_key = 0
 before start_loop【<80><fd>^E】
 after start_loop【<80><fd>^E】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80><fd>^E】
 type(c)=【0】
 before 【<80><fd>^E<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
invalid input: from mode v to 
now mode: v
after invalid input: from mode v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80><fd>^E】
 mode:【v to v】
 start error 【<80><fd>^E】
 error2 【<80><fd>^E】
 can't be replayed in 1cursors 【<80><fd>^E】
 after error 【<80><fd>^E】
 brefore retry : s:char=【<80><fd>^E】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80><fd>^E】
 before_getchar【<80><fd>^E】
【l:map】<S-Down>    * $<C-D>
【after get esc】
 after_if【<80><fd>^E】
 before_exit【<80><fd>^E】
 after_exit【<80><fd>^E】
is_special_key = 0
 before start_loop【<80><fd>^E】
 after start_loop【<80><fd>^E】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80><fd>^E】
 type(c)=【0】
 before 【<80><fd>^E<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
invalid input: from mode v to 
now mode: v
after invalid input: from mode v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80><fd>^E】
 mode:【v to v】
 start error 【<80><fd>^E】
 error2 【<80><fd>^E】
 can't be replayed in 1cursors 【<80><fd>^E】
 after error 【<80><fd>^E】
 brefore retry : s:char=【<80><fd>^E】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80><fd>^E】
 before_getchar【<80><fd>^E】
【l:map】<S-Down>    * $<C-D>
【after get esc】
 after_if【<80><fd>^E】
 before_exit【<80><fd>^E】
 after_exit【<80><fd>^E】
is_special_key = 0
 before start_loop【<80><fd>^E】
 after start_loop【<80><fd>^E】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80><fd>^E】
 type(c)=【0】
 before 【<80><fd>^E<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
invalid input: from mode v to 
now mode: v
after invalid input: from mode v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80><fd>^E】
 mode:【v to v】
 start error 【<80><fd>^E】
 error2 【<80><fd>^E】
 can't be replayed in 1cursors 【<80><fd>^E】
 after error 【<80><fd>^E】
 brefore retry : s:char=【<80><fd>^E】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80><fd>^E】
 before_getchar【<80><fd>^E】
【l:map】<S-Down>    * $<C-D>
【after get esc】
 after_if【<80><fd>^E】
 before_exit【<80><fd>^E】
 after_exit【<80><fd>^E】
is_special_key = 0
 before start_loop【<80><fd>^E】
 after start_loop【<80><fd>^E】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80><fd>^E】
 type(c)=【0】
 before 【<80><fd>^E<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
invalid input: from mode v to 
now mode: v
after invalid input: from mode v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80><fd>^E】
 mode:【v to v】
 start error 【<80><fd>^E】
 error2 【<80><fd>^E】
 can't be replayed in 1cursors 【<80><fd>^E】
 after error 【<80><fd>^E】
 brefore retry : s:char=【<80><fd>^E】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80><fd>^E】
 before_getchar【<80><fd>^E】
【l:map】<S-Down>    * $<C-D>
【after get esc】
 after_if【<80><fd>^E】
 before_exit【<80><fd>^E】
 after_exit【<80><fd>^E】
is_special_key = 0
 before start_loop【<80><fd>^E】
 after start_loop【<80><fd>^E】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80><fd>^E】
 type(c)=【0】
 before 【<80><fd>^E<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
invalid input: from mode v to 
now mode: v
after invalid input: from mode v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80><fd>^E】
 mode:【v to v】
 start error 【<80><fd>^E】
 error2 【<80><fd>^E】
 can't be replayed in 1cursors 【<80><fd>^E】
 after error 【<80><fd>^E】
 brefore retry : s:char=【<80><fd>^E】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>%i】
 before_getchar【<80>%i】
【l:map】<S-Right>   * E
【after get esc】
 after_if【<80>%i】
 before_exit【<80>%i】
 after_exit【<80>%i】
is_special_key = 0
 before start_loop【<80>%i】
 after start_loop【<80>%i】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>%i】
 type(c)=【0】
 before 【<80>%i<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>%i】
 mode:【v to v】
 start error 【<80>%i】
 error2 【<80>%i】
 after error 【<80>%i】
 brefore retry : s:char=【<80>%i】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>#4】
 before_getchar【<80>#4】
【l:map】<S-Left>    * gE
【after get esc】
 after_if【<80>#4】
 before_exit【<80>#4】
 after_exit【<80>#4】
is_special_key = 0
 before start_loop【<80>#4】
 after start_loop【<80>#4】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>#4】
 type(c)=【0】
 before 【<80>#4<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>#4】
 mode:【v to v】
 start error 【<80>#4】
 error2 【<80>#4】
 after error 【<80>#4】
 brefore retry : s:char=【<80>#4】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80><fd>^E】
 before_getchar【<80><fd>^E】
【l:map】<S-Down>    * $<C-D>
【after get esc】
 after_if【<80><fd>^E】
 before_exit【<80><fd>^E】
 after_exit【<80><fd>^E】
is_special_key = 0
 before start_loop【<80><fd>^E】
 after start_loop【<80><fd>^E】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80><fd>^E】
 type(c)=【0】
 before 【<80><fd>^E<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80><fd>^E】
 mode:【v to v】
 start error 【<80><fd>^E】
 error2 【<80><fd>^E】
 after error 【<80><fd>^E】
 brefore retry : s:char=【<80><fd>^E】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80><fd>^E】
 before_getchar【<80><fd>^E】
【l:map】<S-Down>    * $<C-D>
【after get esc】
 after_if【<80><fd>^E】
 before_exit【<80><fd>^E】
 after_exit【<80><fd>^E】
is_special_key = 0
 before start_loop【<80><fd>^E】
 after start_loop【<80><fd>^E】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80><fd>^E】
 type(c)=【0】
 before 【<80><fd>^E<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
invalid input: from mode v to 
now mode: v
after invalid input: from mode v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80><fd>^E】
 mode:【v to v】
 start error 【<80><fd>^E】
 error2 【<80><fd>^E】
 can't be replayed in 1cursors 【<80><fd>^E】
 after error 【<80><fd>^E】
 brefore retry : s:char=【<80><fd>^E】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80><fd>^E】
 before_getchar【<80><fd>^E】
【l:map】<S-Down>    * $<C-D>
【after get esc】
 after_if【<80><fd>^E】
 before_exit【<80><fd>^E】
 after_exit【<80><fd>^E】
is_special_key = 0
 before start_loop【<80><fd>^E】
 after start_loop【<80><fd>^E】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80><fd>^E】
 type(c)=【0】
 before 【<80><fd>^E<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
invalid input: from mode v to 
now mode: v
after invalid input: from mode v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80><fd>^E】
 mode:【v to v】
 start error 【<80><fd>^E】
 error2 【<80><fd>^E】
 can't be replayed in 1cursors 【<80><fd>^E】
 after error 【<80><fd>^E】
 brefore retry : s:char=【<80><fd>^E】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80><fd>^E】
 before_getchar【<80><fd>^E】
【l:map】<S-Down>    * $<C-D>
【after get esc】
 after_if【<80><fd>^E】
 before_exit【<80><fd>^E】
 after_exit【<80><fd>^E】
is_special_key = 0
 before start_loop【<80><fd>^E】
 after start_loop【<80><fd>^E】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80><fd>^E】
 type(c)=【0】
 before 【<80><fd>^E<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
invalid input: from mode v to 
now mode: v
after invalid input: from mode v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80><fd>^E】
 mode:【v to v】
 start error 【<80><fd>^E】
 error2 【<80><fd>^E】
 can't be replayed in 1cursors 【<80><fd>^E】
 after error 【<80><fd>^E】
 brefore retry : s:char=【<80><fd>^E】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80><fd>^E】
 before_getchar【<80><fd>^E】
【l:map】<S-Down>    * $<C-D>
【after get esc】
 after_if【<80><fd>^E】
 before_exit【<80><fd>^E】
 after_exit【<80><fd>^E】
is_special_key = 0
 before start_loop【<80><fd>^E】
 after start_loop【<80><fd>^E】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80><fd>^E】
 type(c)=【0】
 before 【<80><fd>^E<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
invalid input: from mode v to 
now mode: v
after invalid input: from mode v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80><fd>^E】
 mode:【v to v】
 start error 【<80><fd>^E】
 error2 【<80><fd>^E】
 can't be replayed in 1cursors 【<80><fd>^E】
 after error 【<80><fd>^E】
 brefore retry : s:char=【<80><fd>^E】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80><fc>^D<80>%i】
 before_getchar【<80><fc>^D<80>%i】
【l:map】<C-S-Right> * <Esc>:tabnext<CR>v
【after get esc】
 after_if【<80><fc>^D<80>%i】
 before_exit【<80><fc>^D<80>%i】
 after_exit【<80><fc>^D<80>%i】
is_special_key = 0
 before start_loop【<80><fc>^D<80>%i】
 after start_loop【<80><fc>^D<80>%i】
 type(c)=【1】
 c 【<80><fc>^D】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80><fc>^D<80>%i】
 type(c)=【0】
 before 【<80><fc>^D<80>%i<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80><fc>^D<80>%i】
 mode:【v to v】
 start error 【<80><fc>^D<80>%i】
 error2 【<80><fc>^D<80>%i】
 after error 【<80><fc>^D<80>%i】
 brefore retry : s:char=【<80><fc>^D<80>%i】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80><fc>^D<80><fd>^E】
 before_getchar【<80><fc>^D<80><fd>^E】
【l:map】<C-S-Down>  * G$
【after get esc】
 after_if【<80><fc>^D<80><fd>^E】
 before_exit【<80><fc>^D<80><fd>^E】
 after_exit【<80><fc>^D<80><fd>^E】
is_special_key = 0
 before start_loop【<80><fc>^D<80><fd>^E】
 after start_loop【<80><fc>^D<80><fd>^E】
 type(c)=【1】
 c 【<80><fc>^D】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80><fc>^D<80><fd>^E】
 type(c)=【0】
 before 【<80><fc>^D<80><fd>^E<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80><fc>^D<80><fd>^E】
 mode:【v to v】
 start error 【<80><fc>^D<80><fd>^E】
 error2 【<80><fc>^D<80><fd>^E】
 after error 【<80><fc>^D<80><fd>^E】
 brefore retry : s:char=【<80><fc>^D<80><fd>^E】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80><fc>^D<80><fd>^D】
 before_getchar【<80><fc>^D<80><fd>^D】
【l:map】<C-S-Up>    * gg
【after get esc】
 after_if【<80><fc>^D<80><fd>^D】
 before_exit【<80><fc>^D<80><fd>^D】
 after_exit【<80><fc>^D<80><fd>^D】
is_special_key = 0
 before start_loop【<80><fc>^D<80><fd>^D】
 after start_loop【<80><fc>^D<80><fd>^D】
 type(c)=【1】
 c 【<80><fc>^D】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80><fc>^D<80><fd>^D】
 type(c)=【0】
 before 【<80><fc>^D<80><fd>^D<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80><fc>^D<80><fd>^D】
 mode:【v to v】
 start error 【<80><fc>^D<80><fd>^D】
 error2 【<80><fc>^D<80><fd>^D】
 after error 【<80><fc>^D<80><fd>^D】
 brefore retry : s:char=【<80><fc>^D<80><fd>^D】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80><fc>^D<80><fd>^D】
 before_getchar【<80><fc>^D<80><fd>^D】
【l:map】<C-S-Up>    * gg
【after get esc】
 after_if【<80><fc>^D<80><fd>^D】
 before_exit【<80><fc>^D<80><fd>^D】
 after_exit【<80><fc>^D<80><fd>^D】
is_special_key = 0
 before start_loop【<80><fc>^D<80><fd>^D】
 after start_loop【<80><fc>^D<80><fd>^D】
 type(c)=【1】
 c 【<80><fc>^D】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80><fc>^D<80><fd>^D】
 type(c)=【0】
 before 【<80><fc>^D<80><fd>^D<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80><fc>^D<80><fd>^D】
 mode:【v to v】
 start error 【<80><fc>^D<80><fd>^D】
 error2 【<80><fc>^D<80><fd>^D】
 after error 【<80><fc>^D<80><fd>^D】
 brefore retry : s:char=【<80><fc>^D<80><fd>^D】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80><fc>^D<80><fd>^E】
 before_getchar【<80><fc>^D<80><fd>^E】
【l:map】<C-S-Down>  * G$
【after get esc】
 after_if【<80><fc>^D<80><fd>^E】
 before_exit【<80><fc>^D<80><fd>^E】
 after_exit【<80><fc>^D<80><fd>^E】
is_special_key = 0
 before start_loop【<80><fc>^D<80><fd>^E】
 after start_loop【<80><fc>^D<80><fd>^E】
 type(c)=【1】
 c 【<80><fc>^D】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80><fc>^D<80><fd>^E】
 type(c)=【0】
 before 【<80><fc>^D<80><fd>^E<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80><fc>^D<80><fd>^E】
 mode:【v to v】
 start error 【<80><fc>^D<80><fd>^E】
 error2 【<80><fc>^D<80><fd>^E】
 after error 【<80><fc>^D<80><fd>^E】
 brefore retry : s:char=【<80><fc>^D<80><fd>^E】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>ku】
 before_getchar【<80>ku】
【after get esc】
 after_if【<80>ku】
 before_exit【<80>ku】
 after_exit【<80>ku】
is_special_key = 0
 before start_loop【<80>ku】
 after start_loop【<80>ku】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>ku】
 type(c)=【0】
 before 【<80>ku<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>ku】
 mode:【v to v】
 start error 【<80>ku】
 error2 【<80>ku】
 after error 【<80>ku】
 brefore retry : s:char=【<80>ku】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>ku】
 before_getchar【<80>ku】
【after get esc】
 after_if【<80>ku】
 before_exit【<80>ku】
 after_exit【<80>ku】
is_special_key = 0
 before start_loop【<80>ku】
 after start_loop【<80>ku】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>ku】
 type(c)=【0】
 before 【<80>ku<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>ku】
 mode:【v to v】
 start error 【<80>ku】
 error2 【<80>ku】
 after error 【<80>ku】
 brefore retry : s:char=【<80>ku】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>ku】
 before_getchar【<80>ku】
【after get esc】
 after_if【<80>ku】
 before_exit【<80>ku】
 after_exit【<80>ku】
is_special_key = 0
 before start_loop【<80>ku】
 after start_loop【<80>ku】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>ku】
 type(c)=【0】
 before 【<80>ku<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>ku】
 mode:【v to v】
 start error 【<80>ku】
 error2 【<80>ku】
 after error 【<80>ku】
 brefore retry : s:char=【<80>ku】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>ku】
 before_getchar【<80>ku】
【after get esc】
 after_if【<80>ku】
 before_exit【<80>ku】
 after_exit【<80>ku】
is_special_key = 0
 before start_loop【<80>ku】
 after start_loop【<80>ku】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>ku】
 type(c)=【0】
 before 【<80>ku<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>ku】
 mode:【v to v】
 start error 【<80>ku】
 error2 【<80>ku】
 after error 【<80>ku】
 brefore retry : s:char=【<80>ku】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80><fd>^D】
 before_getchar【<80><fd>^D】
【l:map】<S-Up>      * 0<C-U>
【after get esc】
 after_if【<80><fd>^D】
 before_exit【<80><fd>^D】
 after_exit【<80><fd>^D】
is_special_key = 0
 before start_loop【<80><fd>^D】
 after start_loop【<80><fd>^D】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80><fd>^D】
 type(c)=【0】
 before 【<80><fd>^D<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80><fd>^D】
 mode:【v to v】
 start error 【<80><fd>^D】
 error2 【<80><fd>^D】
 after error 【<80><fd>^D】
 brefore retry : s:char=【<80><fd>^D】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80><fd>^E】
 before_getchar【<80><fd>^E】
【l:map】<S-Down>    * $<C-D>
【after get esc】
 after_if【<80><fd>^E】
 before_exit【<80><fd>^E】
 after_exit【<80><fd>^E】
is_special_key = 0
 before start_loop【<80><fd>^E】
 after start_loop【<80><fd>^E】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80><fd>^E】
 type(c)=【0】
 before 【<80><fd>^E<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80><fd>^E】
 mode:【v to v】
 start error 【<80><fd>^E】
 error2 【<80><fd>^E】
 after error 【<80><fd>^E】
 brefore retry : s:char=【<80><fd>^E】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80><fd>^E】
 before_getchar【<80><fd>^E】
【l:map】<S-Down>    * $<C-D>
【after get esc】
 after_if【<80><fd>^E】
 before_exit【<80><fd>^E】
 after_exit【<80><fd>^E】
is_special_key = 0
 before start_loop【<80><fd>^E】
 after start_loop【<80><fd>^E】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80><fd>^E】
 type(c)=【0】
 before 【<80><fd>^E<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80><fd>^E】
 mode:【v to v】
 start error 【<80><fd>^E】
 error2 【<80><fd>^E】
 after error 【<80><fd>^E】
 brefore retry : s:char=【<80><fd>^E】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80><fd>^E】
 before_getchar【<80><fd>^E】
【l:map】<S-Down>    * $<C-D>
【after get esc】
 after_if【<80><fd>^E】
 before_exit【<80><fd>^E】
 after_exit【<80><fd>^E】
is_special_key = 0
 before start_loop【<80><fd>^E】
 after start_loop【<80><fd>^E】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80><fd>^E】
 type(c)=【0】
 before 【<80><fd>^E<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
invalid input: from mode v to 
now mode: v
after invalid input: from mode v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80><fd>^E】
 mode:【v to v】
 start error 【<80><fd>^E】
 error2 【<80><fd>^E】
 can't be replayed in 1cursors 【<80><fd>^E】
 after error 【<80><fd>^E】
 brefore retry : s:char=【<80><fd>^E】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80><fd>^E】
 before_getchar【<80><fd>^E】
【l:map】<S-Down>    * $<C-D>
【after get esc】
 after_if【<80><fd>^E】
 before_exit【<80><fd>^E】
 after_exit【<80><fd>^E】
is_special_key = 0
 before start_loop【<80><fd>^E】
 after start_loop【<80><fd>^E】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80><fd>^E】
 type(c)=【0】
 before 【<80><fd>^E<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
invalid input: from mode v to 
now mode: v
after invalid input: from mode v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80><fd>^E】
 mode:【v to v】
 start error 【<80><fd>^E】
 error2 【<80><fd>^E】
 can't be replayed in 1cursors 【<80><fd>^E】
 after error 【<80><fd>^E】
 brefore retry : s:char=【<80><fd>^E】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80><fd>^E】
 before_getchar【<80><fd>^E】
【l:map】<S-Down>    * $<C-D>
【after get esc】
 after_if【<80><fd>^E】
 before_exit【<80><fd>^E】
 after_exit【<80><fd>^E】
is_special_key = 0
 before start_loop【<80><fd>^E】
 after start_loop【<80><fd>^E】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80><fd>^E】
 type(c)=【0】
 before 【<80><fd>^E<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
invalid input: from mode v to 
now mode: v
after invalid input: from mode v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80><fd>^E】
 mode:【v to v】
 start error 【<80><fd>^E】
 error2 【<80><fd>^E】
 can't be replayed in 1cursors 【<80><fd>^E】
 after error 【<80><fd>^E】
 brefore retry : s:char=【<80><fd>^E】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80><fd>^E】
 before_getchar【<80><fd>^E】
【l:map】<S-Down>    * $<C-D>
【after get esc】
 after_if【<80><fd>^E】
 before_exit【<80><fd>^E】
 after_exit【<80><fd>^E】
is_special_key = 0
 before start_loop【<80><fd>^E】
 after start_loop【<80><fd>^E】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80><fd>^E】
 type(c)=【0】
 before 【<80><fd>^E<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
invalid input: from mode v to 
now mode: v
after invalid input: from mode v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80><fd>^E】
 mode:【v to v】
 start error 【<80><fd>^E】
 error2 【<80><fd>^E】
 can't be replayed in 1cursors 【<80><fd>^E】
 after error 【<80><fd>^E】
 brefore retry : s:char=【<80><fd>^E】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80><fd>^E】
 before_getchar【<80><fd>^E】
【l:map】<S-Down>    * $<C-D>
【after get esc】
 after_if【<80><fd>^E】
 before_exit【<80><fd>^E】
 after_exit【<80><fd>^E】
is_special_key = 0
 before start_loop【<80><fd>^E】
 after start_loop【<80><fd>^E】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80><fd>^E】
 type(c)=【0】
 before 【<80><fd>^E<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
invalid input: from mode v to 
now mode: v
after invalid input: from mode v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80><fd>^E】
 mode:【v to v】
 start error 【<80><fd>^E】
 error2 【<80><fd>^E】
 can't be replayed in 1cursors 【<80><fd>^E】
 after error 【<80><fd>^E】
 brefore retry : s:char=【<80><fd>^E】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80><fd>^E】
 before_getchar【<80><fd>^E】
【l:map】<S-Down>    * $<C-D>
【after get esc】
 after_if【<80><fd>^E】
 before_exit【<80><fd>^E】
 after_exit【<80><fd>^E】
is_special_key = 0
 before start_loop【<80><fd>^E】
 after start_loop【<80><fd>^E】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80><fd>^E】
 type(c)=【0】
 before 【<80><fd>^E<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
invalid input: from mode v to 
now mode: v
after invalid input: from mode v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80><fd>^E】
 mode:【v to v】
 start error 【<80><fd>^E】
 error2 【<80><fd>^E】
 can't be replayed in 1cursors 【<80><fd>^E】
 after error 【<80><fd>^E】
 brefore retry : s:char=【<80><fd>^E】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【^[】
 before_getchar【^[】
【l:map】<Esc>[4~      <End>
【get esc】
【char_mapping】
【l:map】<Esc>[4~      <End>
【char_mapping】
【l:map】<Esc>[4~      <End>
【char_mapping】
【l:map】<Esc>[4~      <End>
【char_mapping】
【l:map】<Esc>[4~      <End>
【char_mapping】
【l:map】<Esc>[4~      <End>
【char_mapping】
【l:map】<Esc>[4~      <End>
【char_mapping】
【l:map】<Esc>[4~      <End>
【char_mapping】
【l:map】<Esc>[4~      <End>
【char_mapping】
【l:map】<Esc>[4~      <End>
【char_mapping】
【l:map】<Esc>[4~      <End>
【char_mapping】
【l:map】<Esc>[4~      <End>
【char_mapping】
【l:map】<Esc>[4~      <End>
【char_mapping】
【l:map】<Esc>[4~      <End>
【char_mapping】
【l:map】<Esc>[4~      <End>
【char_mapping】
【l:map】<Esc>[4~      <End>
【char_mapping】
【l:map】<Esc>[4~      <End>
【char_mapping】
【l:map】<Esc>[4~      <End>
【char_mapping】
【l:map】<Esc>[4~      <End>
【after get esc】
 after_if【^[】
 before_exit【^[】
 after_exit【^[】
is_special_key = 0
 before start_loop【^[】
 after start_loop【^[】
 type(c)=【1】
 c 【<80><fd>,】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【<80><fd>,】
before apply2 from v to 
before apply【^[】
 type(c)=【0】
 before 【^[<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【<80><fd>,】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to n
before mc-input3: from v to n
before mc-input4: from v to n
after mc-input: from v to n
 start 【^[】
 mode:【v to n】
 start error 【^[】
 error2 【^[】
 after error 【^[】
 brefore retry : s:char=【^[】
 s:retry_keys=【】
 s:saved_keys=【<80><fd>,】
 before_if【<80><fd>,】
 before_getchar【<80><fd>,】
【l:map】<LeftMouse> * :MarkClear<CR><LeftMouse>
【after get esc】
 after_if【<80><fd>,】
 before_exit【<80><fd>,】
 after_exit【<80><fd>,】
is_special_key = 0
 before start_loop【<80><fd>,】
 after start_loop【<80><fd>,】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from n to 
before apply【<80><fd>,】
 type(c)=【0】
 before 【<80><fd>,<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from n to 
before mc-detect: from n to 
after mc-detect: from n to 
before mc-input: from n to 
before mc-input2: from n to n
before mc-input3: from n to n
before mc-input4: from n to n
after mc-input: from n to n
 start 【<80><fd>,】
 mode:【n to n】
 start error 【<80><fd>,】
 error2 【<80><fd>,】
 after error 【<80><fd>,】
 brefore retry : s:char=【<80><fd>,】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【≈】
 before_getchar【≈】
【after get esc】
 after_if【≈】
 before_exit【≈】
 start 【】
 mode:【n to 】
 start error 【】
 error2 【】
 after error 【】
 brefore retry : s:char=【】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80><fd>^E】
 before_getchar【<80><fd>^E】
【l:map】<S-Down>    * $<C-D>
【after get esc】
 after_if【<80><fd>^E】
 before_exit【<80><fd>^E】
 after_exit【<80><fd>^E】
is_special_key = 0
 before start_loop【<80><fd>^E】
 after start_loop【<80><fd>^E】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80><fd>^E】
 type(c)=【0】
 before 【<80><fd>^E<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80><fd>^E】
 mode:【v to v】
 start error 【<80><fd>^E】
 error2 【<80><fd>^E】
 after error 【<80><fd>^E】
 brefore retry : s:char=【<80><fd>^E】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80><fd>^E】
 before_getchar【<80><fd>^E】
【l:map】<S-Down>    * $<C-D>
【after get esc】
 after_if【<80><fd>^E】
 before_exit【<80><fd>^E】
 after_exit【<80><fd>^E】
is_special_key = 0
 before start_loop【<80><fd>^E】
 after start_loop【<80><fd>^E】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80><fd>^E】
 type(c)=【0】
 before 【<80><fd>^E<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80><fd>^E】
 mode:【v to v】
 start error 【<80><fd>^E】
 error2 【<80><fd>^E】
 after error 【<80><fd>^E】
 brefore retry : s:char=【<80><fd>^E】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80><fd>^E】
 before_getchar【<80><fd>^E】
【l:map】<S-Down>    * $<C-D>
【after get esc】
 after_if【<80><fd>^E】
 before_exit【<80><fd>^E】
 after_exit【<80><fd>^E】
is_special_key = 0
 before start_loop【<80><fd>^E】
 after start_loop【<80><fd>^E】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80><fd>^E】
 type(c)=【0】
 before 【<80><fd>^E<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
invalid input: from mode v to 
now mode: v
after invalid input: from mode v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80><fd>^E】
 mode:【v to v】
 start error 【<80><fd>^E】
 error2 【<80><fd>^E】
 can't be replayed in 1cursors 【<80><fd>^E】
 after error 【<80><fd>^E】
 brefore retry : s:char=【<80><fd>^E】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80><fd>^E】
 before_getchar【<80><fd>^E】
【l:map】<S-Down>    * $<C-D>
【after get esc】
 after_if【<80><fd>^E】
 before_exit【<80><fd>^E】
 after_exit【<80><fd>^E】
is_special_key = 0
 before start_loop【<80><fd>^E】
 after start_loop【<80><fd>^E】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80><fd>^E】
 type(c)=【0】
 before 【<80><fd>^E<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
invalid input: from mode v to 
now mode: v
after invalid input: from mode v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80><fd>^E】
 mode:【v to v】
 start error 【<80><fd>^E】
 error2 【<80><fd>^E】
 can't be replayed in 1cursors 【<80><fd>^E】
 after error 【<80><fd>^E】
 brefore retry : s:char=【<80><fd>^E】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80><fd>^E】
 before_getchar【<80><fd>^E】
【l:map】<S-Down>    * $<C-D>
【after get esc】
 after_if【<80><fd>^E】
 before_exit【<80><fd>^E】
 after_exit【<80><fd>^E】
is_special_key = 0
 before start_loop【<80><fd>^E】
 after start_loop【<80><fd>^E】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80><fd>^E】
 type(c)=【0】
 before 【<80><fd>^E<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
invalid input: from mode v to 
now mode: v
after invalid input: from mode v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80><fd>^E】
 mode:【v to v】
 start error 【<80><fd>^E】
 error2 【<80><fd>^E】
 can't be replayed in 1cursors 【<80><fd>^E】
 after error 【<80><fd>^E】
 brefore retry : s:char=【<80><fd>^E】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80><fd>^E】
 before_getchar【<80><fd>^E】
【l:map】<S-Down>    * $<C-D>
【after get esc】
 after_if【<80><fd>^E】
 before_exit【<80><fd>^E】
 after_exit【<80><fd>^E】
is_special_key = 0
 before start_loop【<80><fd>^E】
 after start_loop【<80><fd>^E】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80><fd>^E】
 type(c)=【0】
 before 【<80><fd>^E<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
invalid input: from mode v to 
now mode: v
after invalid input: from mode v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80><fd>^E】
 mode:【v to v】
 start error 【<80><fd>^E】
 error2 【<80><fd>^E】
 can't be replayed in 1cursors 【<80><fd>^E】
 after error 【<80><fd>^E】
 brefore retry : s:char=【<80><fd>^E】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80><fd>^E】
 before_getchar【<80><fd>^E】
【l:map】<S-Down>    * $<C-D>
【after get esc】
 after_if【<80><fd>^E】
 before_exit【<80><fd>^E】
 after_exit【<80><fd>^E】
is_special_key = 0
 before start_loop【<80><fd>^E】
 after start_loop【<80><fd>^E】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80><fd>^E】
 type(c)=【0】
 before 【<80><fd>^E<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
invalid input: from mode v to 
now mode: v
after invalid input: from mode v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80><fd>^E】
 mode:【v to v】
 start error 【<80><fd>^E】
 error2 【<80><fd>^E】
 can't be replayed in 1cursors 【<80><fd>^E】
 after error 【<80><fd>^E】
 brefore retry : s:char=【<80><fd>^E】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80><fd>^E】
 before_getchar【<80><fd>^E】
【l:map】<S-Down>    * $<C-D>
【after get esc】
 after_if【<80><fd>^E】
 before_exit【<80><fd>^E】
 after_exit【<80><fd>^E】
is_special_key = 0
 before start_loop【<80><fd>^E】
 after start_loop【<80><fd>^E】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80><fd>^E】
 type(c)=【0】
 before 【<80><fd>^E<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
invalid input: from mode v to 
now mode: v
after invalid input: from mode v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80><fd>^E】
 mode:【v to v】
 start error 【<80><fd>^E】
 error2 【<80><fd>^E】
 can't be replayed in 1cursors 【<80><fd>^E】
 after error 【<80><fd>^E】
 brefore retry : s:char=【<80><fd>^E】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80><fd>^E】
 before_getchar【<80><fd>^E】
【l:map】<S-Down>    * $<C-D>
【after get esc】
 after_if【<80><fd>^E】
 before_exit【<80><fd>^E】
 after_exit【<80><fd>^E】
is_special_key = 0
 before start_loop【<80><fd>^E】
 after start_loop【<80><fd>^E】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80><fd>^E】
 type(c)=【0】
 before 【<80><fd>^E<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
invalid input: from mode v to 
now mode: v
after invalid input: from mode v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80><fd>^E】
 mode:【v to v】
 start error 【<80><fd>^E】
 error2 【<80><fd>^E】
 can't be replayed in 1cursors 【<80><fd>^E】
 after error 【<80><fd>^E】
 brefore retry : s:char=【<80><fd>^E】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80><fd>^E】
 before_getchar【<80><fd>^E】
【l:map】<S-Down>    * $<C-D>
【after get esc】
 after_if【<80><fd>^E】
 before_exit【<80><fd>^E】
 after_exit【<80><fd>^E】
is_special_key = 0
 before start_loop【<80><fd>^E】
 after start_loop【<80><fd>^E】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80><fd>^E】
 type(c)=【0】
 before 【<80><fd>^E<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
invalid input: from mode v to 
now mode: v
after invalid input: from mode v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80><fd>^E】
 mode:【v to v】
 start error 【<80><fd>^E】
 error2 【<80><fd>^E】
 can't be replayed in 1cursors 【<80><fd>^E】
 after error 【<80><fd>^E】
 brefore retry : s:char=【<80><fd>^E】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80><fd>^E】
 before_getchar【<80><fd>^E】
【l:map】<S-Down>    * $<C-D>
【after get esc】
 after_if【<80><fd>^E】
 before_exit【<80><fd>^E】
 after_exit【<80><fd>^E】
is_special_key = 0
 before start_loop【<80><fd>^E】
 after start_loop【<80><fd>^E】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80><fd>^E】
 type(c)=【0】
 before 【<80><fd>^E<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
invalid input: from mode v to 
now mode: v
after invalid input: from mode v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80><fd>^E】
 mode:【v to v】
 start error 【<80><fd>^E】
 error2 【<80><fd>^E】
 can't be replayed in 1cursors 【<80><fd>^E】
 after error 【<80><fd>^E】
 brefore retry : s:char=【<80><fd>^E】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kr】
 before_getchar【<80>kr】
【after get esc】
 after_if【<80>kr】
 before_exit【<80>kr】
 after_exit【<80>kr】
is_special_key = 0
 before start_loop【<80>kr】
 after start_loop【<80>kr】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kr】
 type(c)=【0】
 before 【<80>kr<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kr】
 mode:【v to v】
 start error 【<80>kr】
 error2 【<80>kr】
 after error 【<80>kr】
 brefore retry : s:char=【<80>kr】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kr】
 before_getchar【<80>kr】
【after get esc】
 after_if【<80>kr】
 before_exit【<80>kr】
 after_exit【<80>kr】
is_special_key = 0
 before start_loop【<80>kr】
 after start_loop【<80>kr】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kr】
 type(c)=【0】
 before 【<80>kr<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kr】
 mode:【v to v】
 start error 【<80>kr】
 error2 【<80>kr】
 after error 【<80>kr】
 brefore retry : s:char=【<80>kr】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>%i】
 before_getchar【<80>%i】
【l:map】<S-Right>   * E
【after get esc】
 after_if【<80>%i】
 before_exit【<80>%i】
 after_exit【<80>%i】
is_special_key = 0
 before start_loop【<80>%i】
 after start_loop【<80>%i】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>%i】
 type(c)=【0】
 before 【<80>%i<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>%i】
 mode:【v to v】
 start error 【<80>%i】
 error2 【<80>%i】
 after error 【<80>%i】
 brefore retry : s:char=【<80>%i】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>%i】
 before_getchar【<80>%i】
【l:map】<S-Right>   * E
【after get esc】
 after_if【<80>%i】
 before_exit【<80>%i】
 after_exit【<80>%i】
is_special_key = 0
 before start_loop【<80>%i】
 after start_loop【<80>%i】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>%i】
 type(c)=【0】
 before 【<80>%i<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>%i】
 mode:【v to v】
 start error 【<80>%i】
 error2 【<80>%i】
 after error 【<80>%i】
 brefore retry : s:char=【<80>%i】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>%i】
 before_getchar【<80>%i】
【l:map】<S-Right>   * E
【after get esc】
 after_if【<80>%i】
 before_exit【<80>%i】
 after_exit【<80>%i】
is_special_key = 0
 before start_loop【<80>%i】
 after start_loop【<80>%i】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>%i】
 type(c)=【0】
 before 【<80>%i<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>%i】
 mode:【v to v】
 start error 【<80>%i】
 error2 【<80>%i】
 after error 【<80>%i】
 brefore retry : s:char=【<80>%i】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>%i】
 before_getchar【<80>%i】
【l:map】<S-Right>   * E
【after get esc】
 after_if【<80>%i】
 before_exit【<80>%i】
 after_exit【<80>%i】
is_special_key = 0
 before start_loop【<80>%i】
 after start_loop【<80>%i】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>%i】
 type(c)=【0】
 before 【<80>%i<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>%i】
 mode:【v to v】
 start error 【<80>%i】
 error2 【<80>%i】
 after error 【<80>%i】
 brefore retry : s:char=【<80>%i】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>%i】
 before_getchar【<80>%i】
【l:map】<S-Right>   * E
【after get esc】
 after_if【<80>%i】
 before_exit【<80>%i】
 after_exit【<80>%i】
is_special_key = 0
 before start_loop【<80>%i】
 after start_loop【<80>%i】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>%i】
 type(c)=【0】
 before 【<80>%i<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>%i】
 mode:【v to v】
 start error 【<80>%i】
 error2 【<80>%i】
 after error 【<80>%i】
 brefore retry : s:char=【<80>%i】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>%i】
 before_getchar【<80>%i】
【l:map】<S-Right>   * E
【after get esc】
 after_if【<80>%i】
 before_exit【<80>%i】
 after_exit【<80>%i】
is_special_key = 0
 before start_loop【<80>%i】
 after start_loop【<80>%i】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>%i】
 type(c)=【0】
 before 【<80>%i<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>%i】
 mode:【v to v】
 start error 【<80>%i】
 error2 【<80>%i】
 after error 【<80>%i】
 brefore retry : s:char=【<80>%i】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80><fd>^E】
 before_getchar【<80><fd>^E】
【l:map】<S-Down>    * $<C-D>
【after get esc】
 after_if【<80><fd>^E】
 before_exit【<80><fd>^E】
 after_exit【<80><fd>^E】
is_special_key = 0
 before start_loop【<80><fd>^E】
 after start_loop【<80><fd>^E】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80><fd>^E】
 type(c)=【0】
 before 【<80><fd>^E<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
invalid input: from mode v to 
now mode: v
after invalid input: from mode v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80><fd>^E】
 mode:【v to v】
 start error 【<80><fd>^E】
 error2 【<80><fd>^E】
 can't be replayed in 1cursors 【<80><fd>^E】
 after error 【<80><fd>^E】
 brefore retry : s:char=【<80><fd>^E】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80><fd>^E】
 before_getchar【<80><fd>^E】
【l:map】<S-Down>    * $<C-D>
【after get esc】
 after_if【<80><fd>^E】
 before_exit【<80><fd>^E】
 after_exit【<80><fd>^E】
is_special_key = 0
 before start_loop【<80><fd>^E】
 after start_loop【<80><fd>^E】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80><fd>^E】
 type(c)=【0】
 before 【<80><fd>^E<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
invalid input: from mode v to 
now mode: v
after invalid input: from mode v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80><fd>^E】
 mode:【v to v】
 start error 【<80><fd>^E】
 error2 【<80><fd>^E】
 can't be replayed in 1cursors 【<80><fd>^E】
 after error 【<80><fd>^E】
 brefore retry : s:char=【<80><fd>^E】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80><fd>^E】
 before_getchar【<80><fd>^E】
【l:map】<S-Down>    * $<C-D>
【after get esc】
 after_if【<80><fd>^E】
 before_exit【<80><fd>^E】
 after_exit【<80><fd>^E】
is_special_key = 0
 before start_loop【<80><fd>^E】
 after start_loop【<80><fd>^E】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80><fd>^E】
 type(c)=【0】
 before 【<80><fd>^E<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
invalid input: from mode v to 
now mode: v
after invalid input: from mode v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80><fd>^E】
 mode:【v to v】
 start error 【<80><fd>^E】
 error2 【<80><fd>^E】
 can't be replayed in 1cursors 【<80><fd>^E】
 after error 【<80><fd>^E】
 brefore retry : s:char=【<80><fd>^E】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80><fd>^E】
 before_getchar【<80><fd>^E】
【l:map】<S-Down>    * $<C-D>
【after get esc】
 after_if【<80><fd>^E】
 before_exit【<80><fd>^E】
 after_exit【<80><fd>^E】
is_special_key = 0
 before start_loop【<80><fd>^E】
 after start_loop【<80><fd>^E】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80><fd>^E】
 type(c)=【0】
 before 【<80><fd>^E<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
invalid input: from mode v to 
now mode: v
after invalid input: from mode v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80><fd>^E】
 mode:【v to v】
 start error 【<80><fd>^E】
 error2 【<80><fd>^E】
 can't be replayed in 1cursors 【<80><fd>^E】
 after error 【<80><fd>^E】
 brefore retry : s:char=【<80><fd>^E】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80><fd>^E】
 before_getchar【<80><fd>^E】
【l:map】<S-Down>    * $<C-D>
【after get esc】
 after_if【<80><fd>^E】
 before_exit【<80><fd>^E】
 after_exit【<80><fd>^E】
is_special_key = 0
 before start_loop【<80><fd>^E】
 after start_loop【<80><fd>^E】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80><fd>^E】
 type(c)=【0】
 before 【<80><fd>^E<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
invalid input: from mode v to 
now mode: v
after invalid input: from mode v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80><fd>^E】
 mode:【v to v】
 start error 【<80><fd>^E】
 error2 【<80><fd>^E】
 can't be replayed in 1cursors 【<80><fd>^E】
 after error 【<80><fd>^E】
 brefore retry : s:char=【<80><fd>^E】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>%i】
 before_getchar【<80>%i】
【l:map】<S-Right>   * E
【after get esc】
 after_if【<80>%i】
 before_exit【<80>%i】
 after_exit【<80>%i】
is_special_key = 0
 before start_loop【<80>%i】
 after start_loop【<80>%i】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>%i】
 type(c)=【0】
 before 【<80>%i<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>%i】
 mode:【v to v】
 start error 【<80>%i】
 error2 【<80>%i】
 after error 【<80>%i】
 brefore retry : s:char=【<80>%i】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>%i】
 before_getchar【<80>%i】
【l:map】<S-Right>   * E
【after get esc】
 after_if【<80>%i】
 before_exit【<80>%i】
 after_exit【<80>%i】
is_special_key = 0
 before start_loop【<80>%i】
 after start_loop【<80>%i】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>%i】
 type(c)=【0】
 before 【<80>%i<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>%i】
 mode:【v to v】
 start error 【<80>%i】
 error2 【<80>%i】
 after error 【<80>%i】
 brefore retry : s:char=【<80>%i】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>%i】
 before_getchar【<80>%i】
【l:map】<S-Right>   * E
【after get esc】
 after_if【<80>%i】
 before_exit【<80>%i】
 after_exit【<80>%i】
is_special_key = 0
 before start_loop【<80>%i】
 after start_loop【<80>%i】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>%i】
 type(c)=【0】
 before 【<80>%i<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>%i】
 mode:【v to v】
 start error 【<80>%i】
 error2 【<80>%i】
 after error 【<80>%i】
 brefore retry : s:char=【<80>%i】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>%i】
 before_getchar【<80>%i】
【l:map】<S-Right>   * E
【after get esc】
 after_if【<80>%i】
 before_exit【<80>%i】
 after_exit【<80>%i】
is_special_key = 0
 before start_loop【<80>%i】
 after start_loop【<80>%i】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>%i】
 type(c)=【0】
 before 【<80>%i<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
invalid input: from mode v to 
now mode: v
after invalid input: from mode v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>%i】
 mode:【v to v】
 start error 【<80>%i】
 error2 【<80>%i】
 can't be replayed in 1cursors 【<80>%i】
 after error 【<80>%i】
 brefore retry : s:char=【<80>%i】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>%i】
 before_getchar【<80>%i】
【l:map】<S-Right>   * E
【after get esc】
 after_if【<80>%i】
 before_exit【<80>%i】
 after_exit【<80>%i】
is_special_key = 0
 before start_loop【<80>%i】
 after start_loop【<80>%i】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>%i】
 type(c)=【0】
 before 【<80>%i<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
invalid input: from mode v to 
now mode: v
after invalid input: from mode v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>%i】
 mode:【v to v】
 start error 【<80>%i】
 error2 【<80>%i】
 can't be replayed in 1cursors 【<80>%i】
 after error 【<80>%i】
 brefore retry : s:char=【<80>%i】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>%i】
 before_getchar【<80>%i】
【l:map】<S-Right>   * E
【after get esc】
 after_if【<80>%i】
 before_exit【<80>%i】
 after_exit【<80>%i】
is_special_key = 0
 before start_loop【<80>%i】
 after start_loop【<80>%i】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>%i】
 type(c)=【0】
 before 【<80>%i<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
invalid input: from mode v to 
now mode: v
after invalid input: from mode v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>%i】
 mode:【v to v】
 start error 【<80>%i】
 error2 【<80>%i】
 can't be replayed in 1cursors 【<80>%i】
 after error 【<80>%i】
 brefore retry : s:char=【<80>%i】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>%i】
 before_getchar【<80>%i】
【l:map】<S-Right>   * E
【after get esc】
 after_if【<80>%i】
 before_exit【<80>%i】
 after_exit【<80>%i】
is_special_key = 0
 before start_loop【<80>%i】
 after start_loop【<80>%i】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>%i】
 type(c)=【0】
 before 【<80>%i<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
invalid input: from mode v to 
now mode: v
after invalid input: from mode v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>%i】
 mode:【v to v】
 start error 【<80>%i】
 error2 【<80>%i】
 can't be replayed in 1cursors 【<80>%i】
 after error 【<80>%i】
 brefore retry : s:char=【<80>%i】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>%i】
 before_getchar【<80>%i】
【l:map】<S-Right>   * E
【after get esc】
 after_if【<80>%i】
 before_exit【<80>%i】
 after_exit【<80>%i】
is_special_key = 0
 before start_loop【<80>%i】
 after start_loop【<80>%i】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>%i】
 type(c)=【0】
 before 【<80>%i<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
invalid input: from mode v to 
now mode: v
after invalid input: from mode v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>%i】
 mode:【v to v】
 start error 【<80>%i】
 error2 【<80>%i】
 can't be replayed in 1cursors 【<80>%i】
 after error 【<80>%i】
 brefore retry : s:char=【<80>%i】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>%i】
 before_getchar【<80>%i】
【l:map】<S-Right>   * E
【after get esc】
 after_if【<80>%i】
 before_exit【<80>%i】
 after_exit【<80>%i】
is_special_key = 0
 before start_loop【<80>%i】
 after start_loop【<80>%i】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>%i】
 type(c)=【0】
 before 【<80>%i<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
invalid input: from mode v to 
now mode: v
after invalid input: from mode v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>%i】
 mode:【v to v】
 start error 【<80>%i】
 error2 【<80>%i】
 can't be replayed in 1cursors 【<80>%i】
 after error 【<80>%i】
 brefore retry : s:char=【<80>%i】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>%i】
 before_getchar【<80>%i】
【l:map】<S-Right>   * E
【after get esc】
 after_if【<80>%i】
 before_exit【<80>%i】
 after_exit【<80>%i】
is_special_key = 0
 before start_loop【<80>%i】
 after start_loop【<80>%i】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>%i】
 type(c)=【0】
 before 【<80>%i<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
invalid input: from mode v to 
now mode: v
after invalid input: from mode v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>%i】
 mode:【v to v】
 start error 【<80>%i】
 error2 【<80>%i】
 can't be replayed in 1cursors 【<80>%i】
 after error 【<80>%i】
 brefore retry : s:char=【<80>%i】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>%i】
 before_getchar【<80>%i】
【l:map】<S-Right>   * E
【after get esc】
 after_if【<80>%i】
 before_exit【<80>%i】
 after_exit【<80>%i】
is_special_key = 0
 before start_loop【<80>%i】
 after start_loop【<80>%i】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>%i】
 type(c)=【0】
 before 【<80>%i<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
invalid input: from mode v to 
now mode: v
after invalid input: from mode v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>%i】
 mode:【v to v】
 start error 【<80>%i】
 error2 【<80>%i】
 can't be replayed in 1cursors 【<80>%i】
 after error 【<80>%i】
 brefore retry : s:char=【<80>%i】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>%i】
 before_getchar【<80>%i】
【l:map】<S-Right>   * E
【after get esc】
 after_if【<80>%i】
 before_exit【<80>%i】
 after_exit【<80>%i】
is_special_key = 0
 before start_loop【<80>%i】
 after start_loop【<80>%i】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>%i】
 type(c)=【0】
 before 【<80>%i<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
invalid input: from mode v to 
now mode: v
after invalid input: from mode v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>%i】
 mode:【v to v】
 start error 【<80>%i】
 error2 【<80>%i】
 can't be replayed in 1cursors 【<80>%i】
 after error 【<80>%i】
 brefore retry : s:char=【<80>%i】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【^[】
 before_getchar【^[】
【l:map】<Esc>[4~      <End>
【get esc】
【char_mapping】
【l:map】<Esc>[4~      <End>
【char_mapping】
【l:map】<Esc>[4~      <End>
【char_mapping】
【l:map】<Esc>[4~      <End>
【char_mapping】
【l:map】<Esc>[4~      <End>
【char_mapping】
【l:map】<Esc>[4~      <End>
【char_mapping】
【l:map】<Esc>[4~      <End>
【char_mapping】
【l:map】<Esc>[4~      <End>
【char_mapping】
【l:map】<Esc>[4~      <End>
【char_mapping】
【l:map】<Esc>[4~      <End>
【char_mapping】
【l:map】<Esc>[4~      <End>
【char_mapping】
【l:map】<Esc>[4~      <End>
【char_mapping】
【l:map】<Esc>[4~      <End>
【char_mapping】
【l:map】<Esc>[4~      <End>
【char_mapping】
【l:map】<Esc>[4~      <End>
【char_mapping】
【l:map】<Esc>[4~      <End>
【char_mapping】
【l:map】<Esc>[4~      <End>
【char_mapping】
【l:map】<Esc>[4~      <End>
【char_mapping】
【l:map】<Esc>[4~      <End>
【after get esc】
 after_if【^[】
 before_exit【^[】
 after_exit【^[】
is_special_key = 0
 before start_loop【^[】
 after start_loop【^[】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【^[】
 type(c)=【0】
 before 【^[<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to n
before mc-input3: from v to n
before mc-input4: from v to n
after mc-input: from v to n
 start 【^[】
 mode:【v to n】
 start error 【^[】
 error2 【^[】
 after error 【^[】
 brefore retry : s:char=【^[】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>ku】
 before_getchar【<80>ku】
【after get esc】
 after_if【<80>ku】
 before_exit【<80>ku】
 after_exit【<80>ku】
is_special_key = 0
 before start_loop【<80>ku】
 after start_loop【<80>ku】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from n to 
before apply【<80>ku】
 type(c)=【0】
 before 【<80>ku<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from n to 
before mc-detect: from n to 
after mc-detect: from n to 
before mc-input: from n to 
before mc-input2: from n to n
before mc-input3: from n to n
before mc-input4: from n to n
after mc-input: from n to n
 start 【<80>ku】
 mode:【n to n】
 start error 【<80>ku】
 error2 【<80>ku】
 after error 【<80>ku】
 brefore retry : s:char=【<80>ku】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80><fd>,】
 before_getchar【<80><fd>,】
【l:map】<LeftMouse> * :MarkClear<CR><LeftMouse>
【after get esc】
 after_if【<80><fd>,】
 before_exit【<80><fd>,】
 after_exit【<80><fd>,】
is_special_key = 0
 before start_loop【<80><fd>,】
 after start_loop【<80><fd>,】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from n to 
before apply【<80><fd>,】
 type(c)=【0】
 before 【<80><fd>,<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from n to 
before mc-detect: from n to 
after mc-detect: from n to 
before mc-input: from n to 
before mc-input2: from n to n
before mc-input3: from n to n
before mc-input4: from n to n
after mc-input: from n to n
 start 【<80><fd>,】
 mode:【n to n】
 start error 【<80><fd>,】
 error2 【<80><fd>,】
 after error 【<80><fd>,】
 brefore retry : s:char=【<80><fd>,】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80><fd>.】
 before_getchar【<80><fd>.】
【l:map】<Plug>(multiple-cursors-new-word) * :<C-U>call multiple_cursors#new('v', 1)<CR>
【after get esc】
 after_if【<80><fd>.】
 before_exit【<80><fd>.】
 after_exit【<80><fd>.】
is_special_key = 0
 before start_loop【<80><fd>.】
 after start_loop【<80><fd>.】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from n to 
before apply【<80><fd>.】
 type(c)=【0】
 before 【<80><fd>.<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from n to 
before mc-detect: from n to 
after mc-detect: from n to 
before mc-input: from n to 
before mc-input2: from n to n
before mc-input3: from n to n
before mc-input4: from n to n
after mc-input: from n to n
 start 【<80><fd>.】
 mode:【n to n】
 start error 【<80><fd>.】
 error2 【<80><fd>.】
 after error 【<80><fd>.】
 brefore retry : s:char=【<80><fd>.】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80><fd>,】
 before_getchar【<80><fd>,】
【l:map】<LeftMouse> * :MarkClear<CR><LeftMouse>
【after get esc】
 after_if【<80><fd>,】
 before_exit【<80><fd>,】
 after_exit【<80><fd>,】
is_special_key = 0
 before start_loop【<80><fd>,】
 after start_loop【<80><fd>,】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from n to 
before apply【<80><fd>,】
 type(c)=【0】
 before 【<80><fd>,<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from n to 
before mc-detect: from n to 
after mc-detect: from n to 
before mc-input: from n to 
before mc-input2: from n to n
before mc-input3: from n to n
before mc-input4: from n to n
after mc-input: from n to n
 start 【<80><fd>,】
 mode:【n to n】
 start error 【<80><fd>,】
 error2 【<80><fd>,】
 after error 【<80><fd>,】
 brefore retry : s:char=【<80><fd>,】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80><fd>.】
 before_getchar【<80><fd>.】
【l:map】<Plug>(multiple-cursors-new-word) * :<C-U>call multiple_cursors#new('v', 1)<CR>
【after get esc】
 after_if【<80><fd>.】
 before_exit【<80><fd>.】
 after_exit【<80><fd>.】
is_special_key = 0
 before start_loop【<80><fd>.】
 after start_loop【<80><fd>.】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from n to 
before apply【<80><fd>.】
 type(c)=【0】
 before 【<80><fd>.<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from n to 
before mc-detect: from n to 
after mc-detect: from n to 
before mc-input: from n to 
before mc-input2: from n to n
before mc-input3: from n to n
before mc-input4: from n to n
after mc-input: from n to n
 start 【<80><fd>.】
 mode:【n to n】
 start error 【<80><fd>.】
 error2 【<80><fd>.】
 after error 【<80><fd>.】
 brefore retry : s:char=【<80><fd>.】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【^S】
 before_getchar【^S】
【l:map】<C-S>       * :call UpDate()<CR>
【after get esc】
 after_if【^S】
 before_exit【^S】
 after_exit【^S】
is_special_key = 0
 before start_loop【^S】
 after start_loop【^S】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from n to 
before apply【^S】
 type(c)=【0】
 before 【^S<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from n to 
before mc-detect: from n to 
after mc-detect: from n to 
before mc-input: from n to 
before mc-input2: from n to n
before mc-input3: from n to n
before mc-input4: from n to n
after mc-input: from n to n
 start 【^S】
 mode:【n to n】
 start error 【^S】
 error2 【^S】
 after error 【^S】
 brefore retry : s:char=【^S】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80><fd>^E】
 before_getchar【<80><fd>^E】
【l:map】<S-Down>    * $<C-D>
【after get esc】
 after_if【<80><fd>^E】
 before_exit【<80><fd>^E】
 after_exit【<80><fd>^E】
is_special_key = 0
 before start_loop【<80><fd>^E】
 after start_loop【<80><fd>^E】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from n to 
before apply【<80><fd>^E】
 type(c)=【0】
 before 【<80><fd>^E<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from n to 
before mc-detect: from n to 
after mc-detect: from n to 
before mc-input: from n to 
before mc-input2: from n to n
before mc-input3: from n to n
before mc-input4: from n to n
after mc-input: from n to n
 start 【<80><fd>^E】
 mode:【n to n】
 start error 【<80><fd>^E】
 error2 【<80><fd>^E】
 after error 【<80><fd>^E】
 brefore retry : s:char=【<80><fd>^E】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80><fd>^E】
 before_getchar【<80><fd>^E】
【l:map】<S-Down>    * $<C-D>
【after get esc】
 after_if【<80><fd>^E】
 before_exit【<80><fd>^E】
 after_exit【<80><fd>^E】
is_special_key = 0
 before start_loop【<80><fd>^E】
 after start_loop【<80><fd>^E】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from n to 
before apply【<80><fd>^E】
 type(c)=【0】
 before 【<80><fd>^E<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from n to 
before mc-detect: from n to 
after mc-detect: from n to 
before mc-input: from n to 
before mc-input2: from n to n
before mc-input3: from n to n
before mc-input4: from n to n
after mc-input: from n to n
 start 【<80><fd>^E】
 mode:【n to n】
 start error 【<80><fd>^E】
 error2 【<80><fd>^E】
 after error 【<80><fd>^E】
 brefore retry : s:char=【<80><fd>^E】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80><fd>^E】
 before_getchar【<80><fd>^E】
【l:map】<S-Down>    * $<C-D>
【after get esc】
 after_if【<80><fd>^E】
 before_exit【<80><fd>^E】
 after_exit【<80><fd>^E】
is_special_key = 0
 before start_loop【<80><fd>^E】
 after start_loop【<80><fd>^E】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from n to 
before apply【<80><fd>^E】
 type(c)=【0】
 before 【<80><fd>^E<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from n to 
before mc-detect: from n to 
after mc-detect: from n to 
invalid input: from mode n to 
now mode: n
after invalid input: from mode n to 
before mc-input: from n to 
before mc-input2: from n to n
before mc-input3: from n to n
before mc-input4: from n to n
after mc-input: from n to n
 start 【<80><fd>^E】
 mode:【n to n】
 start error 【<80><fd>^E】
 error2 【<80><fd>^E】
 can't be replayed in 1cursors 【<80><fd>^E】
 after error 【<80><fd>^E】
 brefore retry : s:char=【<80><fd>^E】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80><fd>^E】
 before_getchar【<80><fd>^E】
【l:map】<S-Down>    * $<C-D>
【after get esc】
 after_if【<80><fd>^E】
 before_exit【<80><fd>^E】
 after_exit【<80><fd>^E】
is_special_key = 0
 before start_loop【<80><fd>^E】
 after start_loop【<80><fd>^E】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from n to 
before apply【<80><fd>^E】
 type(c)=【0】
 before 【<80><fd>^E<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from n to 
before mc-detect: from n to 
after mc-detect: from n to 
invalid input: from mode n to 
now mode: n
after invalid input: from mode n to 
before mc-input: from n to 
before mc-input2: from n to n
before mc-input3: from n to n
before mc-input4: from n to n
after mc-input: from n to n
 start 【<80><fd>^E】
 mode:【n to n】
 start error 【<80><fd>^E】
 error2 【<80><fd>^E】
 can't be replayed in 1cursors 【<80><fd>^E】
 after error 【<80><fd>^E】
 brefore retry : s:char=【<80><fd>^E】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80><fd>^E】
 before_getchar【<80><fd>^E】
【l:map】<S-Down>    * $<C-D>
【after get esc】
 after_if【<80><fd>^E】
 before_exit【<80><fd>^E】
 after_exit【<80><fd>^E】
is_special_key = 0
 before start_loop【<80><fd>^E】
 after start_loop【<80><fd>^E】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from n to 
before apply【<80><fd>^E】
 type(c)=【0】
 before 【<80><fd>^E<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from n to 
before mc-detect: from n to 
after mc-detect: from n to 
invalid input: from mode n to 
now mode: n
after invalid input: from mode n to 
before mc-input: from n to 
before mc-input2: from n to n
before mc-input3: from n to n
before mc-input4: from n to n
after mc-input: from n to n
 start 【<80><fd>^E】
 mode:【n to n】
 start error 【<80><fd>^E】
 error2 【<80><fd>^E】
 can't be replayed in 1cursors 【<80><fd>^E】
 after error 【<80><fd>^E】
 brefore retry : s:char=【<80><fd>^E】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80><fd>^E】
 before_getchar【<80><fd>^E】
【l:map】<S-Down>    * $<C-D>
【after get esc】
 after_if【<80><fd>^E】
 before_exit【<80><fd>^E】
 after_exit【<80><fd>^E】
is_special_key = 0
 before start_loop【<80><fd>^E】
 after start_loop【<80><fd>^E】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from n to 
before apply【<80><fd>^E】
 type(c)=【0】
 before 【<80><fd>^E<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from n to 
before mc-detect: from n to 
after mc-detect: from n to 
invalid input: from mode n to 
now mode: n
after invalid input: from mode n to 
before mc-input: from n to 
before mc-input2: from n to n
before mc-input3: from n to n
before mc-input4: from n to n
after mc-input: from n to n
 start 【<80><fd>^E】
 mode:【n to n】
 start error 【<80><fd>^E】
 error2 【<80><fd>^E】
 can't be replayed in 1cursors 【<80><fd>^E】
 after error 【<80><fd>^E】
 brefore retry : s:char=【<80><fd>^E】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【≈】
 before_getchar【≈】
【after get esc】
 after_if【≈】
 before_exit【≈】
 start 【】
 mode:【n to 】
 start error 【】
 error2 【】
 after error 【】
 brefore retry : s:char=【】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【v】
 before_getchar【v】
【after get esc】
 after_if【v】
 before_exit【v】
 after_exit【v】
is_special_key = 0
 before start_loop【v】
 after start_loop【v】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【v】
 type(c)=【0】
 before 【v<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to n
before mc-input3: from v to n
before mc-input4: from v to n
after mc-input: from v to n
 start 【v】
 mode:【v to n】
 start error 【v】
 error2 【v】
 after error 【v】
 brefore retry : s:char=【v】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【a】
 before_getchar【a】
【after get esc】
 after_if【a】
 before_exit【a】
 after_exit【a】
is_special_key = 0
 before start_loop【a】
 after start_loop【a】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from n to 
before apply【a】
 type(c)=【0】
 before 【a<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from n to 
before mc-detect: from n to 
after mc-detect: from n to 
before mc-input: from n to 
before mc-input2: from n to i
before mc-input3: from n to i
before mc-input4: from n to i
after mc-input: from n to i
 start 【a】
 mode:【n to i】
 start error 【a】
 error2 【a】
 after error 【a】
 brefore retry : s:char=【a】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80><fd>^E】
 before_getchar【<80><fd>^E】
【l:map】<S-Down>    * <C-O>$<C-O><C-D>
【after get esc】
 after_if【<80><fd>^E】
 before_exit【<80><fd>^E】
 after_exit【<80><fd>^E】
is_special_key = 0
 before start_loop【<80><fd>^E】
 after start_loop【<80><fd>^E】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【<80><fd>^E<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【<80><fd>^E】
 mode:【i to i】
 start error 【<80><fd>^E】
 error2 【<80><fd>^E】
 after error 【<80><fd>^E】
 brefore retry : s:char=【<80><fd>^E】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80><fd>^E】
 before_getchar【<80><fd>^E】
【l:map】<S-Down>    * <C-O>$<C-O><C-D>
【after get esc】
 after_if【<80><fd>^E】
 before_exit【<80><fd>^E】
 after_exit【<80><fd>^E】
is_special_key = 0
 before start_loop【<80><fd>^E】
 after start_loop【<80><fd>^E】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【<80><fd>^E<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
invalid input: from mode i to 
now mode: n
after invalid input: from mode i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【<80><fd>^E】
 mode:【i to i】
 start error 【<80><fd>^E】
 error2 【<80><fd>^E】
 can't be replayed in 1cursors 【<80><fd>^E】
 after error 【<80><fd>^E】
 brefore retry : s:char=【<80><fd>^E】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80><fd>^E】
 before_getchar【<80><fd>^E】
【l:map】<S-Down>    * <C-O>$<C-O><C-D>
【after get esc】
 after_if【<80><fd>^E】
 before_exit【<80><fd>^E】
 after_exit【<80><fd>^E】
is_special_key = 0
 before start_loop【<80><fd>^E】
 after start_loop【<80><fd>^E】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【<80><fd>^E<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
invalid input: from mode i to 
now mode: n
after invalid input: from mode i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【<80><fd>^E】
 mode:【i to i】
 start error 【<80><fd>^E】
 error2 【<80><fd>^E】
 can't be replayed in 1cursors 【<80><fd>^E】
 after error 【<80><fd>^E】
 brefore retry : s:char=【<80><fd>^E】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80><fd>,】
 before_getchar【<80><fd>,】
【l:map】<LeftMouse> * <C-O>:MarkClear<CR><LeftMouse>
【after get esc】
 after_if【<80><fd>,】
 before_exit【<80><fd>,】
 after_exit【<80><fd>,】
is_special_key = 0
 before start_loop【<80><fd>,】
 after start_loop【<80><fd>,】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【<80><fd>,<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【<80><fd>,】
 mode:【i to i】
 start error 【<80><fd>,】
 error2 【<80><fd>,】
 after error 【<80><fd>,】
 brefore retry : s:char=【<80><fd>,】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80><fd>.】
 before_getchar【<80><fd>.】
【l:map】<Plug>(multiple-cursors-wait) * <C-O>:call <SNR>65_wait_for_user_input('')<CR>
【after get esc】
 after_if【<80><fd>.】
 before_exit【<80><fd>.】
 after_exit【<80><fd>.】
is_special_key = 0
 before start_loop【<80><fd>.】
 after start_loop【<80><fd>.】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【<80><fd>.<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【<80><fd>.】
 mode:【i to i】
 start error 【<80><fd>.】
 error2 【<80><fd>.】
 after error 【<80><fd>.】
 brefore retry : s:char=【<80><fd>.】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【^[】
 before_getchar【^[】
【l:map】<Esc>[4~      <End>
【get esc】
【char_mapping】
【l:map】<Esc>[4~      <End>
【char_mapping】
【l:map】<Esc><Esc>[6~ * <C-O><C-W>j
【char_mapping】
 before_subs【^[^[<80>kl】
 after_subs【】
【after get esc】
 after_if【】
 before_exit【】
 after_exit【】
is_special_key = 0
 before start_loop【】
 after start_loop【】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【】
 mode:【i to i】
 start error 【】
 error2 【】
 after error 【】
 brefore retry : s:char=【】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kl】
 before_getchar【<80>kl】
【after get esc】
 after_if【<80>kl】
 before_exit【<80>kl】
 after_exit【<80>kl】
is_special_key = 0
 before start_loop【<80>kl】
 after start_loop【<80>kl】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【<80>kl<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【<80>kl】
 mode:【i to i】
 start error 【<80>kl】
 error2 【<80>kl】
 after error 【<80>kl】
 brefore retry : s:char=【<80>kl】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kl】
 before_getchar【<80>kl】
【after get esc】
 after_if【<80>kl】
 before_exit【<80>kl】
 after_exit【<80>kl】
is_special_key = 0
 before start_loop【<80>kl】
 after start_loop【<80>kl】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【<80>kl<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【<80>kl】
 mode:【i to i】
 start error 【<80>kl】
 error2 【<80>kl】
 after error 【<80>kl】
 brefore retry : s:char=【<80>kl】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【 】
 before_getchar【 】
【after get esc】
 after_if【 】
 before_exit【 】
 after_exit【 】
is_special_key = 0
 before start_loop【 】
 after start_loop【 】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【 <80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【 】
 mode:【i to i】
 start error 【 】
 error2 【 】
 after error 【 】
 brefore retry : s:char=【 】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【^Z】
 before_getchar【^Z】
【l:map】<C-Z>       * <C-O>u
【after get esc】
 after_if【^Z】
 before_exit【^Z】
 after_exit【^Z】
is_special_key = 0
 before start_loop【^Z】
 after start_loop【^Z】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to i
before mc-input3: from i to i
before mc-input4: from i to i
after mc-input: from i to i
 start 【^Z】
 mode:【i to i】
 start error 【^Z】
 error2 【^Z】
 after error 【^Z】
 brefore retry : s:char=【^Z】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【^[】
 before_getchar【^[】
【l:map】<Esc>[4~      <End>
【get esc】
【char_mapping】
【l:map】<Esc>[4~      <End>
【char_mapping】
【l:map】<Esc>[4~      <End>
【char_mapping】
【l:map】<Esc>[4~      <End>
【char_mapping】
【l:map】<Esc>[4~      <End>
【char_mapping】
【l:map】<Esc>[4~      <End>
【char_mapping】
【l:map】<Esc>[4~      <End>
【char_mapping】
【l:map】<Esc>[4~      <End>
【char_mapping】
【l:map】<Esc>[4~      <End>
【char_mapping】
【l:map】<Esc>[4~      <End>
【char_mapping】
【l:map】<Esc>[4~      <End>
【char_mapping】
【l:map】<Esc>[4~      <End>
【char_mapping】
【l:map】<Esc>[4~      <End>
【char_mapping】
【l:map】<Esc>[4~      <End>
【char_mapping】
【l:map】<Esc>[4~      <End>
【char_mapping】
【l:map】<Esc>[4~      <End>
【char_mapping】
【l:map】<Esc>[4~      <End>
【char_mapping】
【l:map】<Esc>[4~      <End>
【char_mapping】
【l:map】<Esc>[4~      <End>
【char_mapping】
【l:map】<Esc>[4~      <End>
【after get esc】
 after_if【^[】
 before_exit【^[】
 after_exit【^[】
is_special_key = 0
 before start_loop【^[】
 after start_loop【^[】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply1 from i to 
 type(c)=【0】
 before 【^[<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply1 from i to 
before mc-detect: from i to 
after mc-detect: from i to 
before mc-input: from i to 
before mc-input2: from i to n
before mc-input3: from i to n
before mc-input4: from i to n
after mc-input: from i to n
 start 【^[】
 mode:【i to n】
 start error 【^[】
 error2 【^[】
 after error 【^[】
 brefore retry : s:char=【^[】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【^Z】
 before_getchar【^Z】
【l:map】<C-Z>       * u
【after get esc】
 after_if【^Z】
 before_exit【^Z】
 after_exit【^Z】
is_special_key = 0
 before start_loop【^Z】
 after start_loop【^Z】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from n to 
before apply【^Z】
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from n to 
before mc-detect: from n to 
after mc-detect: from n to 
before mc-input: from n to 
before mc-input2: from n to n
before mc-input3: from n to n
before mc-input4: from n to n
after mc-input: from n to n
 start 【^Z】
 mode:【n to n】
 start error 【^Z】
 error2 【^Z】
 after error 【^Z】
 brefore retry : s:char=【^Z】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【^Z】
 before_getchar【^Z】
【l:map】<C-Z>       * u
【after get esc】
 after_if【^Z】
 before_exit【^Z】
 after_exit【^Z】
is_special_key = 0
 before start_loop【^Z】
 after start_loop【^Z】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from n to 
before apply【^Z】
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from n to 
before mc-detect: from n to 
after mc-detect: from n to 
before mc-input: from n to 
before mc-input2: from n to n
before mc-input3: from n to n
before mc-input4: from n to n
after mc-input: from n to n
 start 【^Z】
 mode:【n to n】
 start error 【^Z】
 error2 【^Z】
 after error 【^Z】
 brefore retry : s:char=【^Z】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【^Z】
 before_getchar【^Z】
【l:map】<C-Z>       * u
【after get esc】
 after_if【^Z】
 before_exit【^Z】
 after_exit【^Z】
is_special_key = 0
 before start_loop【^Z】
 after start_loop【^Z】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from n to 
before apply【^Z】
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from n to 
before mc-detect: from n to 
after mc-detect: from n to 
before mc-input: from n to 
before mc-input2: from n to n
before mc-input3: from n to n
before mc-input4: from n to n
after mc-input: from n to n
 start 【^Z】
 mode:【n to n】
 start error 【^Z】
 error2 【^Z】
 after error 【^Z】
 brefore retry : s:char=【^Z】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【^Z】
 before_getchar【^Z】
【l:map】<C-Z>       * u
【after get esc】
 after_if【^Z】
 before_exit【^Z】
 after_exit【^Z】
is_special_key = 0
 before start_loop【^Z】
 after start_loop【^Z】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from n to 
before apply【^Z】
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from n to 
before mc-detect: from n to 
after mc-detect: from n to 
before mc-input: from n to 
before mc-input2: from n to n
before mc-input3: from n to n
before mc-input4: from n to n
after mc-input: from n to n
 start 【^Z】
 mode:【n to n】
 start error 【^Z】
 error2 【^Z】
 after error 【^Z】
 brefore retry : s:char=【^Z】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【^Z】
 before_getchar【^Z】
【l:map】<C-Z>       * u
【after get esc】
 after_if【^Z】
 before_exit【^Z】
 after_exit【^Z】
is_special_key = 0
 before start_loop【^Z】
 after start_loop【^Z】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from n to 
before apply【^Z】
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from n to 
before mc-detect: from n to 
after mc-detect: from n to 
before mc-input: from n to 
before mc-input2: from n to n
before mc-input3: from n to n
before mc-input4: from n to n
after mc-input: from n to n
 start 【^Z】
 mode:【n to n】
 start error 【^Z】
 error2 【^Z】
 after error 【^Z】
 brefore retry : s:char=【^Z】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【^R】
 before_getchar【^R】
【l:map】<C-R>       * <C-R>
【after get esc】
 after_if【^R】
 before_exit【^R】
 after_exit【^R】
is_special_key = 0
 before start_loop【^R】
 after start_loop【^R】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from n to 
before apply【^R】
 type(c)=【0】
 before 【^R<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from n to 
before mc-detect: from n to 
after mc-detect: from n to 
invalid input: from mode n to 
now mode: n
after invalid input: from mode n to 
before mc-input: from n to 
before mc-input2: from n to n
before mc-input3: from n to n
before mc-input4: from n to n
after mc-input: from n to n
 start 【^R】
 mode:【n to n】
 start error 【^R】
 error2 【^R】
 can't be replayed in 1cursors 【^R】
 after error 【^R】
 brefore retry : s:char=【^R】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【^R】
 before_getchar【^R】
【l:map】<C-R>       * <C-R>
【after get esc】
 after_if【^R】
 before_exit【^R】
 after_exit【^R】
is_special_key = 0
 before start_loop【^R】
 after start_loop【^R】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from n to 
before apply【^R】
 type(c)=【0】
 before 【^R<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from n to 
before mc-detect: from n to 
after mc-detect: from n to 
invalid input: from mode n to 
now mode: n
after invalid input: from mode n to 
before mc-input: from n to 
before mc-input2: from n to n
before mc-input3: from n to n
before mc-input4: from n to n
after mc-input: from n to n
 start 【^R】
 mode:【n to n】
 start error 【^R】
 error2 【^R】
 can't be replayed in 1cursors 【^R】
 after error 【^R】
 brefore retry : s:char=【^R】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【^R】
 before_getchar【^R】
【l:map】<C-R>       * <C-R>
【after get esc】
 after_if【^R】
 before_exit【^R】
 after_exit【^R】
is_special_key = 0
 before start_loop【^R】
 after start_loop【^R】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from n to 
before apply【^R】
 type(c)=【0】
 before 【^R<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from n to 
before mc-detect: from n to 
after mc-detect: from n to 
invalid input: from mode n to 
now mode: n
after invalid input: from mode n to 
before mc-input: from n to 
before mc-input2: from n to n
before mc-input3: from n to n
before mc-input4: from n to n
after mc-input: from n to n
 start 【^R】
 mode:【n to n】
 start error 【^R】
 error2 【^R】
 can't be replayed in 1cursors 【^R】
 after error 【^R】
 brefore retry : s:char=【^R】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【^R】
 before_getchar【^R】
【l:map】<C-R>       * <C-R>
【after get esc】
 after_if【^R】
 before_exit【^R】
 after_exit【^R】
is_special_key = 0
 before start_loop【^R】
 after start_loop【^R】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from n to 
before apply【^R】
 type(c)=【0】
 before 【^R<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from n to 
before mc-detect: from n to 
after mc-detect: from n to 
invalid input: from mode n to 
now mode: n
after invalid input: from mode n to 
before mc-input: from n to 
before mc-input2: from n to n
before mc-input3: from n to n
before mc-input4: from n to n
after mc-input: from n to n
 start 【^R】
 mode:【n to n】
 start error 【^R】
 error2 【^R】
 can't be replayed in 1cursors 【^R】
 after error 【^R】
 brefore retry : s:char=【^R】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【^R】
 before_getchar【^R】
【l:map】<C-R>       * <C-R>
【after get esc】
 after_if【^R】
 before_exit【^R】
 after_exit【^R】
is_special_key = 0
 before start_loop【^R】
 after start_loop【^R】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from n to 
before apply【^R】
 type(c)=【0】
 before 【^R<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from n to 
before mc-detect: from n to 
after mc-detect: from n to 
invalid input: from mode n to 
now mode: n
after invalid input: from mode n to 
before mc-input: from n to 
before mc-input2: from n to n
before mc-input3: from n to n
before mc-input4: from n to n
after mc-input: from n to n
 start 【^R】
 mode:【n to n】
 start error 【^R】
 error2 【^R】
 can't be replayed in 1cursors 【^R】
 after error 【^R】
 brefore retry : s:char=【^R】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【^R】
 before_getchar【^R】
【l:map】<C-R>       * <C-R>
【after get esc】
 after_if【^R】
 before_exit【^R】
 after_exit【^R】
is_special_key = 0
 before start_loop【^R】
 after start_loop【^R】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from n to 
before apply【^R】
 type(c)=【0】
 before 【^R<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from n to 
before mc-detect: from n to 
after mc-detect: from n to 
invalid input: from mode n to 
now mode: n
after invalid input: from mode n to 
before mc-input: from n to 
before mc-input2: from n to n
before mc-input3: from n to n
before mc-input4: from n to n
after mc-input: from n to n
 start 【^R】
 mode:【n to n】
 start error 【^R】
 error2 【^R】
 can't be replayed in 1cursors 【^R】
 after error 【^R】
 brefore retry : s:char=【^R】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【^R】
 before_getchar【^R】
【l:map】<C-R>       * <C-R>
【after get esc】
 after_if【^R】
 before_exit【^R】
 after_exit【^R】
is_special_key = 0
 before start_loop【^R】
 after start_loop【^R】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from n to 
before apply【^R】
 type(c)=【0】
 before 【^R<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from n to 
before mc-detect: from n to 
after mc-detect: from n to 
invalid input: from mode n to 
now mode: n
after invalid input: from mode n to 
before mc-input: from n to 
before mc-input2: from n to n
before mc-input3: from n to n
before mc-input4: from n to n
after mc-input: from n to n
 start 【^R】
 mode:【n to n】
 start error 【^R】
 error2 【^R】
 can't be replayed in 1cursors 【^R】
 after error 【^R】
 brefore retry : s:char=【^R】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【^R】
 before_getchar【^R】
【l:map】<C-R>       * <C-R>
【after get esc】
 after_if【^R】
 before_exit【^R】
 after_exit【^R】
is_special_key = 0
 before start_loop【^R】
 after start_loop【^R】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from n to 
before apply【^R】
 type(c)=【0】
 before 【^R<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from n to 
before mc-detect: from n to 
after mc-detect: from n to 
invalid input: from mode n to 
now mode: n
after invalid input: from mode n to 
before mc-input: from n to 
before mc-input2: from n to n
before mc-input3: from n to n
before mc-input4: from n to n
after mc-input: from n to n
 start 【^R】
 mode:【n to n】
 start error 【^R】
 error2 【^R】
 can't be replayed in 1cursors 【^R】
 after error 【^R】
 brefore retry : s:char=【^R】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【^R】
 before_getchar【^R】
【l:map】<C-R>       * <C-R>
【after get esc】
 after_if【^R】
 before_exit【^R】
 after_exit【^R】
is_special_key = 0
 before start_loop【^R】
 after start_loop【^R】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from n to 
before apply【^R】
 type(c)=【0】
 before 【^R<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from n to 
before mc-detect: from n to 
after mc-detect: from n to 
invalid input: from mode n to 
now mode: n
after invalid input: from mode n to 
before mc-input: from n to 
before mc-input2: from n to n
before mc-input3: from n to n
before mc-input4: from n to n
after mc-input: from n to n
 start 【^R】
 mode:【n to n】
 start error 【^R】
 error2 【^R】
 can't be replayed in 1cursors 【^R】
 after error 【^R】
 brefore retry : s:char=【^R】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【^R】
 before_getchar【^R】
【l:map】<C-R>       * <C-R>
【after get esc】
 after_if【^R】
 before_exit【^R】
 after_exit【^R】
is_special_key = 0
 before start_loop【^R】
 after start_loop【^R】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from n to 
before apply【^R】
 type(c)=【0】
 before 【^R<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from n to 
before mc-detect: from n to 
after mc-detect: from n to 
invalid input: from mode n to 
now mode: n
after invalid input: from mode n to 
before mc-input: from n to 
before mc-input2: from n to n
before mc-input3: from n to n
before mc-input4: from n to n
after mc-input: from n to n
 start 【^R】
 mode:【n to n】
 start error 【^R】
 error2 【^R】
 can't be replayed in 1cursors 【^R】
 after error 【^R】
 brefore retry : s:char=【^R】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【^R】
 before_getchar【^R】
【l:map】<C-R>       * <C-R>
【after get esc】
 after_if【^R】
 before_exit【^R】
 after_exit【^R】
is_special_key = 0
 before start_loop【^R】
 after start_loop【^R】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from n to 
before apply【^R】
 type(c)=【0】
 before 【^R<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from n to 
before mc-detect: from n to 
after mc-detect: from n to 
invalid input: from mode n to 
now mode: n
after invalid input: from mode n to 
before mc-input: from n to 
before mc-input2: from n to n
before mc-input3: from n to n
before mc-input4: from n to n
after mc-input: from n to n
 start 【^R】
 mode:【n to n】
 start error 【^R】
 error2 【^R】
 can't be replayed in 1cursors 【^R】
 after error 【^R】
 brefore retry : s:char=【^R】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【^R】
 before_getchar【^R】
【l:map】<C-R>       * <C-R>
【after get esc】
 after_if【^R】
 before_exit【^R】
 after_exit【^R】
is_special_key = 0
 before start_loop【^R】
 after start_loop【^R】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from n to 
before apply【^R】
 type(c)=【0】
 before 【^R<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from n to 
before mc-detect: from n to 
after mc-detect: from n to 
invalid input: from mode n to 
now mode: n
after invalid input: from mode n to 
before mc-input: from n to 
before mc-input2: from n to n
before mc-input3: from n to n
before mc-input4: from n to n
after mc-input: from n to n
 start 【^R】
 mode:【n to n】
 start error 【^R】
 error2 【^R】
 can't be replayed in 1cursors 【^R】
 after error 【^R】
 brefore retry : s:char=【^R】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【^R】
 before_getchar【^R】
【l:map】<C-R>       * <C-R>
【after get esc】
 after_if【^R】
 before_exit【^R】
 after_exit【^R】
is_special_key = 0
 before start_loop【^R】
 after start_loop【^R】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from n to 
before apply【^R】
 type(c)=【0】
 before 【^R<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from n to 
before mc-detect: from n to 
after mc-detect: from n to 
invalid input: from mode n to 
now mode: n
after invalid input: from mode n to 
before mc-input: from n to 
before mc-input2: from n to n
before mc-input3: from n to n
before mc-input4: from n to n
after mc-input: from n to n
 start 【^R】
 mode:【n to n】
 start error 【^R】
 error2 【^R】
 can't be replayed in 1cursors 【^R】
 after error 【^R】
 brefore retry : s:char=【^R】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【≈】
 before_getchar【≈】
【after get esc】
 after_if【≈】
 before_exit【≈】
 start 【】
 mode:【n to 】
 start error 【】
 error2 【】
 after error 【】
 brefore retry : s:char=【】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【^D】
 before_getchar【^D】
【l:map】<C-D>       * :<C-U>stopinsert<CR>gv:<C-U>call multiple_cursors#new("v", 0)<CR>
【after get esc】
 after_if【^D】
 before_exit【^D】
 after_exit【^D】
is_special_key = 1
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-new-word)】
 feedkesys s:saved_keys=【】
 start 【^D】
 mode:【v to 】
 start error 【^D】
 error2 【^D】
 after error 【^D】
 brefore retry : s:char=【^D】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kb】
 before_getchar【<80>kb】
【l:map】<BS>        * "_d
【after get esc】
 after_if【<80>kb】
 before_exit【<80>kb】
 after_exit【<80>kb】
is_special_key = 0
 before start_loop【<80>kb】
 after start_loop【<80>kb】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kb】
 type(c)=【0】
 before 【<80>kb<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to n
before mc-input3: from v to n
after mc-input5: from v to n
after mc-input: from v to n
before apply2 from v to n
before apply【<80>kb】
 type(c)=【0】
 before 【<80>kb<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to n
before mc-detect: from v to n
after mc-detect: from v to n
before mc-input: from v to n
before mc-input2: from v to n
before mc-input3: from v to n
before mc-input4: from v to n
after mc-input: from v to n
 start 【<80>kb】
 mode:【v to n】
 start error 【<80>kb】
 error2 【<80>kb】
 after error 【<80>kb】
 brefore retry : s:char=【<80>kb】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【^Z】
 before_getchar【^Z】
【l:map】<C-Z>       * u
【after get esc】
 after_if【^Z】
 before_exit【^Z】
 after_exit【^Z】
is_special_key = 0
 before start_loop【^Z】
 after start_loop【^Z】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from n to 
before apply【^Z】
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from n to 
before mc-detect: from n to 
after mc-detect: from n to 
before mc-input: from n to 
before mc-input2: from n to n
before mc-input3: from n to n
after mc-input5: from n to n
after mc-input: from n to n
before apply2 from n to n
before apply【^Z】
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from n to n
before mc-detect: from n to n
after mc-detect: from n to n
before mc-input: from n to n
before mc-input2: from n to n
before mc-input3: from n to n
before mc-input4: from n to n
after mc-input: from n to n
 start 【^Z】
 mode:【n to n】
 start error 【^Z】
 error2 【^Z】
 after error 【^Z】
 brefore retry : s:char=【^Z】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【^R】
 before_getchar【^R】
【l:map】<C-R>       * <C-R>
【after get esc】
 after_if【^R】
 before_exit【^R】
 after_exit【^R】
is_special_key = 0
 before start_loop【^R】
 after start_loop【^R】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from n to 
before apply【^R】
 type(c)=【0】
 before 【^R<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from n to 
before mc-detect: from n to 
after mc-detect: from n to 
before mc-input: from n to 
before mc-input2: from n to n
before mc-input3: from n to n
after mc-input5: from n to n
after mc-input: from n to n
before apply2 from n to n
before apply【^R】
 type(c)=【0】
 before 【^R<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from n to n
before mc-detect: from n to n
after mc-detect: from n to n
before mc-input: from n to n
before mc-input2: from n to n
before mc-input3: from n to n
before mc-input4: from n to n
after mc-input: from n to n
 start 【^R】
 mode:【n to n】
 start error 【^R】
 error2 【^R】
 after error 【^R】
 brefore retry : s:char=【^R】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【^Z】
 before_getchar【^Z】
【l:map】<C-Z>       * u
【after get esc】
 after_if【^Z】
 before_exit【^Z】
 after_exit【^Z】
is_special_key = 0
 before start_loop【^Z】
 after start_loop【^Z】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from n to 
before apply【^Z】
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from n to 
before mc-detect: from n to 
after mc-detect: from n to 
before mc-input: from n to 
before mc-input2: from n to n
before mc-input3: from n to n
after mc-input5: from n to n
after mc-input: from n to n
before apply2 from n to n
before apply【^Z】
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from n to n
before mc-detect: from n to n
after mc-detect: from n to n
before mc-input: from n to n
before mc-input2: from n to n
before mc-input3: from n to n
before mc-input4: from n to n
after mc-input: from n to n
 start 【^Z】
 mode:【n to n】
 start error 【^Z】
 error2 【^Z】
 after error 【^Z】
 brefore retry : s:char=【^Z】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kr】
 before_getchar【<80>kr】
【after get esc】
 after_if【<80>kr】
 before_exit【<80>kr】
 after_exit【<80>kr】
is_special_key = 0
 before start_loop【<80>kr】
 after start_loop【<80>kr】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from n to 
before apply【<80>kr】
 type(c)=【0】
 before 【<80>kr<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from n to 
before mc-detect: from n to 
after mc-detect: from n to 
before mc-input: from n to 
before mc-input2: from n to n
before mc-input3: from n to n
after mc-input5: from n to n
after mc-input: from n to n
before apply2 from n to n
before apply【<80>kr】
 type(c)=【0】
 before 【<80>kr<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from n to n
before mc-detect: from n to n
after mc-detect: from n to n
before mc-input: from n to n
before mc-input2: from n to n
before mc-input3: from n to n
before mc-input4: from n to n
after mc-input: from n to n
 start 【<80>kr】
 mode:【n to n】
 start error 【<80>kr】
 error2 【<80>kr】
 after error 【<80>kr】
 brefore retry : s:char=【<80>kr】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kr】
 before_getchar【<80>kr】
【after get esc】
 after_if【<80>kr】
 before_exit【<80>kr】
 after_exit【<80>kr】
is_special_key = 0
 before start_loop【<80>kr】
 after start_loop【<80>kr】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from n to 
before apply【<80>kr】
 type(c)=【0】
 before 【<80>kr<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from n to 
before mc-detect: from n to 
after mc-detect: from n to 
before mc-input: from n to 
before mc-input2: from n to n
before mc-input3: from n to n
after mc-input5: from n to n
after mc-input: from n to n
before apply2 from n to n
before apply【<80>kr】
 type(c)=【0】
 before 【<80>kr<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from n to n
before mc-detect: from n to n
after mc-detect: from n to n
before mc-input: from n to n
before mc-input2: from n to n
before mc-input3: from n to n
before mc-input4: from n to n
after mc-input: from n to n
 start 【<80>kr】
 mode:【n to n】
 start error 【<80>kr】
 error2 【<80>kr】
 after error 【<80>kr】
 brefore retry : s:char=【<80>kr】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kr】
 before_getchar【<80>kr】
【after get esc】
 after_if【<80>kr】
 before_exit【<80>kr】
 after_exit【<80>kr】
is_special_key = 0
 before start_loop【<80>kr】
 after start_loop【<80>kr】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from n to 
before apply【<80>kr】
 type(c)=【0】
 before 【<80>kr<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from n to 
before mc-detect: from n to 
after mc-detect: from n to 
before mc-input: from n to 
before mc-input2: from n to n
before mc-input3: from n to n
after mc-input5: from n to n
after mc-input: from n to n
before apply2 from n to n
before apply【<80>kr】
 type(c)=【0】
 before 【<80>kr<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from n to n
before mc-detect: from n to n
after mc-detect: from n to n
before mc-input: from n to n
before mc-input2: from n to n
before mc-input3: from n to n
before mc-input4: from n to n
after mc-input: from n to n
 start 【<80>kr】
 mode:【n to n】
 start error 【<80>kr】
 error2 【<80>kr】
 after error 【<80>kr】
 brefore retry : s:char=【<80>kr】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kr】
 before_getchar【<80>kr】
【after get esc】
 after_if【<80>kr】
 before_exit【<80>kr】
 after_exit【<80>kr】
is_special_key = 0
 before start_loop【<80>kr】
 after start_loop【<80>kr】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from n to 
before apply【<80>kr】
 type(c)=【0】
 before 【<80>kr<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from n to 
before mc-detect: from n to 
after mc-detect: from n to 
before mc-input: from n to 
before mc-input2: from n to n
before mc-input3: from n to n
after mc-input5: from n to n
after mc-input: from n to n
before apply2 from n to n
before apply【<80>kr】
 type(c)=【0】
 before 【<80>kr<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from n to n
before mc-detect: from n to n
after mc-detect: from n to n
before mc-input: from n to n
before mc-input2: from n to n
before mc-input3: from n to n
before mc-input4: from n to n
after mc-input: from n to n
 start 【<80>kr】
 mode:【n to n】
 start error 【<80>kr】
 error2 【<80>kr】
 after error 【<80>kr】
 brefore retry : s:char=【<80>kr】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kr】
 before_getchar【<80>kr】
【after get esc】
 after_if【<80>kr】
 before_exit【<80>kr】
 after_exit【<80>kr】
is_special_key = 0
 before start_loop【<80>kr】
 after start_loop【<80>kr】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from n to 
before apply【<80>kr】
 type(c)=【0】
 before 【<80>kr<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from n to 
before mc-detect: from n to 
after mc-detect: from n to 
before mc-input: from n to 
before mc-input2: from n to n
before mc-input3: from n to n
after mc-input5: from n to n
after mc-input: from n to n
before apply2 from n to n
before apply【<80>kr】
 type(c)=【0】
 before 【<80>kr<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from n to n
before mc-detect: from n to n
after mc-detect: from n to n
before mc-input: from n to n
before mc-input2: from n to n
before mc-input3: from n to n
before mc-input4: from n to n
after mc-input: from n to n
 start 【<80>kr】
 mode:【n to n】
 start error 【<80>kr】
 error2 【<80>kr】
 after error 【<80>kr】
 brefore retry : s:char=【<80>kr】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kr】
 before_getchar【<80>kr】
【after get esc】
 after_if【<80>kr】
 before_exit【<80>kr】
 after_exit【<80>kr】
is_special_key = 0
 before start_loop【<80>kr】
 after start_loop【<80>kr】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from n to 
before apply【<80>kr】
 type(c)=【0】
 before 【<80>kr<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from n to 
before mc-detect: from n to 
after mc-detect: from n to 
before mc-input: from n to 
before mc-input2: from n to n
before mc-input3: from n to n
after mc-input5: from n to n
after mc-input: from n to n
before apply2 from n to n
before apply【<80>kr】
 type(c)=【0】
 before 【<80>kr<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from n to n
before mc-detect: from n to n
after mc-detect: from n to n
before mc-input: from n to n
before mc-input2: from n to n
before mc-input3: from n to n
before mc-input4: from n to n
after mc-input: from n to n
 start 【<80>kr】
 mode:【n to n】
 start error 【<80>kr】
 error2 【<80>kr】
 after error 【<80>kr】
 brefore retry : s:char=【<80>kr】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kr】
 before_getchar【<80>kr】
【after get esc】
 after_if【<80>kr】
 before_exit【<80>kr】
 after_exit【<80>kr】
is_special_key = 0
 before start_loop【<80>kr】
 after start_loop【<80>kr】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from n to 
before apply【<80>kr】
 type(c)=【0】
 before 【<80>kr<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from n to 
before mc-detect: from n to 
after mc-detect: from n to 
before mc-input: from n to 
before mc-input2: from n to n
before mc-input3: from n to n
after mc-input5: from n to n
after mc-input: from n to n
before apply2 from n to n
before apply【<80>kr】
 type(c)=【0】
 before 【<80>kr<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from n to n
before mc-detect: from n to n
after mc-detect: from n to n
before mc-input: from n to n
before mc-input2: from n to n
before mc-input3: from n to n
before mc-input4: from n to n
after mc-input: from n to n
 start 【<80>kr】
 mode:【n to n】
 start error 【<80>kr】
 error2 【<80>kr】
 after error 【<80>kr】
 brefore retry : s:char=【<80>kr】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kl】
 before_getchar【<80>kl】
【after get esc】
 after_if【<80>kl】
 before_exit【<80>kl】
 after_exit【<80>kl】
is_special_key = 0
 before start_loop【<80>kl】
 after start_loop【<80>kl】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from n to 
before apply【<80>kl】
 type(c)=【0】
 before 【<80>kl<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from n to 
before mc-detect: from n to 
after mc-detect: from n to 
before mc-input: from n to 
before mc-input2: from n to n
before mc-input3: from n to n
after mc-input5: from n to n
after mc-input: from n to n
before apply2 from n to n
before apply【<80>kl】
 type(c)=【0】
 before 【<80>kl<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from n to n
before mc-detect: from n to n
after mc-detect: from n to n
before mc-input: from n to n
before mc-input2: from n to n
before mc-input3: from n to n
before mc-input4: from n to n
after mc-input: from n to n
 start 【<80>kl】
 mode:【n to n】
 start error 【<80>kl】
 error2 【<80>kl】
 after error 【<80>kl】
 brefore retry : s:char=【<80>kl】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【 】
 before_getchar【 】
【l:map】<Space>     * @=((foldclosed(line('.')) < 0) ? 'zc' : 'zo')<CR>  " 用空格键来<开>关折叠
【after get esc】
 after_if【 】
 before_exit【 】
 after_exit【 】
is_special_key = 0
 before start_loop【 】
 after start_loop【 】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from n to 
before apply【 】
 type(c)=【0】
 before 【 <80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from n to 
before mc-detect: from n to 
after mc-detect: from n to 
invalid input: from mode n to 
now mode: n
after invalid input: from mode n to 
before mc-input: from n to 
before mc-input2: from n to n
before mc-input3: from n to n
after mc-input5: from n to n
after mc-input: from n to n
before apply2 from n to n
before apply【 】
 type(c)=【0】
 before 【 <80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from n to n
before mc-detect: from n to n
after mc-detect: from n to n
invalid input: from mode n to n
now mode: n
after invalid input: from mode n to n
before mc-input: from n to n
before mc-input2: from n to n
before mc-input3: from n to n
before mc-input4: from n to n
after mc-input: from n to n
 start 【 】
 mode:【n to n】
 start error 【 】
 error2 【 】
 can't be replayed in 2cursors 【 】
 after error 【 】
 brefore retry : s:char=【 】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kr】
 before_getchar【<80>kr】
【after get esc】
 after_if【<80>kr】
 before_exit【<80>kr】
 after_exit【<80>kr】
is_special_key = 0
 before start_loop【<80>kr】
 after start_loop【<80>kr】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from n to 
before apply【<80>kr】
 type(c)=【0】
 before 【<80>kr<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from n to 
before mc-detect: from n to 
after mc-detect: from n to 
before mc-input: from n to 
before mc-input2: from n to n
before mc-input3: from n to n
after mc-input5: from n to n
after mc-input: from n to n
before apply2 from n to n
before apply【<80>kr】
 type(c)=【0】
 before 【<80>kr<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from n to n
before mc-detect: from n to n
after mc-detect: from n to n
before mc-input: from n to n
before mc-input2: from n to n
before mc-input3: from n to n
before mc-input4: from n to n
after mc-input: from n to n
 start 【<80>kr】
 mode:【n to n】
 start error 【<80>kr】
 error2 【<80>kr】
 after error 【<80>kr】
 brefore retry : s:char=【<80>kr】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【≈】
 before_getchar【≈】
【after get esc】
 after_if【≈】
 before_exit【≈】
 start 【】
 mode:【n to 】
 start error 【】
 error2 【】
 after error 【】
 brefore retry : s:char=【】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【v】
 before_getchar【v】
【after get esc】
 after_if【v】
 before_exit【v】
 after_exit【v】
is_special_key = 0
 before start_loop【v】
 after start_loop【v】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【v】
 type(c)=【0】
 before 【v<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to n
before mc-input3: from v to n
before mc-input4: from v to n
after mc-input: from v to n
 start 【v】
 mode:【v to n】
 start error 【v】
 error2 【v】
 after error 【v】
 brefore retry : s:char=【v】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80><fd>^E】
 before_getchar【<80><fd>^E】
【l:map】<S-Down>    * $<C-D>
【after get esc】
 after_if【<80><fd>^E】
 before_exit【<80><fd>^E】
 after_exit【<80><fd>^E】
is_special_key = 0
 before start_loop【<80><fd>^E】
 after start_loop【<80><fd>^E】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from n to 
before apply【<80><fd>^E】
 type(c)=【0】
 before 【<80><fd>^E<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from n to 
before mc-detect: from n to 
after mc-detect: from n to 
before mc-input: from n to 
before mc-input2: from n to n
before mc-input3: from n to n
before mc-input4: from n to n
after mc-input: from n to n
 start 【<80><fd>^E】
 mode:【n to n】
 start error 【<80><fd>^E】
 error2 【<80><fd>^E】
 after error 【<80><fd>^E】
 brefore retry : s:char=【<80><fd>^E】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80><fd>^E】
 before_getchar【<80><fd>^E】
【l:map】<S-Down>    * $<C-D>
【after get esc】
 after_if【<80><fd>^E】
 before_exit【<80><fd>^E】
 after_exit【<80><fd>^E】
is_special_key = 0
 before start_loop【<80><fd>^E】
 after start_loop【<80><fd>^E】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from n to 
before apply【<80><fd>^E】
 type(c)=【0】
 before 【<80><fd>^E<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from n to 
before mc-detect: from n to 
after mc-detect: from n to 
before mc-input: from n to 
before mc-input2: from n to n
before mc-input3: from n to n
before mc-input4: from n to n
after mc-input: from n to n
 start 【<80><fd>^E】
 mode:【n to n】
 start error 【<80><fd>^E】
 error2 【<80><fd>^E】
 after error 【<80><fd>^E】
 brefore retry : s:char=【<80><fd>^E】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80><fd>^E】
 before_getchar【<80><fd>^E】
【l:map】<S-Down>    * $<C-D>
【after get esc】
 after_if【<80><fd>^E】
 before_exit【<80><fd>^E】
 after_exit【<80><fd>^E】
is_special_key = 0
 before start_loop【<80><fd>^E】
 after start_loop【<80><fd>^E】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from n to 
before apply【<80><fd>^E】
 type(c)=【0】
 before 【<80><fd>^E<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from n to 
before mc-detect: from n to 
after mc-detect: from n to 
before mc-input: from n to 
before mc-input2: from n to n
before mc-input3: from n to n
before mc-input4: from n to n
after mc-input: from n to n
 start 【<80><fd>^E】
 mode:【n to n】
 start error 【<80><fd>^E】
 error2 【<80><fd>^E】
 after error 【<80><fd>^E】
 brefore retry : s:char=【<80><fd>^E】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80><fd>^E】
 before_getchar【<80><fd>^E】
【l:map】<S-Down>    * $<C-D>
【after get esc】
 after_if【<80><fd>^E】
 before_exit【<80><fd>^E】
 after_exit【<80><fd>^E】
is_special_key = 0
 before start_loop【<80><fd>^E】
 after start_loop【<80><fd>^E】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from n to 
before apply【<80><fd>^E】
 type(c)=【0】
 before 【<80><fd>^E<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from n to 
before mc-detect: from n to 
after mc-detect: from n to 
invalid input: from mode n to 
now mode: n
after invalid input: from mode n to 
before mc-input: from n to 
before mc-input2: from n to n
before mc-input3: from n to n
before mc-input4: from n to n
after mc-input: from n to n
 start 【<80><fd>^E】
 mode:【n to n】
 start error 【<80><fd>^E】
 error2 【<80><fd>^E】
 can't be replayed in 1cursors 【<80><fd>^E】
 after error 【<80><fd>^E】
 brefore retry : s:char=【<80><fd>^E】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80><fd>^E】
 before_getchar【<80><fd>^E】
【l:map】<S-Down>    * $<C-D>
【after get esc】
 after_if【<80><fd>^E】
 before_exit【<80><fd>^E】
 after_exit【<80><fd>^E】
is_special_key = 0
 before start_loop【<80><fd>^E】
 after start_loop【<80><fd>^E】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from n to 
before apply【<80><fd>^E】
 type(c)=【0】
 before 【<80><fd>^E<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from n to 
before mc-detect: from n to 
after mc-detect: from n to 
invalid input: from mode n to 
now mode: n
after invalid input: from mode n to 
before mc-input: from n to 
before mc-input2: from n to n
before mc-input3: from n to n
before mc-input4: from n to n
after mc-input: from n to n
 start 【<80><fd>^E】
 mode:【n to n】
 start error 【<80><fd>^E】
 error2 【<80><fd>^E】
 can't be replayed in 1cursors 【<80><fd>^E】
 after error 【<80><fd>^E】
 brefore retry : s:char=【<80><fd>^E】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80><fd>^E】
 before_getchar【<80><fd>^E】
【l:map】<S-Down>    * $<C-D>
【after get esc】
 after_if【<80><fd>^E】
 before_exit【<80><fd>^E】
 after_exit【<80><fd>^E】
is_special_key = 0
 before start_loop【<80><fd>^E】
 after start_loop【<80><fd>^E】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from n to 
before apply【<80><fd>^E】
 type(c)=【0】
 before 【<80><fd>^E<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from n to 
before mc-detect: from n to 
after mc-detect: from n to 
invalid input: from mode n to 
now mode: n
after invalid input: from mode n to 
before mc-input: from n to 
before mc-input2: from n to n
before mc-input3: from n to n
before mc-input4: from n to n
after mc-input: from n to n
 start 【<80><fd>^E】
 mode:【n to n】
 start error 【<80><fd>^E】
 error2 【<80><fd>^E】
 can't be replayed in 1cursors 【<80><fd>^E】
 after error 【<80><fd>^E】
 brefore retry : s:char=【<80><fd>^E】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80><fd>^E】
 before_getchar【<80><fd>^E】
【l:map】<S-Down>    * $<C-D>
【after get esc】
 after_if【<80><fd>^E】
 before_exit【<80><fd>^E】
 after_exit【<80><fd>^E】
is_special_key = 0
 before start_loop【<80><fd>^E】
 after start_loop【<80><fd>^E】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from n to 
before apply【<80><fd>^E】
 type(c)=【0】
 before 【<80><fd>^E<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from n to 
before mc-detect: from n to 
after mc-detect: from n to 
invalid input: from mode n to 
now mode: n
after invalid input: from mode n to 
before mc-input: from n to 
before mc-input2: from n to n
before mc-input3: from n to n
before mc-input4: from n to n
after mc-input: from n to n
 start 【<80><fd>^E】
 mode:【n to n】
 start error 【<80><fd>^E】
 error2 【<80><fd>^E】
 can't be replayed in 1cursors 【<80><fd>^E】
 after error 【<80><fd>^E】
 brefore retry : s:char=【<80><fd>^E】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80><fd>^E】
 before_getchar【<80><fd>^E】
【l:map】<S-Down>    * $<C-D>
【after get esc】
 after_if【<80><fd>^E】
 before_exit【<80><fd>^E】
 after_exit【<80><fd>^E】
is_special_key = 0
 before start_loop【<80><fd>^E】
 after start_loop【<80><fd>^E】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from n to 
before apply【<80><fd>^E】
 type(c)=【0】
 before 【<80><fd>^E<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from n to 
before mc-detect: from n to 
after mc-detect: from n to 
invalid input: from mode n to 
now mode: n
after invalid input: from mode n to 
before mc-input: from n to 
before mc-input2: from n to n
before mc-input3: from n to n
before mc-input4: from n to n
after mc-input: from n to n
 start 【<80><fd>^E】
 mode:【n to n】
 start error 【<80><fd>^E】
 error2 【<80><fd>^E】
 can't be replayed in 1cursors 【<80><fd>^E】
 after error 【<80><fd>^E】
 brefore retry : s:char=【<80><fd>^E】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80><fd>^E】
 before_getchar【<80><fd>^E】
【l:map】<S-Down>    * $<C-D>
【after get esc】
 after_if【<80><fd>^E】
 before_exit【<80><fd>^E】
 after_exit【<80><fd>^E】
is_special_key = 0
 before start_loop【<80><fd>^E】
 after start_loop【<80><fd>^E】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from n to 
before apply【<80><fd>^E】
 type(c)=【0】
 before 【<80><fd>^E<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from n to 
before mc-detect: from n to 
after mc-detect: from n to 
invalid input: from mode n to 
now mode: n
after invalid input: from mode n to 
before mc-input: from n to 
before mc-input2: from n to n
before mc-input3: from n to n
before mc-input4: from n to n
after mc-input: from n to n
 start 【<80><fd>^E】
 mode:【n to n】
 start error 【<80><fd>^E】
 error2 【<80><fd>^E】
 can't be replayed in 1cursors 【<80><fd>^E】
 after error 【<80><fd>^E】
 brefore retry : s:char=【<80><fd>^E】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80><fd>^D】
 before_getchar【<80><fd>^D】
【l:map】<S-Up>      * 0<C-U>
【after get esc】
 after_if【<80><fd>^D】
 before_exit【<80><fd>^D】
 after_exit【<80><fd>^D】
is_special_key = 0
 before start_loop【<80><fd>^D】
 after start_loop【<80><fd>^D】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from n to 
before apply【<80><fd>^D】
 type(c)=【0】
 before 【<80><fd>^D<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from n to 
before mc-detect: from n to 
after mc-detect: from n to 
before mc-input: from n to 
before mc-input2: from n to n
before mc-input3: from n to n
before mc-input4: from n to n
after mc-input: from n to n
 start 【<80><fd>^D】
 mode:【n to n】
 start error 【<80><fd>^D】
 error2 【<80><fd>^D】
 after error 【<80><fd>^D】
 brefore retry : s:char=【<80><fd>^D】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80><fd>^E】
 before_getchar【<80><fd>^E】
【l:map】<S-Down>    * $<C-D>
【after get esc】
 after_if【<80><fd>^E】
 before_exit【<80><fd>^E】
 after_exit【<80><fd>^E】
is_special_key = 0
 before start_loop【<80><fd>^E】
 after start_loop【<80><fd>^E】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from n to 
before apply【<80><fd>^E】
 type(c)=【0】
 before 【<80><fd>^E<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from n to 
before mc-detect: from n to 
after mc-detect: from n to 
before mc-input: from n to 
before mc-input2: from n to n
before mc-input3: from n to n
before mc-input4: from n to n
after mc-input: from n to n
 start 【<80><fd>^E】
 mode:【n to n】
 start error 【<80><fd>^E】
 error2 【<80><fd>^E】
 after error 【<80><fd>^E】
 brefore retry : s:char=【<80><fd>^E】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80><fd>^E】
 before_getchar【<80><fd>^E】
【l:map】<S-Down>    * $<C-D>
【after get esc】
 after_if【<80><fd>^E】
 before_exit【<80><fd>^E】
 after_exit【<80><fd>^E】
is_special_key = 0
 before start_loop【<80><fd>^E】
 after start_loop【<80><fd>^E】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from n to 
before apply【<80><fd>^E】
 type(c)=【0】
 before 【<80><fd>^E<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from n to 
before mc-detect: from n to 
after mc-detect: from n to 
invalid input: from mode n to 
now mode: n
after invalid input: from mode n to 
before mc-input: from n to 
before mc-input2: from n to n
before mc-input3: from n to n
before mc-input4: from n to n
after mc-input: from n to n
 start 【<80><fd>^E】
 mode:【n to n】
 start error 【<80><fd>^E】
 error2 【<80><fd>^E】
 can't be replayed in 1cursors 【<80><fd>^E】
 after error 【<80><fd>^E】
 brefore retry : s:char=【<80><fd>^E】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【^[】
 before_getchar【^[】
【l:map】<Esc>[4~      <End>
【get esc】
【char_mapping】
【l:map】<Esc>[4~      <End>
【char_mapping】
【l:map】<Esc>[4~      <End>
【char_mapping】
【l:map】<Esc>[4~      <End>
【char_mapping】
【l:map】<Esc>[4~      <End>
【char_mapping】
【l:map】<Esc>[4~      <End>
【char_mapping】
【l:map】<Esc>[4~      <End>
【char_mapping】
【l:map】<Esc>[4~      <End>
【char_mapping】
【l:map】<Esc>[4~      <End>
【char_mapping】
【l:map】<Esc>[4~      <End>
【char_mapping】
【l:map】<Esc>[4~      <End>
【char_mapping】
【l:map】<Esc>[4~      <End>
【char_mapping】
【l:map】<Esc>[4~      <End>
【char_mapping】
【l:map】<Esc>[4~      <End>
【char_mapping】
【l:map】<Esc>[4~      <End>
【char_mapping】
【l:map】<Esc>[4~      <End>
【char_mapping】
【l:map】<Esc>[4~      <End>
【char_mapping】
【l:map】<Esc>[4~      <End>
【after get esc】
 after_if【^[】
 before_exit【^[】
 after_exit【^[】
is_special_key = 0
 before start_loop【^[】
 after start_loop【^[】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from n to 
before apply【^[】
 type(c)=【0】
 before 【^[<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from n to 
before mc-detect: from n to 
after mc-detect: from n to 
before mc-input: from n to 
before mc-input2: from n to n
before mc-input3: from n to n
before mc-input4: from n to n
after mc-input: from n to n
 start 【^[】
 mode:【n to n】
 start error 【^[】
 error2 【^[】
 after error 【^[】
 brefore retry : s:char=【^[】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【v】
 before_getchar【v】
【after get esc】
 after_if【v】
 before_exit【v】
 after_exit【v】
is_special_key = 0
 before start_loop【v】
 after start_loop【v】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from n to 
before apply【v】
 type(c)=【0】
 before 【v<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from n to 
before mc-detect: from n to 
after mc-detect: from n to 
before mc-input: from n to 
before mc-input2: from n to v
before mc-input3: from n to v
before mc-input4: from n to v
after mc-input: from n to v
 start 【v】
 mode:【n to v】
 start error 【v】
 error2 【v】
 after error 【v】
 brefore retry : s:char=【v】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80><fd>^E】
 before_getchar【<80><fd>^E】
【l:map】<S-Down>    * $<C-D>
【after get esc】
 after_if【<80><fd>^E】
 before_exit【<80><fd>^E】
 after_exit【<80><fd>^E】
is_special_key = 0
 before start_loop【<80><fd>^E】
 after start_loop【<80><fd>^E】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80><fd>^E】
 type(c)=【0】
 before 【<80><fd>^E<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
invalid input: from mode v to 
now mode: v
after invalid input: from mode v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80><fd>^E】
 mode:【v to v】
 start error 【<80><fd>^E】
 error2 【<80><fd>^E】
 can't be replayed in 1cursors 【<80><fd>^E】
 after error 【<80><fd>^E】
 brefore retry : s:char=【<80><fd>^E】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80><fd>,】
 before_getchar【<80><fd>,】
【l:map】<LeftMouse> * <Esc>:MarkClear<CR><LeftMouse>
【after get esc】
 after_if【<80><fd>,】
 before_exit【<80><fd>,】
 after_exit【<80><fd>,】
is_special_key = 0
 before start_loop【<80><fd>,】
 after start_loop【<80><fd>,】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80><fd>,】
 type(c)=【0】
 before 【<80><fd>,<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to n
before mc-input3: from v to n
before mc-input4: from v to n
after mc-input: from v to n
 start 【<80><fd>,】
 mode:【v to n】
 start error 【<80><fd>,】
 error2 【<80><fd>,】
 after error 【<80><fd>,】
 brefore retry : s:char=【<80><fd>,】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80><fd>.】
 before_getchar【<80><fd>.】
【l:map】<Plug>(multiple-cursors-new-word) * :<C-U>call multiple_cursors#new('v', 1)<CR>
【after get esc】
 after_if【<80><fd>.】
 before_exit【<80><fd>.】
 after_exit【<80><fd>.】
is_special_key = 0
 before start_loop【<80><fd>.】
 after start_loop【<80><fd>.】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from n to 
before apply【<80><fd>.】
 type(c)=【0】
 before 【<80><fd>.<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from n to 
before mc-detect: from n to 
after mc-detect: from n to 
before mc-input: from n to 
before mc-input2: from n to n
before mc-input3: from n to n
before mc-input4: from n to n
after mc-input: from n to n
 start 【<80><fd>.】
 mode:【n to n】
 start error 【<80><fd>.】
 error2 【<80><fd>.】
 after error 【<80><fd>.】
 brefore retry : s:char=【<80><fd>.】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80><fd>,】
 before_getchar【<80><fd>,】
【l:map】<LeftMouse> * :MarkClear<CR><LeftMouse>
【after get esc】
 after_if【<80><fd>,】
 before_exit【<80><fd>,】
 after_exit【<80><fd>,】
is_special_key = 0
 before start_loop【<80><fd>,】
 after start_loop【<80><fd>,】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from n to 
before apply【<80><fd>,】
 type(c)=【0】
 before 【<80><fd>,<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from n to 
before mc-detect: from n to 
after mc-detect: from n to 
before mc-input: from n to 
before mc-input2: from n to n
before mc-input3: from n to n
before mc-input4: from n to n
after mc-input: from n to n
 start 【<80><fd>,】
 mode:【n to n】
 start error 【<80><fd>,】
 error2 【<80><fd>,】
 after error 【<80><fd>,】
 brefore retry : s:char=【<80><fd>,】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80><fd>.】
 before_getchar【<80><fd>.】
【l:map】<Plug>(multiple-cursors-new-word) * :<C-U>call multiple_cursors#new('v', 1)<CR>
【after get esc】
 after_if【<80><fd>.】
 before_exit【<80><fd>.】
 after_exit【<80><fd>.】
is_special_key = 0
 before start_loop【<80><fd>.】
 after start_loop【<80><fd>.】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from n to 
before apply【<80><fd>.】
 type(c)=【0】
 before 【<80><fd>.<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from n to 
before mc-detect: from n to 
after mc-detect: from n to 
before mc-input: from n to 
before mc-input2: from n to v
before mc-input3: from n to v
before mc-input4: from n to v
after mc-input: from n to v
 start 【<80><fd>.】
 mode:【n to v】
 start error 【<80><fd>.】
 error2 【<80><fd>.】
 after error 【<80><fd>.】
 brefore retry : s:char=【<80><fd>.】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【≈】
 before_getchar【≈】
【after get esc】
 after_if【≈】
 before_exit【≈】
 start 【】
 mode:【v to 】
 start error 【】
 error2 【】
 after error 【】
 brefore retry : s:char=【】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【^D】
 before_getchar【^D】
【l:map】<C-D>       * :<C-U>stopinsert<CR>gv:<C-U>call multiple_cursors#new("v", 0)<CR>
【after get esc】
 after_if【^D】
 before_exit【^D】
 after_exit【^D】
is_special_key = 1
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-new-word)】
 feedkesys s:saved_keys=【】
 start 【^D】
 mode:【v to 】
 start error 【^D】
 error2 【^D】
 after error 【^D】
 brefore retry : s:char=【^D】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80><fd>^E】
 before_getchar【<80><fd>^E】
【l:map】<S-Down>    * $<C-D>
【after get esc】
 after_if【<80><fd>^E】
 before_exit【<80><fd>^E】
 after_exit【<80><fd>^E】
is_special_key = 0
 before start_loop【<80><fd>^E】
 after start_loop【<80><fd>^E】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80><fd>^E】
 type(c)=【0】
 before 【<80><fd>^E<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80><fd>^E】
 mode:【v to v】
 start error 【<80><fd>^E】
 error2 【<80><fd>^E】
 after error 【<80><fd>^E】
 brefore retry : s:char=【<80><fd>^E】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80><fd>^E】
 before_getchar【<80><fd>^E】
【l:map】<S-Down>    * $<C-D>
【after get esc】
 after_if【<80><fd>^E】
 before_exit【<80><fd>^E】
 after_exit【<80><fd>^E】
is_special_key = 0
 before start_loop【<80><fd>^E】
 after start_loop【<80><fd>^E】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80><fd>^E】
 type(c)=【0】
 before 【<80><fd>^E<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80><fd>^E】
 mode:【v to v】
 start error 【<80><fd>^E】
 error2 【<80><fd>^E】
 after error 【<80><fd>^E】
 brefore retry : s:char=【<80><fd>^E】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80><fd>^E】
 before_getchar【<80><fd>^E】
【l:map】<S-Down>    * $<C-D>
【after get esc】
 after_if【<80><fd>^E】
 before_exit【<80><fd>^E】
 after_exit【<80><fd>^E】
is_special_key = 0
 before start_loop【<80><fd>^E】
 after start_loop【<80><fd>^E】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80><fd>^E】
 type(c)=【0】
 before 【<80><fd>^E<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
invalid input: from mode v to 
now mode: v
after invalid input: from mode v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80><fd>^E】
 mode:【v to v】
 start error 【<80><fd>^E】
 error2 【<80><fd>^E】
 can't be replayed in 1cursors 【<80><fd>^E】
 after error 【<80><fd>^E】
 brefore retry : s:char=【<80><fd>^E】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80><fd>^E】
 before_getchar【<80><fd>^E】
【l:map】<S-Down>    * $<C-D>
【after get esc】
 after_if【<80><fd>^E】
 before_exit【<80><fd>^E】
 after_exit【<80><fd>^E】
is_special_key = 0
 before start_loop【<80><fd>^E】
 after start_loop【<80><fd>^E】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80><fd>^E】
 type(c)=【0】
 before 【<80><fd>^E<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
invalid input: from mode v to 
now mode: v
after invalid input: from mode v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80><fd>^E】
 mode:【v to v】
 start error 【<80><fd>^E】
 error2 【<80><fd>^E】
 can't be replayed in 1cursors 【<80><fd>^E】
 after error 【<80><fd>^E】
 brefore retry : s:char=【<80><fd>^E】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80><fd>^E】
 before_getchar【<80><fd>^E】
【l:map】<S-Down>    * $<C-D>
【after get esc】
 after_if【<80><fd>^E】
 before_exit【<80><fd>^E】
 after_exit【<80><fd>^E】
is_special_key = 0
 before start_loop【<80><fd>^E】
 after start_loop【<80><fd>^E】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80><fd>^E】
 type(c)=【0】
 before 【<80><fd>^E<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
invalid input: from mode v to 
now mode: v
after invalid input: from mode v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80><fd>^E】
 mode:【v to v】
 start error 【<80><fd>^E】
 error2 【<80><fd>^E】
 can't be replayed in 1cursors 【<80><fd>^E】
 after error 【<80><fd>^E】
 brefore retry : s:char=【<80><fd>^E】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【^[】
 before_getchar【^[】
【l:map】<Esc>[4~      <End>
【get esc】
【char_mapping】
【l:map】<Esc>[4~      <End>
【char_mapping】
【l:map】<Esc>[4~      <End>
【char_mapping】
【l:map】<Esc>[4~      <End>
【char_mapping】
【l:map】<Esc>[4~      <End>
【char_mapping】
【l:map】<Esc>[4~      <End>
【char_mapping】
【l:map】<Esc>[4~      <End>
【char_mapping】
【l:map】<Esc>[4~      <End>
【char_mapping】
【l:map】<Esc>[4~      <End>
【char_mapping】
【l:map】<Esc>[4~      <End>
【char_mapping】
【l:map】<Esc>[4~      <End>
【char_mapping】
【l:map】<Esc>[4~      <End>
【char_mapping】
【l:map】<Esc>[4~      <End>
【char_mapping】
【l:map】<Esc>[4~      <End>
【char_mapping】
【l:map】<Esc>[4~      <End>
【char_mapping】
【l:map】<Esc>[4~      <End>
【char_mapping】
【l:map】<Esc>[4~      <End>
【char_mapping】
【l:map】<Esc>[4~      <End>
【char_mapping】
【l:map】<Esc>[4~      <End>
【after get esc】
 after_if【^[】
 before_exit【^[】
 after_exit【^[】
is_special_key = 0
 before start_loop【^[】
 after start_loop【^[】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【^[】
 type(c)=【0】
 before 【^[<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to n
before mc-input3: from v to n
before mc-input4: from v to n
after mc-input: from v to n
 start 【^[】
 mode:【v to n】
 start error 【^[】
 error2 【^[】
 after error 【^[】
 brefore retry : s:char=【^[】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【^W】
 before_getchar【^W】
【l:map】<C-W>       * :q<CR>
【after get esc】
 after_if【^W】
 before_exit【^W】
 after_exit【^W】
is_special_key = 0
 before start_loop【^W】
 after start_loop【^W】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from n to 
before apply【^W】
 type(c)=【0】
 before 【^W<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from n to 
before mc-detect: from n to 
after mc-detect: from n to 
invalid input: from mode n to 
now mode: n
after invalid input: from mode n to 
before mc-input: from n to 
before mc-input2: from n to n
before mc-input3: from n to n
before mc-input4: from n to n
after mc-input: from n to n
 start 【^W】
 mode:【n to n】
 start error 【^W】
 error2 【^W】
 can't be replayed in 1cursors 【^W】
 after error 【^W】
 brefore retry : s:char=【^W】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【≈】
 before_getchar【≈】
【after get esc】
 after_if【≈】
 before_exit【≈】
 start 【】
 mode:【n to 】
 start error 【】
 error2 【】
 after error 【】
 brefore retry : s:char=【】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【≈】
 before_getchar【≈】
【after get esc】
 after_if【≈】
 before_exit【≈】
 start 【】
 mode:【n to 】
 start error 【】
 error2 【】
 after error 【】
 brefore retry : s:char=【】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kN】
 before_getchar【<80>kN】
【l:map】<PageDown>  * z+
【after get esc】
 after_if【<80>kN】
 before_exit【<80>kN】
 after_exit【<80>kN】
is_special_key = 0
 before start_loop【<80>kN】
 after start_loop【<80>kN】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kN】
 type(c)=【0】
 before 【<80>kN<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kN】
 mode:【v to v】
 start error 【<80>kN】
 error2 【<80>kN】
 after error 【<80>kN】
 brefore retry : s:char=【<80>kN】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kN】
 before_getchar【<80>kN】
【l:map】<PageDown>  * z+
【after get esc】
 after_if【<80>kN】
 before_exit【<80>kN】
 after_exit【<80>kN】
is_special_key = 0
 before start_loop【<80>kN】
 after start_loop【<80>kN】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kN】
 type(c)=【0】
 before 【<80>kN<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kN】
 mode:【v to v】
 start error 【<80>kN】
 error2 【<80>kN】
 after error 【<80>kN】
 brefore retry : s:char=【<80>kN】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kN】
 before_getchar【<80>kN】
【l:map】<PageDown>  * z+
【after get esc】
 after_if【<80>kN】
 before_exit【<80>kN】
 after_exit【<80>kN】
is_special_key = 0
 before start_loop【<80>kN】
 after start_loop【<80>kN】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kN】
 type(c)=【0】
 before 【<80>kN<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kN】
 mode:【v to v】
 start error 【<80>kN】
 error2 【<80>kN】
 after error 【<80>kN】
 brefore retry : s:char=【<80>kN】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kN】
 before_getchar【<80>kN】
【l:map】<PageDown>  * z+
【after get esc】
 after_if【<80>kN】
 before_exit【<80>kN】
 after_exit【<80>kN】
is_special_key = 0
 before start_loop【<80>kN】
 after start_loop【<80>kN】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kN】
 type(c)=【0】
 before 【<80>kN<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kN】
 mode:【v to v】
 start error 【<80>kN】
 error2 【<80>kN】
 after error 【<80>kN】
 brefore retry : s:char=【<80>kN】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kN】
 before_getchar【<80>kN】
【l:map】<PageDown>  * z+
【after get esc】
 after_if【<80>kN】
 before_exit【<80>kN】
 after_exit【<80>kN】
is_special_key = 0
 before start_loop【<80>kN】
 after start_loop【<80>kN】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kN】
 type(c)=【0】
 before 【<80>kN<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kN】
 mode:【v to v】
 start error 【<80>kN】
 error2 【<80>kN】
 after error 【<80>kN】
 brefore retry : s:char=【<80>kN】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>K4】
 before_getchar【<80>K4】
【after get esc】
 after_if【<80>K4】
 before_exit【<80>K4】
 after_exit【<80>K4】
is_special_key = 0
 before start_loop【<80>K4】
 after start_loop【<80>K4】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>K4】
 type(c)=【0】
 before 【<80>K4<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>K4】
 mode:【v to v】
 start error 【<80>K4】
 error2 【<80>K4】
 after error 【<80>K4】
 brefore retry : s:char=【<80>K4】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【^[】
 before_getchar【^[】
【l:map】<Esc>[4~      <End>
【get esc】
【char_mapping】
【l:map】<Esc>[4~      <End>
【char_mapping】
 before_subs【^[<80><fd>,】
 after_subs【】
【after get esc】
 after_if【】
 before_exit【】
 after_exit【】
is_special_key = 0
 before start_loop【】
 after start_loop【】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【】
 mode:【v to v】
 start error 【】
 error2 【】
 after error 【】
 brefore retry : s:char=【】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80><fd>.】
 before_getchar【<80><fd>.】
【l:map】<Plug>(multiple-cursors-wait) * :<C-U>call <SNR>65_wait_for_user_input('')<CR>
【after get esc】
 after_if【<80><fd>.】
 before_exit【<80><fd>.】
 after_exit【<80><fd>.】
is_special_key = 0
 before start_loop【<80><fd>.】
 after start_loop【<80><fd>.】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80><fd>.】
 type(c)=【0】
 before 【<80><fd>.<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80><fd>.】
 mode:【v to v】
 start error 【<80><fd>.】
 error2 【<80><fd>.】
 after error 【<80><fd>.】
 brefore retry : s:char=【<80><fd>.】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80><fd>,】
 before_getchar【<80><fd>,】
【l:map】<LeftMouse> * <Esc>:MarkClear<CR><LeftMouse>
【after get esc】
 after_if【<80><fd>,】
 before_exit【<80><fd>,】
 after_exit【<80><fd>,】
is_special_key = 0
 before start_loop【<80><fd>,】
 after start_loop【<80><fd>,】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80><fd>,】
 type(c)=【0】
 before 【<80><fd>,<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to n
before mc-input3: from v to n
before mc-input4: from v to n
after mc-input: from v to n
 start 【<80><fd>,】
 mode:【v to n】
 start error 【<80><fd>,】
 error2 【<80><fd>,】
 after error 【<80><fd>,】
 brefore retry : s:char=【<80><fd>,】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80><fd>.】
 before_getchar【<80><fd>.】
【l:map】<Plug>(multiple-cursors-new-word) * :<C-U>call multiple_cursors#new('v', 1)<CR>
【after get esc】
 after_if【<80><fd>.】
 before_exit【<80><fd>.】
 after_exit【<80><fd>.】
is_special_key = 0
 before start_loop【<80><fd>.】
 after start_loop【<80><fd>.】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from n to 
before apply【<80><fd>.】
 type(c)=【0】
 before 【<80><fd>.<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from n to 
before mc-detect: from n to 
after mc-detect: from n to 
before mc-input: from n to 
before mc-input2: from n to n
before mc-input3: from n to n
before mc-input4: from n to n
after mc-input: from n to n
 start 【<80><fd>.】
 mode:【n to n】
 start error 【<80><fd>.】
 error2 【<80><fd>.】
 after error 【<80><fd>.】
 brefore retry : s:char=【<80><fd>.】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【^D】
 before_getchar【^D】
【l:map】<C-D>       * :call multiple_cursors#new("n", 1)<CR>
【after get esc】
 after_if【^D】
 before_exit【^D】
 after_exit【^D】
is_special_key = 1
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-new-word)】
 feedkesys s:saved_keys=【】
 start 【】
 mode:【n to 】
 start error 【】
 error2 【】
 after error 【】
 brefore retry : s:char=【】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【≈】
 before_getchar【≈】
【after get esc】
 after_if【≈】
 before_exit【≈】
 start 【】
 mode:【n to 】
 start error 【】
 error2 【】
 after error 【】
 brefore retry : s:char=【】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kN】
 before_getchar【<80>kN】
【l:map】<PageDown>  * z+
【after get esc】
 after_if【<80>kN】
 before_exit【<80>kN】
 after_exit【<80>kN】
is_special_key = 0
 before start_loop【<80>kN】
 after start_loop【<80>kN】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kN】
 type(c)=【0】
 before 【<80>kN<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kN】
 mode:【v to v】
 start error 【<80>kN】
 error2 【<80>kN】
 after error 【<80>kN】
 brefore retry : s:char=【<80>kN】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kN】
 before_getchar【<80>kN】
【l:map】<PageDown>  * z+
【after get esc】
 after_if【<80>kN】
 before_exit【<80>kN】
 after_exit【<80>kN】
is_special_key = 0
 before start_loop【<80>kN】
 after start_loop【<80>kN】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kN】
 type(c)=【0】
 before 【<80>kN<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kN】
 mode:【v to v】
 start error 【<80>kN】
 error2 【<80>kN】
 after error 【<80>kN】
 brefore retry : s:char=【<80>kN】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>K4】
 before_getchar【<80>K4】
【after get esc】
 after_if【<80>K4】
 before_exit【<80>K4】
 after_exit【<80>K4】
is_special_key = 0
 before start_loop【<80>K4】
 after start_loop【<80>K4】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>K4】
 type(c)=【0】
 before 【<80>K4<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>K4】
 mode:【v to v】
 start error 【<80>K4】
 error2 【<80>K4】
 after error 【<80>K4】
 brefore retry : s:char=【<80>K4】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【^D】
 before_getchar【^D】
【l:map】<C-D>       * :<C-U>stopinsert<CR>gv:<C-U>call multiple_cursors#new("v", 0)<CR>
【after get esc】
 after_if【^D】
 before_exit【^D】
 after_exit【^D】
is_special_key = 1
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-new-word)】
 feedkesys s:saved_keys=【】
 start 【】
 mode:【v to 】
 start error 【】
 error2 【】
 after error 【】
 brefore retry : s:char=【】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【≈】
 before_getchar【≈】
【after get esc】
 after_if【≈】
 before_exit【≈】
 start 【】
 mode:【n to 】
 start error 【】
 error2 【】
 after error 【】
 brefore retry : s:char=【】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80><fd>^E】
 before_getchar【<80><fd>^E】
【l:map】<S-Down>    * $<C-D>
【after get esc】
 after_if【<80><fd>^E】
 before_exit【<80><fd>^E】
 after_exit【<80><fd>^E】
is_special_key = 0
 before start_loop【<80><fd>^E】
 after start_loop【<80><fd>^E】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80><fd>^E】
 type(c)=【0】
 before 【<80><fd>^E<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80><fd>^E】
 mode:【v to v】
 start error 【<80><fd>^E】
 error2 【<80><fd>^E】
 after error 【<80><fd>^E】
 brefore retry : s:char=【<80><fd>^E】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80><fd>^E】
 before_getchar【<80><fd>^E】
【l:map】<S-Down>    * $<C-D>
【after get esc】
 after_if【<80><fd>^E】
 before_exit【<80><fd>^E】
 after_exit【<80><fd>^E】
is_special_key = 0
 before start_loop【<80><fd>^E】
 after start_loop【<80><fd>^E】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80><fd>^E】
 type(c)=【0】
 before 【<80><fd>^E<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80><fd>^E】
 mode:【v to v】
 start error 【<80><fd>^E】
 error2 【<80><fd>^E】
 after error 【<80><fd>^E】
 brefore retry : s:char=【<80><fd>^E】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80><fd>^E】
 before_getchar【<80><fd>^E】
【l:map】<S-Down>    * $<C-D>
【after get esc】
 after_if【<80><fd>^E】
 before_exit【<80><fd>^E】
 after_exit【<80><fd>^E】
is_special_key = 0
 before start_loop【<80><fd>^E】
 after start_loop【<80><fd>^E】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80><fd>^E】
 type(c)=【0】
 before 【<80><fd>^E<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
invalid input: from mode v to 
now mode: v
after invalid input: from mode v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80><fd>^E】
 mode:【v to v】
 start error 【<80><fd>^E】
 error2 【<80><fd>^E】
 can't be replayed in 1cursors 【<80><fd>^E】
 after error 【<80><fd>^E】
 brefore retry : s:char=【<80><fd>^E】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>K4】
 before_getchar【<80>K4】
【after get esc】
 after_if【<80>K4】
 before_exit【<80>K4】
 after_exit【<80>K4】
is_special_key = 0
 before start_loop【<80>K4】
 after start_loop【<80>K4】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>K4】
 type(c)=【0】
 before 【<80>K4<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>K4】
 mode:【v to v】
 start error 【<80>K4】
 error2 【<80>K4】
 after error 【<80>K4】
 brefore retry : s:char=【<80>K4】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【≈】
 before_getchar【≈】
【after get esc】
 after_if【≈】
 before_exit【≈】
 start 【】
 mode:【 to 】
 start error 【】
 error2 【】
 after error 【】
 brefore retry : s:char=【】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kN】
 before_getchar【<80>kN】
【l:map】<PageDown>  * z+$
【after get esc】
 after_if【<80>kN】
 before_exit【<80>kN】
 after_exit【<80>kN】
is_special_key = 0
 before start_loop【<80>kN】
 after start_loop【<80>kN】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kN】
 type(c)=【0】
 before 【<80>kN<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kN】
 mode:【v to v】
 start error 【<80>kN】
 error2 【<80>kN】
 after error 【<80>kN】
 brefore retry : s:char=【<80>kN】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kN】
 before_getchar【<80>kN】
【l:map】<PageDown>  * z+$
【after get esc】
 after_if【<80>kN】
 before_exit【<80>kN】
 after_exit【<80>kN】
is_special_key = 0
 before start_loop【<80>kN】
 after start_loop【<80>kN】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kN】
 type(c)=【0】
 before 【<80>kN<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kN】
 mode:【v to v】
 start error 【<80>kN】
 error2 【<80>kN】
 after error 【<80>kN】
 brefore retry : s:char=【<80>kN】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kN】
 before_getchar【<80>kN】
【l:map】<PageDown>  * z+$
【after get esc】
 after_if【<80>kN】
 before_exit【<80>kN】
 after_exit【<80>kN】
is_special_key = 0
 before start_loop【<80>kN】
 after start_loop【<80>kN】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kN】
 type(c)=【0】
 before 【<80>kN<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kN】
 mode:【v to v】
 start error 【<80>kN】
 error2 【<80>kN】
 after error 【<80>kN】
 brefore retry : s:char=【<80>kN】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kN】
 before_getchar【<80>kN】
【l:map】<PageDown>  * z+$
【after get esc】
 after_if【<80>kN】
 before_exit【<80>kN】
 after_exit【<80>kN】
is_special_key = 0
 before start_loop【<80>kN】
 after start_loop【<80>kN】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kN】
 type(c)=【0】
 before 【<80>kN<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kN】
 mode:【v to v】
 start error 【<80>kN】
 error2 【<80>kN】
 after error 【<80>kN】
 brefore retry : s:char=【<80>kN】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kN】
 before_getchar【<80>kN】
【l:map】<PageDown>  * z+$
【after get esc】
 after_if【<80>kN】
 before_exit【<80>kN】
 after_exit【<80>kN】
is_special_key = 0
 before start_loop【<80>kN】
 after start_loop【<80>kN】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kN】
 type(c)=【0】
 before 【<80>kN<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kN】
 mode:【v to v】
 start error 【<80>kN】
 error2 【<80>kN】
 after error 【<80>kN】
 brefore retry : s:char=【<80>kN】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kN】
 before_getchar【<80>kN】
【l:map】<PageDown>  * z+$
【after get esc】
 after_if【<80>kN】
 before_exit【<80>kN】
 after_exit【<80>kN】
is_special_key = 0
 before start_loop【<80>kN】
 after start_loop【<80>kN】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kN】
 type(c)=【0】
 before 【<80>kN<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kN】
 mode:【v to v】
 start error 【<80>kN】
 error2 【<80>kN】
 after error 【<80>kN】
 brefore retry : s:char=【<80>kN】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kN】
 before_getchar【<80>kN】
【l:map】<PageDown>  * z+$
【after get esc】
 after_if【<80>kN】
 before_exit【<80>kN】
 after_exit【<80>kN】
is_special_key = 0
 before start_loop【<80>kN】
 after start_loop【<80>kN】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kN】
 type(c)=【0】
 before 【<80>kN<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kN】
 mode:【v to v】
 start error 【<80>kN】
 error2 【<80>kN】
 after error 【<80>kN】
 brefore retry : s:char=【<80>kN】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kN】
 before_getchar【<80>kN】
【l:map】<PageDown>  * z+$
【after get esc】
 after_if【<80>kN】
 before_exit【<80>kN】
 after_exit【<80>kN】
is_special_key = 0
 before start_loop【<80>kN】
 after start_loop【<80>kN】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kN】
 type(c)=【0】
 before 【<80>kN<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kN】
 mode:【v to v】
 start error 【<80>kN】
 error2 【<80>kN】
 after error 【<80>kN】
 brefore retry : s:char=【<80>kN】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kN】
 before_getchar【<80>kN】
【l:map】<PageDown>  * z+$
【after get esc】
 after_if【<80>kN】
 before_exit【<80>kN】
 after_exit【<80>kN】
is_special_key = 0
 before start_loop【<80>kN】
 after start_loop【<80>kN】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kN】
 type(c)=【0】
 before 【<80>kN<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kN】
 mode:【v to v】
 start error 【<80>kN】
 error2 【<80>kN】
 after error 【<80>kN】
 brefore retry : s:char=【<80>kN】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kN】
 before_getchar【<80>kN】
【l:map】<PageDown>  * z+$
【after get esc】
 after_if【<80>kN】
 before_exit【<80>kN】
 after_exit【<80>kN】
is_special_key = 0
 before start_loop【<80>kN】
 after start_loop【<80>kN】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kN】
 type(c)=【0】
 before 【<80>kN<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kN】
 mode:【v to v】
 start error 【<80>kN】
 error2 【<80>kN】
 after error 【<80>kN】
 brefore retry : s:char=【<80>kN】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kN】
 before_getchar【<80>kN】
【l:map】<PageDown>  * z+$
【after get esc】
 after_if【<80>kN】
 before_exit【<80>kN】
 after_exit【<80>kN】
is_special_key = 0
 before start_loop【<80>kN】
 after start_loop【<80>kN】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kN】
 type(c)=【0】
 before 【<80>kN<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kN】
 mode:【v to v】
 start error 【<80>kN】
 error2 【<80>kN】
 after error 【<80>kN】
 brefore retry : s:char=【<80>kN】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kN】
 before_getchar【<80>kN】
【l:map】<PageDown>  * z+$
【after get esc】
 after_if【<80>kN】
 before_exit【<80>kN】
 after_exit【<80>kN】
is_special_key = 0
 before start_loop【<80>kN】
 after start_loop【<80>kN】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kN】
 type(c)=【0】
 before 【<80>kN<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kN】
 mode:【v to v】
 start error 【<80>kN】
 error2 【<80>kN】
 after error 【<80>kN】
 brefore retry : s:char=【<80>kN】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kN】
 before_getchar【<80>kN】
【l:map】<PageDown>  * z+$
【after get esc】
 after_if【<80>kN】
 before_exit【<80>kN】
 after_exit【<80>kN】
is_special_key = 0
 before start_loop【<80>kN】
 after start_loop【<80>kN】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kN】
 type(c)=【0】
 before 【<80>kN<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kN】
 mode:【v to v】
 start error 【<80>kN】
 error2 【<80>kN】
 after error 【<80>kN】
 brefore retry : s:char=【<80>kN】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kN】
 before_getchar【<80>kN】
【l:map】<PageDown>  * z+$
【after get esc】
 after_if【<80>kN】
 before_exit【<80>kN】
 after_exit【<80>kN】
is_special_key = 0
 before start_loop【<80>kN】
 after start_loop【<80>kN】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kN】
 type(c)=【0】
 before 【<80>kN<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kN】
 mode:【v to v】
 start error 【<80>kN】
 error2 【<80>kN】
 after error 【<80>kN】
 brefore retry : s:char=【<80>kN】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kN】
 before_getchar【<80>kN】
【l:map】<PageDown>  * z+$
【after get esc】
 after_if【<80>kN】
 before_exit【<80>kN】
 after_exit【<80>kN】
is_special_key = 0
 before start_loop【<80>kN】
 after start_loop【<80>kN】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kN】
 type(c)=【0】
 before 【<80>kN<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kN】
 mode:【v to v】
 start error 【<80>kN】
 error2 【<80>kN】
 after error 【<80>kN】
 brefore retry : s:char=【<80>kN】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kN】
 before_getchar【<80>kN】
【l:map】<PageDown>  * z+$
【after get esc】
 after_if【<80>kN】
 before_exit【<80>kN】
 after_exit【<80>kN】
is_special_key = 0
 before start_loop【<80>kN】
 after start_loop【<80>kN】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kN】
 type(c)=【0】
 before 【<80>kN<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kN】
 mode:【v to v】
 start error 【<80>kN】
 error2 【<80>kN】
 after error 【<80>kN】
 brefore retry : s:char=【<80>kN】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kN】
 before_getchar【<80>kN】
【l:map】<PageDown>  * z+$
【after get esc】
 after_if【<80>kN】
 before_exit【<80>kN】
 after_exit【<80>kN】
is_special_key = 0
 before start_loop【<80>kN】
 after start_loop【<80>kN】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kN】
 type(c)=【0】
 before 【<80>kN<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kN】
 mode:【v to v】
 start error 【<80>kN】
 error2 【<80>kN】
 after error 【<80>kN】
 brefore retry : s:char=【<80>kN】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kN】
 before_getchar【<80>kN】
【l:map】<PageDown>  * z+$
【after get esc】
 after_if【<80>kN】
 before_exit【<80>kN】
 after_exit【<80>kN】
is_special_key = 0
 before start_loop【<80>kN】
 after start_loop【<80>kN】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kN】
 type(c)=【0】
 before 【<80>kN<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kN】
 mode:【v to v】
 start error 【<80>kN】
 error2 【<80>kN】
 after error 【<80>kN】
 brefore retry : s:char=【<80>kN】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kN】
 before_getchar【<80>kN】
【l:map】<PageDown>  * z+$
【after get esc】
 after_if【<80>kN】
 before_exit【<80>kN】
 after_exit【<80>kN】
is_special_key = 0
 before start_loop【<80>kN】
 after start_loop【<80>kN】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kN】
 type(c)=【0】
 before 【<80>kN<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kN】
 mode:【v to v】
 start error 【<80>kN】
 error2 【<80>kN】
 after error 【<80>kN】
 brefore retry : s:char=【<80>kN】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kN】
 before_getchar【<80>kN】
【l:map】<PageDown>  * z+$
【after get esc】
 after_if【<80>kN】
 before_exit【<80>kN】
 after_exit【<80>kN】
is_special_key = 0
 before start_loop【<80>kN】
 after start_loop【<80>kN】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kN】
 type(c)=【0】
 before 【<80>kN<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kN】
 mode:【v to v】
 start error 【<80>kN】
 error2 【<80>kN】
 after error 【<80>kN】
 brefore retry : s:char=【<80>kN】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kN】
 before_getchar【<80>kN】
【l:map】<PageDown>  * z+$
【after get esc】
 after_if【<80>kN】
 before_exit【<80>kN】
 after_exit【<80>kN】
is_special_key = 0
 before start_loop【<80>kN】
 after start_loop【<80>kN】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kN】
 type(c)=【0】
 before 【<80>kN<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kN】
 mode:【v to v】
 start error 【<80>kN】
 error2 【<80>kN】
 after error 【<80>kN】
 brefore retry : s:char=【<80>kN】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kN】
 before_getchar【<80>kN】
【l:map】<PageDown>  * z+$
【after get esc】
 after_if【<80>kN】
 before_exit【<80>kN】
 after_exit【<80>kN】
is_special_key = 0
 before start_loop【<80>kN】
 after start_loop【<80>kN】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kN】
 type(c)=【0】
 before 【<80>kN<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kN】
 mode:【v to v】
 start error 【<80>kN】
 error2 【<80>kN】
 after error 【<80>kN】
 brefore retry : s:char=【<80>kN】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kN】
 before_getchar【<80>kN】
【l:map】<PageDown>  * z+$
【after get esc】
 after_if【<80>kN】
 before_exit【<80>kN】
 after_exit【<80>kN】
is_special_key = 0
 before start_loop【<80>kN】
 after start_loop【<80>kN】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kN】
 type(c)=【0】
 before 【<80>kN<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kN】
 mode:【v to v】
 start error 【<80>kN】
 error2 【<80>kN】
 after error 【<80>kN】
 brefore retry : s:char=【<80>kN】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kN】
 before_getchar【<80>kN】
【l:map】<PageDown>  * z+$
【after get esc】
 after_if【<80>kN】
 before_exit【<80>kN】
 after_exit【<80>kN】
is_special_key = 0
 before start_loop【<80>kN】
 after start_loop【<80>kN】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kN】
 type(c)=【0】
 before 【<80>kN<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kN】
 mode:【v to v】
 start error 【<80>kN】
 error2 【<80>kN】
 after error 【<80>kN】
 brefore retry : s:char=【<80>kN】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kN】
 before_getchar【<80>kN】
【l:map】<PageDown>  * z+$
【after get esc】
 after_if【<80>kN】
 before_exit【<80>kN】
 after_exit【<80>kN】
is_special_key = 0
 before start_loop【<80>kN】
 after start_loop【<80>kN】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kN】
 type(c)=【0】
 before 【<80>kN<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kN】
 mode:【v to v】
 start error 【<80>kN】
 error2 【<80>kN】
 after error 【<80>kN】
 brefore retry : s:char=【<80>kN】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80><fd>^E】
 before_getchar【<80><fd>^E】
【l:map】<S-Down>    * $<C-D>
【after get esc】
 after_if【<80><fd>^E】
 before_exit【<80><fd>^E】
 after_exit【<80><fd>^E】
is_special_key = 0
 before start_loop【<80><fd>^E】
 after start_loop【<80><fd>^E】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80><fd>^E】
 type(c)=【0】
 before 【<80><fd>^E<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80><fd>^E】
 mode:【v to v】
 start error 【<80><fd>^E】
 error2 【<80><fd>^E】
 after error 【<80><fd>^E】
 brefore retry : s:char=【<80><fd>^E】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kN】
 before_getchar【<80>kN】
【l:map】<PageDown>  * z+$
【after get esc】
 after_if【<80>kN】
 before_exit【<80>kN】
 after_exit【<80>kN】
is_special_key = 0
 before start_loop【<80>kN】
 after start_loop【<80>kN】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kN】
 type(c)=【0】
 before 【<80>kN<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kN】
 mode:【v to v】
 start error 【<80>kN】
 error2 【<80>kN】
 after error 【<80>kN】
 brefore retry : s:char=【<80>kN】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kN】
 before_getchar【<80>kN】
【l:map】<PageDown>  * z+$
【after get esc】
 after_if【<80>kN】
 before_exit【<80>kN】
 after_exit【<80>kN】
is_special_key = 0
 before start_loop【<80>kN】
 after start_loop【<80>kN】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kN】
 type(c)=【0】
 before 【<80>kN<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kN】
 mode:【v to v】
 start error 【<80>kN】
 error2 【<80>kN】
 after error 【<80>kN】
 brefore retry : s:char=【<80>kN】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kP】
 before_getchar【<80>kP】
【l:map】<PageUp>    * z^
【after get esc】
 after_if【<80>kP】
 before_exit【<80>kP】
 after_exit【<80>kP】
is_special_key = 0
 before start_loop【<80>kP】
 after start_loop【<80>kP】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kP】
 type(c)=【0】
 before 【<80>kP<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kP】
 mode:【v to v】
 start error 【<80>kP】
 error2 【<80>kP】
 after error 【<80>kP】
 brefore retry : s:char=【<80>kP】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kP】
 before_getchar【<80>kP】
【l:map】<PageUp>    * z^
【after get esc】
 after_if【<80>kP】
 before_exit【<80>kP】
 after_exit【<80>kP】
is_special_key = 0
 before start_loop【<80>kP】
 after start_loop【<80>kP】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kP】
 type(c)=【0】
 before 【<80>kP<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kP】
 mode:【v to v】
 start error 【<80>kP】
 error2 【<80>kP】
 after error 【<80>kP】
 brefore retry : s:char=【<80>kP】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kN】
 before_getchar【<80>kN】
【l:map】<PageDown>  * z+$
【after get esc】
 after_if【<80>kN】
 before_exit【<80>kN】
 after_exit【<80>kN】
is_special_key = 0
 before start_loop【<80>kN】
 after start_loop【<80>kN】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kN】
 type(c)=【0】
 before 【<80>kN<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kN】
 mode:【v to v】
 start error 【<80>kN】
 error2 【<80>kN】
 after error 【<80>kN】
 brefore retry : s:char=【<80>kN】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kN】
 before_getchar【<80>kN】
【l:map】<PageDown>  * z+$
【after get esc】
 after_if【<80>kN】
 before_exit【<80>kN】
 after_exit【<80>kN】
is_special_key = 0
 before start_loop【<80>kN】
 after start_loop【<80>kN】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kN】
 type(c)=【0】
 before 【<80>kN<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kN】
 mode:【v to v】
 start error 【<80>kN】
 error2 【<80>kN】
 after error 【<80>kN】
 brefore retry : s:char=【<80>kN】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kN】
 before_getchar【<80>kN】
【l:map】<PageDown>  * z+$
【after get esc】
 after_if【<80>kN】
 before_exit【<80>kN】
 after_exit【<80>kN】
is_special_key = 0
 before start_loop【<80>kN】
 after start_loop【<80>kN】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kN】
 type(c)=【0】
 before 【<80>kN<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kN】
 mode:【v to v】
 start error 【<80>kN】
 error2 【<80>kN】
 after error 【<80>kN】
 brefore retry : s:char=【<80>kN】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kN】
 before_getchar【<80>kN】
【l:map】<PageDown>  * z+$
【after get esc】
 after_if【<80>kN】
 before_exit【<80>kN】
 after_exit【<80>kN】
is_special_key = 0
 before start_loop【<80>kN】
 after start_loop【<80>kN】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kN】
 type(c)=【0】
 before 【<80>kN<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kN】
 mode:【v to v】
 start error 【<80>kN】
 error2 【<80>kN】
 after error 【<80>kN】
 brefore retry : s:char=【<80>kN】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kN】
 before_getchar【<80>kN】
【l:map】<PageDown>  * z+$
【after get esc】
 after_if【<80>kN】
 before_exit【<80>kN】
 after_exit【<80>kN】
is_special_key = 0
 before start_loop【<80>kN】
 after start_loop【<80>kN】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kN】
 type(c)=【0】
 before 【<80>kN<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kN】
 mode:【v to v】
 start error 【<80>kN】
 error2 【<80>kN】
 after error 【<80>kN】
 brefore retry : s:char=【<80>kN】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kN】
 before_getchar【<80>kN】
【l:map】<PageDown>  * z+$
【after get esc】
 after_if【<80>kN】
 before_exit【<80>kN】
 after_exit【<80>kN】
is_special_key = 0
 before start_loop【<80>kN】
 after start_loop【<80>kN】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kN】
 type(c)=【0】
 before 【<80>kN<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kN】
 mode:【v to v】
 start error 【<80>kN】
 error2 【<80>kN】
 after error 【<80>kN】
 brefore retry : s:char=【<80>kN】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kN】
 before_getchar【<80>kN】
【l:map】<PageDown>  * z+$
【after get esc】
 after_if【<80>kN】
 before_exit【<80>kN】
 after_exit【<80>kN】
is_special_key = 0
 before start_loop【<80>kN】
 after start_loop【<80>kN】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kN】
 type(c)=【0】
 before 【<80>kN<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kN】
 mode:【v to v】
 start error 【<80>kN】
 error2 【<80>kN】
 after error 【<80>kN】
 brefore retry : s:char=【<80>kN】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kN】
 before_getchar【<80>kN】
【l:map】<PageDown>  * z+$
【after get esc】
 after_if【<80>kN】
 before_exit【<80>kN】
 after_exit【<80>kN】
is_special_key = 0
 before start_loop【<80>kN】
 after start_loop【<80>kN】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kN】
 type(c)=【0】
 before 【<80>kN<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kN】
 mode:【v to v】
 start error 【<80>kN】
 error2 【<80>kN】
 after error 【<80>kN】
 brefore retry : s:char=【<80>kN】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kN】
 before_getchar【<80>kN】
【l:map】<PageDown>  * z+$
【after get esc】
 after_if【<80>kN】
 before_exit【<80>kN】
 after_exit【<80>kN】
is_special_key = 0
 before start_loop【<80>kN】
 after start_loop【<80>kN】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kN】
 type(c)=【0】
 before 【<80>kN<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kN】
 mode:【v to v】
 start error 【<80>kN】
 error2 【<80>kN】
 after error 【<80>kN】
 brefore retry : s:char=【<80>kN】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kN】
 before_getchar【<80>kN】
【l:map】<PageDown>  * z+$
【after get esc】
 after_if【<80>kN】
 before_exit【<80>kN】
 after_exit【<80>kN】
is_special_key = 0
 before start_loop【<80>kN】
 after start_loop【<80>kN】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kN】
 type(c)=【0】
 before 【<80>kN<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kN】
 mode:【v to v】
 start error 【<80>kN】
 error2 【<80>kN】
 after error 【<80>kN】
 brefore retry : s:char=【<80>kN】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kN】
 before_getchar【<80>kN】
【l:map】<PageDown>  * z+$
【after get esc】
 after_if【<80>kN】
 before_exit【<80>kN】
 after_exit【<80>kN】
is_special_key = 0
 before start_loop【<80>kN】
 after start_loop【<80>kN】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kN】
 type(c)=【0】
 before 【<80>kN<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kN】
 mode:【v to v】
 start error 【<80>kN】
 error2 【<80>kN】
 after error 【<80>kN】
 brefore retry : s:char=【<80>kN】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kN】
 before_getchar【<80>kN】
【l:map】<PageDown>  * z+$
【after get esc】
 after_if【<80>kN】
 before_exit【<80>kN】
 after_exit【<80>kN】
is_special_key = 0
 before start_loop【<80>kN】
 after start_loop【<80>kN】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kN】
 type(c)=【0】
 before 【<80>kN<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kN】
 mode:【v to v】
 start error 【<80>kN】
 error2 【<80>kN】
 after error 【<80>kN】
 brefore retry : s:char=【<80>kN】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kN】
 before_getchar【<80>kN】
【l:map】<PageDown>  * z+$
【after get esc】
 after_if【<80>kN】
 before_exit【<80>kN】
 after_exit【<80>kN】
is_special_key = 0
 before start_loop【<80>kN】
 after start_loop【<80>kN】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kN】
 type(c)=【0】
 before 【<80>kN<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kN】
 mode:【v to v】
 start error 【<80>kN】
 error2 【<80>kN】
 after error 【<80>kN】
 brefore retry : s:char=【<80>kN】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kN】
 before_getchar【<80>kN】
【l:map】<PageDown>  * z+$
【after get esc】
 after_if【<80>kN】
 before_exit【<80>kN】
 after_exit【<80>kN】
is_special_key = 0
 before start_loop【<80>kN】
 after start_loop【<80>kN】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kN】
 type(c)=【0】
 before 【<80>kN<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kN】
 mode:【v to v】
 start error 【<80>kN】
 error2 【<80>kN】
 after error 【<80>kN】
 brefore retry : s:char=【<80>kN】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kN】
 before_getchar【<80>kN】
【l:map】<PageDown>  * z+$
【after get esc】
 after_if【<80>kN】
 before_exit【<80>kN】
 after_exit【<80>kN】
is_special_key = 0
 before start_loop【<80>kN】
 after start_loop【<80>kN】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kN】
 type(c)=【0】
 before 【<80>kN<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kN】
 mode:【v to v】
 start error 【<80>kN】
 error2 【<80>kN】
 after error 【<80>kN】
 brefore retry : s:char=【<80>kN】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kN】
 before_getchar【<80>kN】
【l:map】<PageDown>  * z+$
【after get esc】
 after_if【<80>kN】
 before_exit【<80>kN】
 after_exit【<80>kN】
is_special_key = 0
 before start_loop【<80>kN】
 after start_loop【<80>kN】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kN】
 type(c)=【0】
 before 【<80>kN<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kN】
 mode:【v to v】
 start error 【<80>kN】
 error2 【<80>kN】
 after error 【<80>kN】
 brefore retry : s:char=【<80>kN】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80><fd>^E】
 before_getchar【<80><fd>^E】
【l:map】<S-Down>    * $<C-D>
【after get esc】
 after_if【<80><fd>^E】
 before_exit【<80><fd>^E】
 after_exit【<80><fd>^E】
is_special_key = 0
 before start_loop【<80><fd>^E】
 after start_loop【<80><fd>^E】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80><fd>^E】
 type(c)=【0】
 before 【<80><fd>^E<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80><fd>^E】
 mode:【v to v】
 start error 【<80><fd>^E】
 error2 【<80><fd>^E】
 after error 【<80><fd>^E】
 brefore retry : s:char=【<80><fd>^E】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80><fd>^E】
 before_getchar【<80><fd>^E】
【l:map】<S-Down>    * $<C-D>
【after get esc】
 after_if【<80><fd>^E】
 before_exit【<80><fd>^E】
 after_exit【<80><fd>^E】
is_special_key = 0
 before start_loop【<80><fd>^E】
 after start_loop【<80><fd>^E】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80><fd>^E】
 type(c)=【0】
 before 【<80><fd>^E<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
invalid input: from mode v to 
now mode: v
after invalid input: from mode v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80><fd>^E】
 mode:【v to v】
 start error 【<80><fd>^E】
 error2 【<80><fd>^E】
 can't be replayed in 1cursors 【<80><fd>^E】
 after error 【<80><fd>^E】
 brefore retry : s:char=【<80><fd>^E】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【^[】
 before_getchar【^[】
【l:map】<Esc>[4~      <End>
【get esc】
【char_mapping】
【l:map】<Esc>[4~      <End>
【char_mapping】
 before_subs【^[^W】
 after_subs【】
【after get esc】
 after_if【】
 before_exit【】
 after_exit【】
is_special_key = 0
 before start_loop【】
 after start_loop【】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【】
 mode:【v to v】
 start error 【】
 error2 【】
 after error 【】
 brefore retry : s:char=【】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【^Z】
 before_getchar【^Z】
【l:map】<C-Z>       * u
【after get esc】
 after_if【^Z】
 before_exit【^Z】
 after_exit【^Z】
is_special_key = 0
 before start_loop【^Z】
 after start_loop【^Z】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【^Z】
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to n
before mc-input3: from v to n
before mc-input4: from v to n
after mc-input: from v to n
 start 【^Z】
 mode:【v to n】
 start error 【^Z】
 error2 【^Z】
 after error 【^Z】
 brefore retry : s:char=【^Z】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【^W】
 before_getchar【^W】
【l:map】<C-W>       * :q<CR>
【after get esc】
 after_if【^W】
 before_exit【^W】
 after_exit【^W】
is_special_key = 0
 before start_loop【^W】
 after start_loop【^W】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from n to 
before apply【^W】
 type(c)=【0】
 before 【^W<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from n to 
before mc-detect: from n to 
after mc-detect: from n to 
invalid input: from mode n to 
now mode: n
after invalid input: from mode n to 
before mc-input: from n to 
before mc-input2: from n to n
before mc-input3: from n to n
before mc-input4: from n to n
after mc-input: from n to n
 start 【^W】
 mode:【n to n】
 start error 【^W】
 error2 【^W】
 can't be replayed in 1cursors 【^W】
 after error 【^W】
 brefore retry : s:char=【^W】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【^Z】
 before_getchar【^Z】
【l:map】<C-Z>       * u
【after get esc】
 after_if【^Z】
 before_exit【^Z】
 after_exit【^Z】
is_special_key = 0
 before start_loop【^Z】
 after start_loop【^Z】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from n to 
before apply【^Z】
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from n to 
before mc-detect: from n to 
after mc-detect: from n to 
before mc-input: from n to 
before mc-input2: from n to n
before mc-input3: from n to n
before mc-input4: from n to n
after mc-input: from n to n
 start 【^Z】
 mode:【n to n】
 start error 【^Z】
 error2 【^Z】
 after error 【^Z】
 brefore retry : s:char=【^Z】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【^Z】
 before_getchar【^Z】
【l:map】<C-Z>       * u
【after get esc】
 after_if【^Z】
 before_exit【^Z】
 after_exit【^Z】
is_special_key = 0
 before start_loop【^Z】
 after start_loop【^Z】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from n to 
before apply【^Z】
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from n to 
before mc-detect: from n to 
after mc-detect: from n to 
before mc-input: from n to 
before mc-input2: from n to n
before mc-input3: from n to n
before mc-input4: from n to n
after mc-input: from n to n
 start 【^Z】
 mode:【n to n】
 start error 【^Z】
 error2 【^Z】
 after error 【^Z】
 brefore retry : s:char=【^Z】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【^Z】
 before_getchar【^Z】
【l:map】<C-Z>       * u
【after get esc】
 after_if【^Z】
 before_exit【^Z】
 after_exit【^Z】
is_special_key = 0
 before start_loop【^Z】
 after start_loop【^Z】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from n to 
before apply【^Z】
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from n to 
before mc-detect: from n to 
after mc-detect: from n to 
before mc-input: from n to 
before mc-input2: from n to n
before mc-input3: from n to n
before mc-input4: from n to n
after mc-input: from n to n
 start 【^Z】
 mode:【n to n】
 start error 【^Z】
 error2 【^Z】
 after error 【^Z】
 brefore retry : s:char=【^Z】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【^Z】
 before_getchar【^Z】
【l:map】<C-Z>       * u
【after get esc】
 after_if【^Z】
 before_exit【^Z】
 after_exit【^Z】
is_special_key = 0
 before start_loop【^Z】
 after start_loop【^Z】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from n to 
before apply【^Z】
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from n to 
before mc-detect: from n to 
after mc-detect: from n to 
before mc-input: from n to 
before mc-input2: from n to n
before mc-input3: from n to n
before mc-input4: from n to n
after mc-input: from n to n
 start 【^Z】
 mode:【n to n】
 start error 【^Z】
 error2 【^Z】
 after error 【^Z】
 brefore retry : s:char=【^Z】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【^Z】
 before_getchar【^Z】
【l:map】<C-Z>       * u
【after get esc】
 after_if【^Z】
 before_exit【^Z】
 after_exit【^Z】
is_special_key = 0
 before start_loop【^Z】
 after start_loop【^Z】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from n to 
before apply【^Z】
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from n to 
before mc-detect: from n to 
after mc-detect: from n to 
before mc-input: from n to 
before mc-input2: from n to n
before mc-input3: from n to n
before mc-input4: from n to n
after mc-input: from n to n
 start 【^Z】
 mode:【n to n】
 start error 【^Z】
 error2 【^Z】
 after error 【^Z】
 brefore retry : s:char=【^Z】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【≈】
 before_getchar【≈】
【after get esc】
 after_if【≈】
 before_exit【≈】
 start 【】
 mode:【 to 】
 start error 【】
 error2 【】
 after error 【】
 brefore retry : s:char=【】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kN】
 before_getchar【<80>kN】
【l:map】<PageDown>  * z+$
【after get esc】
 after_if【<80>kN】
 before_exit【<80>kN】
 after_exit【<80>kN】
is_special_key = 0
 before start_loop【<80>kN】
 after start_loop【<80>kN】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kN】
 type(c)=【0】
 before 【<80>kN<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kN】
 mode:【v to v】
 start error 【<80>kN】
 error2 【<80>kN】
 after error 【<80>kN】
 brefore retry : s:char=【<80>kN】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kP】
 before_getchar【<80>kP】
【l:map】<PageUp>    * z^
【after get esc】
 after_if【<80>kP】
 before_exit【<80>kP】
 after_exit【<80>kP】
is_special_key = 0
 before start_loop【<80>kP】
 after start_loop【<80>kP】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kP】
 type(c)=【0】
 before 【<80>kP<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kP】
 mode:【v to v】
 start error 【<80>kP】
 error2 【<80>kP】
 after error 【<80>kP】
 brefore retry : s:char=【<80>kP】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kP】
 before_getchar【<80>kP】
【l:map】<PageUp>    * z^
【after get esc】
 after_if【<80>kP】
 before_exit【<80>kP】
 after_exit【<80>kP】
is_special_key = 0
 before start_loop【<80>kP】
 after start_loop【<80>kP】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kP】
 type(c)=【0】
 before 【<80>kP<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kP】
 mode:【v to v】
 start error 【<80>kP】
 error2 【<80>kP】
 after error 【<80>kP】
 brefore retry : s:char=【<80>kP】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kP】
 before_getchar【<80>kP】
【l:map】<PageUp>    * z^
【after get esc】
 after_if【<80>kP】
 before_exit【<80>kP】
 after_exit【<80>kP】
is_special_key = 0
 before start_loop【<80>kP】
 after start_loop【<80>kP】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kP】
 type(c)=【0】
 before 【<80>kP<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kP】
 mode:【v to v】
 start error 【<80>kP】
 error2 【<80>kP】
 after error 【<80>kP】
 brefore retry : s:char=【<80>kP】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kP】
 before_getchar【<80>kP】
【l:map】<PageUp>    * z^
【after get esc】
 after_if【<80>kP】
 before_exit【<80>kP】
 after_exit【<80>kP】
is_special_key = 0
 before start_loop【<80>kP】
 after start_loop【<80>kP】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kP】
 type(c)=【0】
 before 【<80>kP<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kP】
 mode:【v to v】
 start error 【<80>kP】
 error2 【<80>kP】
 after error 【<80>kP】
 brefore retry : s:char=【<80>kP】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kP】
 before_getchar【<80>kP】
【l:map】<PageUp>    * z^
【after get esc】
 after_if【<80>kP】
 before_exit【<80>kP】
 after_exit【<80>kP】
is_special_key = 0
 before start_loop【<80>kP】
 after start_loop【<80>kP】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kP】
 type(c)=【0】
 before 【<80>kP<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kP】
 mode:【v to v】
 start error 【<80>kP】
 error2 【<80>kP】
 after error 【<80>kP】
 brefore retry : s:char=【<80>kP】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kP】
 before_getchar【<80>kP】
【l:map】<PageUp>    * z^
【after get esc】
 after_if【<80>kP】
 before_exit【<80>kP】
 after_exit【<80>kP】
is_special_key = 0
 before start_loop【<80>kP】
 after start_loop【<80>kP】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kP】
 type(c)=【0】
 before 【<80>kP<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kP】
 mode:【v to v】
 start error 【<80>kP】
 error2 【<80>kP】
 after error 【<80>kP】
 brefore retry : s:char=【<80>kP】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kP】
 before_getchar【<80>kP】
【l:map】<PageUp>    * z^
【after get esc】
 after_if【<80>kP】
 before_exit【<80>kP】
 after_exit【<80>kP】
is_special_key = 0
 before start_loop【<80>kP】
 after start_loop【<80>kP】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kP】
 type(c)=【0】
 before 【<80>kP<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kP】
 mode:【v to v】
 start error 【<80>kP】
 error2 【<80>kP】
 after error 【<80>kP】
 brefore retry : s:char=【<80>kP】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kP】
 before_getchar【<80>kP】
【l:map】<PageUp>    * z^
【after get esc】
 after_if【<80>kP】
 before_exit【<80>kP】
 after_exit【<80>kP】
is_special_key = 0
 before start_loop【<80>kP】
 after start_loop【<80>kP】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kP】
 type(c)=【0】
 before 【<80>kP<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kP】
 mode:【v to v】
 start error 【<80>kP】
 error2 【<80>kP】
 after error 【<80>kP】
 brefore retry : s:char=【<80>kP】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kP】
 before_getchar【<80>kP】
【l:map】<PageUp>    * z^
【after get esc】
 after_if【<80>kP】
 before_exit【<80>kP】
 after_exit【<80>kP】
is_special_key = 0
 before start_loop【<80>kP】
 after start_loop【<80>kP】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kP】
 type(c)=【0】
 before 【<80>kP<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kP】
 mode:【v to v】
 start error 【<80>kP】
 error2 【<80>kP】
 after error 【<80>kP】
 brefore retry : s:char=【<80>kP】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kN】
 before_getchar【<80>kN】
【l:map】<PageDown>  * z+$
【after get esc】
 after_if【<80>kN】
 before_exit【<80>kN】
 after_exit【<80>kN】
is_special_key = 0
 before start_loop【<80>kN】
 after start_loop【<80>kN】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kN】
 type(c)=【0】
 before 【<80>kN<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kN】
 mode:【v to v】
 start error 【<80>kN】
 error2 【<80>kN】
 after error 【<80>kN】
 brefore retry : s:char=【<80>kN】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kN】
 before_getchar【<80>kN】
【l:map】<PageDown>  * z+$
【after get esc】
 after_if【<80>kN】
 before_exit【<80>kN】
 after_exit【<80>kN】
is_special_key = 0
 before start_loop【<80>kN】
 after start_loop【<80>kN】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kN】
 type(c)=【0】
 before 【<80>kN<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kN】
 mode:【v to v】
 start error 【<80>kN】
 error2 【<80>kN】
 after error 【<80>kN】
 brefore retry : s:char=【<80>kN】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kN】
 before_getchar【<80>kN】
【l:map】<PageDown>  * z+$
【after get esc】
 after_if【<80>kN】
 before_exit【<80>kN】
 after_exit【<80>kN】
is_special_key = 0
 before start_loop【<80>kN】
 after start_loop【<80>kN】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kN】
 type(c)=【0】
 before 【<80>kN<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kN】
 mode:【v to v】
 start error 【<80>kN】
 error2 【<80>kN】
 after error 【<80>kN】
 brefore retry : s:char=【<80>kN】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kN】
 before_getchar【<80>kN】
【l:map】<PageDown>  * z+$
【after get esc】
 after_if【<80>kN】
 before_exit【<80>kN】
 after_exit【<80>kN】
is_special_key = 0
 before start_loop【<80>kN】
 after start_loop【<80>kN】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kN】
 type(c)=【0】
 before 【<80>kN<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kN】
 mode:【v to v】
 start error 【<80>kN】
 error2 【<80>kN】
 after error 【<80>kN】
 brefore retry : s:char=【<80>kN】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kP】
 before_getchar【<80>kP】
【l:map】<PageUp>    * z^
【after get esc】
 after_if【<80>kP】
 before_exit【<80>kP】
 after_exit【<80>kP】
is_special_key = 0
 before start_loop【<80>kP】
 after start_loop【<80>kP】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kP】
 type(c)=【0】
 before 【<80>kP<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kP】
 mode:【v to v】
 start error 【<80>kP】
 error2 【<80>kP】
 after error 【<80>kP】
 brefore retry : s:char=【<80>kP】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kP】
 before_getchar【<80>kP】
【l:map】<PageUp>    * z^
【after get esc】
 after_if【<80>kP】
 before_exit【<80>kP】
 after_exit【<80>kP】
is_special_key = 0
 before start_loop【<80>kP】
 after start_loop【<80>kP】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kP】
 type(c)=【0】
 before 【<80>kP<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kP】
 mode:【v to v】
 start error 【<80>kP】
 error2 【<80>kP】
 after error 【<80>kP】
 brefore retry : s:char=【<80>kP】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kP】
 before_getchar【<80>kP】
【l:map】<PageUp>    * z^
【after get esc】
 after_if【<80>kP】
 before_exit【<80>kP】
 after_exit【<80>kP】
is_special_key = 0
 before start_loop【<80>kP】
 after start_loop【<80>kP】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kP】
 type(c)=【0】
 before 【<80>kP<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kP】
 mode:【v to v】
 start error 【<80>kP】
 error2 【<80>kP】
 after error 【<80>kP】
 brefore retry : s:char=【<80>kP】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kP】
 before_getchar【<80>kP】
【l:map】<PageUp>    * z^
【after get esc】
 after_if【<80>kP】
 before_exit【<80>kP】
 after_exit【<80>kP】
is_special_key = 0
 before start_loop【<80>kP】
 after start_loop【<80>kP】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kP】
 type(c)=【0】
 before 【<80>kP<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kP】
 mode:【v to v】
 start error 【<80>kP】
 error2 【<80>kP】
 after error 【<80>kP】
 brefore retry : s:char=【<80>kP】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kP】
 before_getchar【<80>kP】
【l:map】<PageUp>    * z^
【after get esc】
 after_if【<80>kP】
 before_exit【<80>kP】
 after_exit【<80>kP】
is_special_key = 0
 before start_loop【<80>kP】
 after start_loop【<80>kP】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kP】
 type(c)=【0】
 before 【<80>kP<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kP】
 mode:【v to v】
 start error 【<80>kP】
 error2 【<80>kP】
 after error 【<80>kP】
 brefore retry : s:char=【<80>kP】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kP】
 before_getchar【<80>kP】
【l:map】<PageUp>    * z^
【after get esc】
 after_if【<80>kP】
 before_exit【<80>kP】
 after_exit【<80>kP】
is_special_key = 0
 before start_loop【<80>kP】
 after start_loop【<80>kP】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kP】
 type(c)=【0】
 before 【<80>kP<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kP】
 mode:【v to v】
 start error 【<80>kP】
 error2 【<80>kP】
 after error 【<80>kP】
 brefore retry : s:char=【<80>kP】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kP】
 before_getchar【<80>kP】
【l:map】<PageUp>    * z^
【after get esc】
 after_if【<80>kP】
 before_exit【<80>kP】
 after_exit【<80>kP】
is_special_key = 0
 before start_loop【<80>kP】
 after start_loop【<80>kP】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kP】
 type(c)=【0】
 before 【<80>kP<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kP】
 mode:【v to v】
 start error 【<80>kP】
 error2 【<80>kP】
 after error 【<80>kP】
 brefore retry : s:char=【<80>kP】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kP】
 before_getchar【<80>kP】
【l:map】<PageUp>    * z^
【after get esc】
 after_if【<80>kP】
 before_exit【<80>kP】
 after_exit【<80>kP】
is_special_key = 0
 before start_loop【<80>kP】
 after start_loop【<80>kP】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kP】
 type(c)=【0】
 before 【<80>kP<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kP】
 mode:【v to v】
 start error 【<80>kP】
 error2 【<80>kP】
 after error 【<80>kP】
 brefore retry : s:char=【<80>kP】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kP】
 before_getchar【<80>kP】
【l:map】<PageUp>    * z^
【after get esc】
 after_if【<80>kP】
 before_exit【<80>kP】
 after_exit【<80>kP】
is_special_key = 0
 before start_loop【<80>kP】
 after start_loop【<80>kP】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kP】
 type(c)=【0】
 before 【<80>kP<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kP】
 mode:【v to v】
 start error 【<80>kP】
 error2 【<80>kP】
 after error 【<80>kP】
 brefore retry : s:char=【<80>kP】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kP】
 before_getchar【<80>kP】
【l:map】<PageUp>    * z^
【after get esc】
 after_if【<80>kP】
 before_exit【<80>kP】
 after_exit【<80>kP】
is_special_key = 0
 before start_loop【<80>kP】
 after start_loop【<80>kP】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kP】
 type(c)=【0】
 before 【<80>kP<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kP】
 mode:【v to v】
 start error 【<80>kP】
 error2 【<80>kP】
 after error 【<80>kP】
 brefore retry : s:char=【<80>kP】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kP】
 before_getchar【<80>kP】
【l:map】<PageUp>    * z^
【after get esc】
 after_if【<80>kP】
 before_exit【<80>kP】
 after_exit【<80>kP】
is_special_key = 0
 before start_loop【<80>kP】
 after start_loop【<80>kP】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kP】
 type(c)=【0】
 before 【<80>kP<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kP】
 mode:【v to v】
 start error 【<80>kP】
 error2 【<80>kP】
 after error 【<80>kP】
 brefore retry : s:char=【<80>kP】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kP】
 before_getchar【<80>kP】
【l:map】<PageUp>    * z^
【after get esc】
 after_if【<80>kP】
 before_exit【<80>kP】
 after_exit【<80>kP】
is_special_key = 0
 before start_loop【<80>kP】
 after start_loop【<80>kP】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kP】
 type(c)=【0】
 before 【<80>kP<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kP】
 mode:【v to v】
 start error 【<80>kP】
 error2 【<80>kP】
 after error 【<80>kP】
 brefore retry : s:char=【<80>kP】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kP】
 before_getchar【<80>kP】
【l:map】<PageUp>    * z^
【after get esc】
 after_if【<80>kP】
 before_exit【<80>kP】
 after_exit【<80>kP】
is_special_key = 0
 before start_loop【<80>kP】
 after start_loop【<80>kP】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kP】
 type(c)=【0】
 before 【<80>kP<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kP】
 mode:【v to v】
 start error 【<80>kP】
 error2 【<80>kP】
 after error 【<80>kP】
 brefore retry : s:char=【<80>kP】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kP】
 before_getchar【<80>kP】
【l:map】<PageUp>    * z^
【after get esc】
 after_if【<80>kP】
 before_exit【<80>kP】
 after_exit【<80>kP】
is_special_key = 0
 before start_loop【<80>kP】
 after start_loop【<80>kP】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kP】
 type(c)=【0】
 before 【<80>kP<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kP】
 mode:【v to v】
 start error 【<80>kP】
 error2 【<80>kP】
 after error 【<80>kP】
 brefore retry : s:char=【<80>kP】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kP】
 before_getchar【<80>kP】
【l:map】<PageUp>    * z^
【after get esc】
 after_if【<80>kP】
 before_exit【<80>kP】
 after_exit【<80>kP】
is_special_key = 0
 before start_loop【<80>kP】
 after start_loop【<80>kP】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kP】
 type(c)=【0】
 before 【<80>kP<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kP】
 mode:【v to v】
 start error 【<80>kP】
 error2 【<80>kP】
 after error 【<80>kP】
 brefore retry : s:char=【<80>kP】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kN】
 before_getchar【<80>kN】
【l:map】<PageDown>  * z+$
【after get esc】
 after_if【<80>kN】
 before_exit【<80>kN】
 after_exit【<80>kN】
is_special_key = 0
 before start_loop【<80>kN】
 after start_loop【<80>kN】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kN】
 type(c)=【0】
 before 【<80>kN<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kN】
 mode:【v to v】
 start error 【<80>kN】
 error2 【<80>kN】
 after error 【<80>kN】
 brefore retry : s:char=【<80>kN】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kN】
 before_getchar【<80>kN】
【l:map】<PageDown>  * z+$
【after get esc】
 after_if【<80>kN】
 before_exit【<80>kN】
 after_exit【<80>kN】
is_special_key = 0
 before start_loop【<80>kN】
 after start_loop【<80>kN】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kN】
 type(c)=【0】
 before 【<80>kN<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kN】
 mode:【v to v】
 start error 【<80>kN】
 error2 【<80>kN】
 after error 【<80>kN】
 brefore retry : s:char=【<80>kN】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kN】
 before_getchar【<80>kN】
【l:map】<PageDown>  * z+$
【after get esc】
 after_if【<80>kN】
 before_exit【<80>kN】
 after_exit【<80>kN】
is_special_key = 0
 before start_loop【<80>kN】
 after start_loop【<80>kN】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kN】
 type(c)=【0】
 before 【<80>kN<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kN】
 mode:【v to v】
 start error 【<80>kN】
 error2 【<80>kN】
 after error 【<80>kN】
 brefore retry : s:char=【<80>kN】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kP】
 before_getchar【<80>kP】
【l:map】<PageUp>    * z^
【after get esc】
 after_if【<80>kP】
 before_exit【<80>kP】
 after_exit【<80>kP】
is_special_key = 0
 before start_loop【<80>kP】
 after start_loop【<80>kP】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kP】
 type(c)=【0】
 before 【<80>kP<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kP】
 mode:【v to v】
 start error 【<80>kP】
 error2 【<80>kP】
 after error 【<80>kP】
 brefore retry : s:char=【<80>kP】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kP】
 before_getchar【<80>kP】
【l:map】<PageUp>    * z^
【after get esc】
 after_if【<80>kP】
 before_exit【<80>kP】
 after_exit【<80>kP】
is_special_key = 0
 before start_loop【<80>kP】
 after start_loop【<80>kP】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kP】
 type(c)=【0】
 before 【<80>kP<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kP】
 mode:【v to v】
 start error 【<80>kP】
 error2 【<80>kP】
 after error 【<80>kP】
 brefore retry : s:char=【<80>kP】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kP】
 before_getchar【<80>kP】
【l:map】<PageUp>    * z^
【after get esc】
 after_if【<80>kP】
 before_exit【<80>kP】
 after_exit【<80>kP】
is_special_key = 0
 before start_loop【<80>kP】
 after start_loop【<80>kP】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kP】
 type(c)=【0】
 before 【<80>kP<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kP】
 mode:【v to v】
 start error 【<80>kP】
 error2 【<80>kP】
 after error 【<80>kP】
 brefore retry : s:char=【<80>kP】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kP】
 before_getchar【<80>kP】
【l:map】<PageUp>    * z^
【after get esc】
 after_if【<80>kP】
 before_exit【<80>kP】
 after_exit【<80>kP】
is_special_key = 0
 before start_loop【<80>kP】
 after start_loop【<80>kP】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kP】
 type(c)=【0】
 before 【<80>kP<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kP】
 mode:【v to v】
 start error 【<80>kP】
 error2 【<80>kP】
 after error 【<80>kP】
 brefore retry : s:char=【<80>kP】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kP】
 before_getchar【<80>kP】
【l:map】<PageUp>    * z^
【after get esc】
 after_if【<80>kP】
 before_exit【<80>kP】
 after_exit【<80>kP】
is_special_key = 0
 before start_loop【<80>kP】
 after start_loop【<80>kP】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kP】
 type(c)=【0】
 before 【<80>kP<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kP】
 mode:【v to v】
 start error 【<80>kP】
 error2 【<80>kP】
 after error 【<80>kP】
 brefore retry : s:char=【<80>kP】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kP】
 before_getchar【<80>kP】
【l:map】<PageUp>    * z^
【after get esc】
 after_if【<80>kP】
 before_exit【<80>kP】
 after_exit【<80>kP】
is_special_key = 0
 before start_loop【<80>kP】
 after start_loop【<80>kP】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kP】
 type(c)=【0】
 before 【<80>kP<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kP】
 mode:【v to v】
 start error 【<80>kP】
 error2 【<80>kP】
 after error 【<80>kP】
 brefore retry : s:char=【<80>kP】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kP】
 before_getchar【<80>kP】
【l:map】<PageUp>    * z^
【after get esc】
 after_if【<80>kP】
 before_exit【<80>kP】
 after_exit【<80>kP】
is_special_key = 0
 before start_loop【<80>kP】
 after start_loop【<80>kP】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kP】
 type(c)=【0】
 before 【<80>kP<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kP】
 mode:【v to v】
 start error 【<80>kP】
 error2 【<80>kP】
 after error 【<80>kP】
 brefore retry : s:char=【<80>kP】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kP】
 before_getchar【<80>kP】
【l:map】<PageUp>    * z^
【after get esc】
 after_if【<80>kP】
 before_exit【<80>kP】
 after_exit【<80>kP】
is_special_key = 0
 before start_loop【<80>kP】
 after start_loop【<80>kP】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kP】
 type(c)=【0】
 before 【<80>kP<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kP】
 mode:【v to v】
 start error 【<80>kP】
 error2 【<80>kP】
 after error 【<80>kP】
 brefore retry : s:char=【<80>kP】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kP】
 before_getchar【<80>kP】
【l:map】<PageUp>    * z^
【after get esc】
 after_if【<80>kP】
 before_exit【<80>kP】
 after_exit【<80>kP】
is_special_key = 0
 before start_loop【<80>kP】
 after start_loop【<80>kP】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kP】
 type(c)=【0】
 before 【<80>kP<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kP】
 mode:【v to v】
 start error 【<80>kP】
 error2 【<80>kP】
 after error 【<80>kP】
 brefore retry : s:char=【<80>kP】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kP】
 before_getchar【<80>kP】
【l:map】<PageUp>    * z^
【after get esc】
 after_if【<80>kP】
 before_exit【<80>kP】
 after_exit【<80>kP】
is_special_key = 0
 before start_loop【<80>kP】
 after start_loop【<80>kP】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kP】
 type(c)=【0】
 before 【<80>kP<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kP】
 mode:【v to v】
 start error 【<80>kP】
 error2 【<80>kP】
 after error 【<80>kP】
 brefore retry : s:char=【<80>kP】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kP】
 before_getchar【<80>kP】
【l:map】<PageUp>    * z^
【after get esc】
 after_if【<80>kP】
 before_exit【<80>kP】
 after_exit【<80>kP】
is_special_key = 0
 before start_loop【<80>kP】
 after start_loop【<80>kP】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kP】
 type(c)=【0】
 before 【<80>kP<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kP】
 mode:【v to v】
 start error 【<80>kP】
 error2 【<80>kP】
 after error 【<80>kP】
 brefore retry : s:char=【<80>kP】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【^[】
 before_getchar【^[】
【l:map】<Esc>[4~      <End>
【get esc】
【char_mapping】
【l:map】<Esc>[4~      <End>
【char_mapping】
【l:map】<Esc>[4~      <End>
【char_mapping】
【l:map】<Esc>[4~      <End>
【char_mapping】
【l:map】<Esc>[4~      <End>
【char_mapping】
【l:map】<Esc>[4~      <End>
【char_mapping】
【l:map】<Esc>[4~      <End>
【char_mapping】
【l:map】<Esc>[4~      <End>
【char_mapping】
【l:map】<Esc>[4~      <End>
【char_mapping】
【l:map】<Esc>[4~      <End>
【char_mapping】
【l:map】<Esc>[4~      <End>
【char_mapping】
【l:map】<Esc>[4~      <End>
【char_mapping】
【l:map】<Esc>[4~      <End>
【char_mapping】
【l:map】<Esc>[4~      <End>
【char_mapping】
【l:map】<Esc>[4~      <End>
【char_mapping】
【l:map】<Esc>[4~      <End>
【char_mapping】
【l:map】<Esc>[4~      <End>
【char_mapping】
【l:map】<Esc>[4~      <End>
【char_mapping】
【l:map】<Esc>[4~      <End>
【after get esc】
 after_if【^[】
 before_exit【^[】
 after_exit【^[】
is_special_key = 0
 before start_loop【^[】
 after start_loop【^[】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【^[】
 type(c)=【0】
 before 【^[<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to n
before mc-input3: from v to n
before mc-input4: from v to n
after mc-input: from v to n
 start 【^[】
 mode:【v to n】
 start error 【^[】
 error2 【^[】
 after error 【^[】
 brefore retry : s:char=【^[】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【≈】
 before_getchar【≈】
【after get esc】
 after_if【≈】
 before_exit【≈】
 start 【】
 mode:【n to 】
 start error 【】
 error2 【】
 after error 【】
 brefore retry : s:char=【】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kN】
 before_getchar【<80>kN】
【l:map】<PageDown>  * z+$
【after get esc】
 after_if【<80>kN】
 before_exit【<80>kN】
 after_exit【<80>kN】
is_special_key = 0
 before start_loop【<80>kN】
 after start_loop【<80>kN】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kN】
 type(c)=【0】
 before 【<80>kN<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kN】
 mode:【v to v】
 start error 【<80>kN】
 error2 【<80>kN】
 after error 【<80>kN】
 brefore retry : s:char=【<80>kN】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kN】
 before_getchar【<80>kN】
【l:map】<PageDown>  * z+$
【after get esc】
 after_if【<80>kN】
 before_exit【<80>kN】
 after_exit【<80>kN】
is_special_key = 0
 before start_loop【<80>kN】
 after start_loop【<80>kN】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kN】
 type(c)=【0】
 before 【<80>kN<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kN】
 mode:【v to v】
 start error 【<80>kN】
 error2 【<80>kN】
 after error 【<80>kN】
 brefore retry : s:char=【<80>kN】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kN】
 before_getchar【<80>kN】
【l:map】<PageDown>  * z+$
【after get esc】
 after_if【<80>kN】
 before_exit【<80>kN】
 after_exit【<80>kN】
is_special_key = 0
 before start_loop【<80>kN】
 after start_loop【<80>kN】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kN】
 type(c)=【0】
 before 【<80>kN<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kN】
 mode:【v to v】
 start error 【<80>kN】
 error2 【<80>kN】
 after error 【<80>kN】
 brefore retry : s:char=【<80>kN】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kN】
 before_getchar【<80>kN】
【l:map】<PageDown>  * z+$
【after get esc】
 after_if【<80>kN】
 before_exit【<80>kN】
 after_exit【<80>kN】
is_special_key = 0
 before start_loop【<80>kN】
 after start_loop【<80>kN】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kN】
 type(c)=【0】
 before 【<80>kN<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kN】
 mode:【v to v】
 start error 【<80>kN】
 error2 【<80>kN】
 after error 【<80>kN】
 brefore retry : s:char=【<80>kN】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kN】
 before_getchar【<80>kN】
【l:map】<PageDown>  * z+$
【after get esc】
 after_if【<80>kN】
 before_exit【<80>kN】
 after_exit【<80>kN】
is_special_key = 0
 before start_loop【<80>kN】
 after start_loop【<80>kN】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kN】
 type(c)=【0】
 before 【<80>kN<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kN】
 mode:【v to v】
 start error 【<80>kN】
 error2 【<80>kN】
 after error 【<80>kN】
 brefore retry : s:char=【<80>kN】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kN】
 before_getchar【<80>kN】
【l:map】<PageDown>  * z+$
【after get esc】
 after_if【<80>kN】
 before_exit【<80>kN】
 after_exit【<80>kN】
is_special_key = 0
 before start_loop【<80>kN】
 after start_loop【<80>kN】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kN】
 type(c)=【0】
 before 【<80>kN<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kN】
 mode:【v to v】
 start error 【<80>kN】
 error2 【<80>kN】
 after error 【<80>kN】
 brefore retry : s:char=【<80>kN】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kN】
 before_getchar【<80>kN】
【l:map】<PageDown>  * z+$
【after get esc】
 after_if【<80>kN】
 before_exit【<80>kN】
 after_exit【<80>kN】
is_special_key = 0
 before start_loop【<80>kN】
 after start_loop【<80>kN】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kN】
 type(c)=【0】
 before 【<80>kN<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kN】
 mode:【v to v】
 start error 【<80>kN】
 error2 【<80>kN】
 after error 【<80>kN】
 brefore retry : s:char=【<80>kN】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kN】
 before_getchar【<80>kN】
【l:map】<PageDown>  * z+$
【after get esc】
 after_if【<80>kN】
 before_exit【<80>kN】
 after_exit【<80>kN】
is_special_key = 0
 before start_loop【<80>kN】
 after start_loop【<80>kN】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kN】
 type(c)=【0】
 before 【<80>kN<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kN】
 mode:【v to v】
 start error 【<80>kN】
 error2 【<80>kN】
 after error 【<80>kN】
 brefore retry : s:char=【<80>kN】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kN】
 before_getchar【<80>kN】
【l:map】<PageDown>  * z+$
【after get esc】
 after_if【<80>kN】
 before_exit【<80>kN】
 after_exit【<80>kN】
is_special_key = 0
 before start_loop【<80>kN】
 after start_loop【<80>kN】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kN】
 type(c)=【0】
 before 【<80>kN<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kN】
 mode:【v to v】
 start error 【<80>kN】
 error2 【<80>kN】
 after error 【<80>kN】
 brefore retry : s:char=【<80>kN】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kN】
 before_getchar【<80>kN】
【l:map】<PageDown>  * z+$
【after get esc】
 after_if【<80>kN】
 before_exit【<80>kN】
 after_exit【<80>kN】
is_special_key = 0
 before start_loop【<80>kN】
 after start_loop【<80>kN】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kN】
 type(c)=【0】
 before 【<80>kN<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kN】
 mode:【v to v】
 start error 【<80>kN】
 error2 【<80>kN】
 after error 【<80>kN】
 brefore retry : s:char=【<80>kN】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kN】
 before_getchar【<80>kN】
【l:map】<PageDown>  * z+$
【after get esc】
 after_if【<80>kN】
 before_exit【<80>kN】
 after_exit【<80>kN】
is_special_key = 0
 before start_loop【<80>kN】
 after start_loop【<80>kN】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kN】
 type(c)=【0】
 before 【<80>kN<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kN】
 mode:【v to v】
 start error 【<80>kN】
 error2 【<80>kN】
 after error 【<80>kN】
 brefore retry : s:char=【<80>kN】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kN】
 before_getchar【<80>kN】
【l:map】<PageDown>  * z+$
【after get esc】
 after_if【<80>kN】
 before_exit【<80>kN】
 after_exit【<80>kN】
is_special_key = 0
 before start_loop【<80>kN】
 after start_loop【<80>kN】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kN】
 type(c)=【0】
 before 【<80>kN<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kN】
 mode:【v to v】
 start error 【<80>kN】
 error2 【<80>kN】
 after error 【<80>kN】
 brefore retry : s:char=【<80>kN】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kN】
 before_getchar【<80>kN】
【l:map】<PageDown>  * z+$
【after get esc】
 after_if【<80>kN】
 before_exit【<80>kN】
 after_exit【<80>kN】
is_special_key = 0
 before start_loop【<80>kN】
 after start_loop【<80>kN】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kN】
 type(c)=【0】
 before 【<80>kN<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kN】
 mode:【v to v】
 start error 【<80>kN】
 error2 【<80>kN】
 after error 【<80>kN】
 brefore retry : s:char=【<80>kN】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kN】
 before_getchar【<80>kN】
【l:map】<PageDown>  * z+$
【after get esc】
 after_if【<80>kN】
 before_exit【<80>kN】
 after_exit【<80>kN】
is_special_key = 0
 before start_loop【<80>kN】
 after start_loop【<80>kN】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kN】
 type(c)=【0】
 before 【<80>kN<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kN】
 mode:【v to v】
 start error 【<80>kN】
 error2 【<80>kN】
 after error 【<80>kN】
 brefore retry : s:char=【<80>kN】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kd】
 before_getchar【<80>kd】
【after get esc】
 after_if【<80>kd】
 before_exit【<80>kd】
 after_exit【<80>kd】
is_special_key = 0
 before start_loop【<80>kd】
 after start_loop【<80>kd】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kd】
 type(c)=【0】
 before 【<80>kd<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kd】
 mode:【v to v】
 start error 【<80>kd】
 error2 【<80>kd】
 after error 【<80>kd】
 brefore retry : s:char=【<80>kd】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>ku】
 before_getchar【<80>ku】
【after get esc】
 after_if【<80>ku】
 before_exit【<80>ku】
 after_exit【<80>ku】
is_special_key = 0
 before start_loop【<80>ku】
 after start_loop【<80>ku】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>ku】
 type(c)=【0】
 before 【<80>ku<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>ku】
 mode:【v to v】
 start error 【<80>ku】
 error2 【<80>ku】
 after error 【<80>ku】
 brefore retry : s:char=【<80>ku】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>ku】
 before_getchar【<80>ku】
【after get esc】
 after_if【<80>ku】
 before_exit【<80>ku】
 after_exit【<80>ku】
is_special_key = 0
 before start_loop【<80>ku】
 after start_loop【<80>ku】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>ku】
 type(c)=【0】
 before 【<80>ku<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>ku】
 mode:【v to v】
 start error 【<80>ku】
 error2 【<80>ku】
 after error 【<80>ku】
 brefore retry : s:char=【<80>ku】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>ku】
 before_getchar【<80>ku】
【after get esc】
 after_if【<80>ku】
 before_exit【<80>ku】
 after_exit【<80>ku】
is_special_key = 0
 before start_loop【<80>ku】
 after start_loop【<80>ku】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>ku】
 type(c)=【0】
 before 【<80>ku<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>ku】
 mode:【v to v】
 start error 【<80>ku】
 error2 【<80>ku】
 after error 【<80>ku】
 brefore retry : s:char=【<80>ku】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kd】
 before_getchar【<80>kd】
【after get esc】
 after_if【<80>kd】
 before_exit【<80>kd】
 after_exit【<80>kd】
is_special_key = 0
 before start_loop【<80>kd】
 after start_loop【<80>kd】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kd】
 type(c)=【0】
 before 【<80>kd<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kd】
 mode:【v to v】
 start error 【<80>kd】
 error2 【<80>kd】
 after error 【<80>kd】
 brefore retry : s:char=【<80>kd】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kd】
 before_getchar【<80>kd】
【after get esc】
 after_if【<80>kd】
 before_exit【<80>kd】
 after_exit【<80>kd】
is_special_key = 0
 before start_loop【<80>kd】
 after start_loop【<80>kd】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kd】
 type(c)=【0】
 before 【<80>kd<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kd】
 mode:【v to v】
 start error 【<80>kd】
 error2 【<80>kd】
 after error 【<80>kd】
 brefore retry : s:char=【<80>kd】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kd】
 before_getchar【<80>kd】
【after get esc】
 after_if【<80>kd】
 before_exit【<80>kd】
 after_exit【<80>kd】
is_special_key = 0
 before start_loop【<80>kd】
 after start_loop【<80>kd】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kd】
 type(c)=【0】
 before 【<80>kd<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kd】
 mode:【v to v】
 start error 【<80>kd】
 error2 【<80>kd】
 after error 【<80>kd】
 brefore retry : s:char=【<80>kd】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kd】
 before_getchar【<80>kd】
【after get esc】
 after_if【<80>kd】
 before_exit【<80>kd】
 after_exit【<80>kd】
is_special_key = 0
 before start_loop【<80>kd】
 after start_loop【<80>kd】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kd】
 type(c)=【0】
 before 【<80>kd<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kd】
 mode:【v to v】
 start error 【<80>kd】
 error2 【<80>kd】
 after error 【<80>kd】
 brefore retry : s:char=【<80>kd】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kd】
 before_getchar【<80>kd】
【after get esc】
 after_if【<80>kd】
 before_exit【<80>kd】
 after_exit【<80>kd】
is_special_key = 0
 before start_loop【<80>kd】
 after start_loop【<80>kd】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kd】
 type(c)=【0】
 before 【<80>kd<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kd】
 mode:【v to v】
 start error 【<80>kd】
 error2 【<80>kd】
 after error 【<80>kd】
 brefore retry : s:char=【<80>kd】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kd】
 before_getchar【<80>kd】
【after get esc】
 after_if【<80>kd】
 before_exit【<80>kd】
 after_exit【<80>kd】
is_special_key = 0
 before start_loop【<80>kd】
 after start_loop【<80>kd】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kd】
 type(c)=【0】
 before 【<80>kd<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kd】
 mode:【v to v】
 start error 【<80>kd】
 error2 【<80>kd】
 after error 【<80>kd】
 brefore retry : s:char=【<80>kd】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kd】
 before_getchar【<80>kd】
【after get esc】
 after_if【<80>kd】
 before_exit【<80>kd】
 after_exit【<80>kd】
is_special_key = 0
 before start_loop【<80>kd】
 after start_loop【<80>kd】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kd】
 type(c)=【0】
 before 【<80>kd<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kd】
 mode:【v to v】
 start error 【<80>kd】
 error2 【<80>kd】
 after error 【<80>kd】
 brefore retry : s:char=【<80>kd】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kd】
 before_getchar【<80>kd】
【after get esc】
 after_if【<80>kd】
 before_exit【<80>kd】
 after_exit【<80>kd】
is_special_key = 0
 before start_loop【<80>kd】
 after start_loop【<80>kd】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kd】
 type(c)=【0】
 before 【<80>kd<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kd】
 mode:【v to v】
 start error 【<80>kd】
 error2 【<80>kd】
 after error 【<80>kd】
 brefore retry : s:char=【<80>kd】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kd】
 before_getchar【<80>kd】
【after get esc】
 after_if【<80>kd】
 before_exit【<80>kd】
 after_exit【<80>kd】
is_special_key = 0
 before start_loop【<80>kd】
 after start_loop【<80>kd】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kd】
 type(c)=【0】
 before 【<80>kd<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kd】
 mode:【v to v】
 start error 【<80>kd】
 error2 【<80>kd】
 after error 【<80>kd】
 brefore retry : s:char=【<80>kd】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kd】
 before_getchar【<80>kd】
【after get esc】
 after_if【<80>kd】
 before_exit【<80>kd】
 after_exit【<80>kd】
is_special_key = 0
 before start_loop【<80>kd】
 after start_loop【<80>kd】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kd】
 type(c)=【0】
 before 【<80>kd<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kd】
 mode:【v to v】
 start error 【<80>kd】
 error2 【<80>kd】
 after error 【<80>kd】
 brefore retry : s:char=【<80>kd】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kr】
 before_getchar【<80>kr】
【after get esc】
 after_if【<80>kr】
 before_exit【<80>kr】
 after_exit【<80>kr】
is_special_key = 0
 before start_loop【<80>kr】
 after start_loop【<80>kr】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kr】
 type(c)=【0】
 before 【<80>kr<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kr】
 mode:【v to v】
 start error 【<80>kr】
 error2 【<80>kr】
 after error 【<80>kr】
 brefore retry : s:char=【<80>kr】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kr】
 before_getchar【<80>kr】
【after get esc】
 after_if【<80>kr】
 before_exit【<80>kr】
 after_exit【<80>kr】
is_special_key = 0
 before start_loop【<80>kr】
 after start_loop【<80>kr】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kr】
 type(c)=【0】
 before 【<80>kr<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kr】
 mode:【v to v】
 start error 【<80>kr】
 error2 【<80>kr】
 after error 【<80>kr】
 brefore retry : s:char=【<80>kr】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kr】
 before_getchar【<80>kr】
【after get esc】
 after_if【<80>kr】
 before_exit【<80>kr】
 after_exit【<80>kr】
is_special_key = 0
 before start_loop【<80>kr】
 after start_loop【<80>kr】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kr】
 type(c)=【0】
 before 【<80>kr<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kr】
 mode:【v to v】
 start error 【<80>kr】
 error2 【<80>kr】
 after error 【<80>kr】
 brefore retry : s:char=【<80>kr】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kr】
 before_getchar【<80>kr】
【after get esc】
 after_if【<80>kr】
 before_exit【<80>kr】
 after_exit【<80>kr】
is_special_key = 0
 before start_loop【<80>kr】
 after start_loop【<80>kr】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kr】
 type(c)=【0】
 before 【<80>kr<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kr】
 mode:【v to v】
 start error 【<80>kr】
 error2 【<80>kr】
 after error 【<80>kr】
 brefore retry : s:char=【<80>kr】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kN】
 before_getchar【<80>kN】
【l:map】<PageDown>  * z+$
【after get esc】
 after_if【<80>kN】
 before_exit【<80>kN】
 after_exit【<80>kN】
is_special_key = 0
 before start_loop【<80>kN】
 after start_loop【<80>kN】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kN】
 type(c)=【0】
 before 【<80>kN<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kN】
 mode:【v to v】
 start error 【<80>kN】
 error2 【<80>kN】
 after error 【<80>kN】
 brefore retry : s:char=【<80>kN】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kN】
 before_getchar【<80>kN】
【l:map】<PageDown>  * z+$
【after get esc】
 after_if【<80>kN】
 before_exit【<80>kN】
 after_exit【<80>kN】
is_special_key = 0
 before start_loop【<80>kN】
 after start_loop【<80>kN】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kN】
 type(c)=【0】
 before 【<80>kN<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kN】
 mode:【v to v】
 start error 【<80>kN】
 error2 【<80>kN】
 after error 【<80>kN】
 brefore retry : s:char=【<80>kN】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kN】
 before_getchar【<80>kN】
【l:map】<PageDown>  * z+$
【after get esc】
 after_if【<80>kN】
 before_exit【<80>kN】
 after_exit【<80>kN】
is_special_key = 0
 before start_loop【<80>kN】
 after start_loop【<80>kN】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kN】
 type(c)=【0】
 before 【<80>kN<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kN】
 mode:【v to v】
 start error 【<80>kN】
 error2 【<80>kN】
 after error 【<80>kN】
 brefore retry : s:char=【<80>kN】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kN】
 before_getchar【<80>kN】
【l:map】<PageDown>  * z+$
【after get esc】
 after_if【<80>kN】
 before_exit【<80>kN】
 after_exit【<80>kN】
is_special_key = 0
 before start_loop【<80>kN】
 after start_loop【<80>kN】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kN】
 type(c)=【0】
 before 【<80>kN<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kN】
 mode:【v to v】
 start error 【<80>kN】
 error2 【<80>kN】
 after error 【<80>kN】
 brefore retry : s:char=【<80>kN】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kN】
 before_getchar【<80>kN】
【l:map】<PageDown>  * z+$
【after get esc】
 after_if【<80>kN】
 before_exit【<80>kN】
 after_exit【<80>kN】
is_special_key = 0
 before start_loop【<80>kN】
 after start_loop【<80>kN】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kN】
 type(c)=【0】
 before 【<80>kN<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kN】
 mode:【v to v】
 start error 【<80>kN】
 error2 【<80>kN】
 after error 【<80>kN】
 brefore retry : s:char=【<80>kN】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kN】
 before_getchar【<80>kN】
【l:map】<PageDown>  * z+$
【after get esc】
 after_if【<80>kN】
 before_exit【<80>kN】
 after_exit【<80>kN】
is_special_key = 0
 before start_loop【<80>kN】
 after start_loop【<80>kN】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kN】
 type(c)=【0】
 before 【<80>kN<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kN】
 mode:【v to v】
 start error 【<80>kN】
 error2 【<80>kN】
 after error 【<80>kN】
 brefore retry : s:char=【<80>kN】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kN】
 before_getchar【<80>kN】
【l:map】<PageDown>  * z+$
【after get esc】
 after_if【<80>kN】
 before_exit【<80>kN】
 after_exit【<80>kN】
is_special_key = 0
 before start_loop【<80>kN】
 after start_loop【<80>kN】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kN】
 type(c)=【0】
 before 【<80>kN<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kN】
 mode:【v to v】
 start error 【<80>kN】
 error2 【<80>kN】
 after error 【<80>kN】
 brefore retry : s:char=【<80>kN】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kN】
 before_getchar【<80>kN】
【l:map】<PageDown>  * z+$
【after get esc】
 after_if【<80>kN】
 before_exit【<80>kN】
 after_exit【<80>kN】
is_special_key = 0
 before start_loop【<80>kN】
 after start_loop【<80>kN】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kN】
 type(c)=【0】
 before 【<80>kN<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kN】
 mode:【v to v】
 start error 【<80>kN】
 error2 【<80>kN】
 after error 【<80>kN】
 brefore retry : s:char=【<80>kN】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kN】
 before_getchar【<80>kN】
【l:map】<PageDown>  * z+$
【after get esc】
 after_if【<80>kN】
 before_exit【<80>kN】
 after_exit【<80>kN】
is_special_key = 0
 before start_loop【<80>kN】
 after start_loop【<80>kN】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kN】
 type(c)=【0】
 before 【<80>kN<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kN】
 mode:【v to v】
 start error 【<80>kN】
 error2 【<80>kN】
 after error 【<80>kN】
 brefore retry : s:char=【<80>kN】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kN】
 before_getchar【<80>kN】
【l:map】<PageDown>  * z+$
【after get esc】
 after_if【<80>kN】
 before_exit【<80>kN】
 after_exit【<80>kN】
is_special_key = 0
 before start_loop【<80>kN】
 after start_loop【<80>kN】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kN】
 type(c)=【0】
 before 【<80>kN<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kN】
 mode:【v to v】
 start error 【<80>kN】
 error2 【<80>kN】
 after error 【<80>kN】
 brefore retry : s:char=【<80>kN】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kN】
 before_getchar【<80>kN】
【l:map】<PageDown>  * z+$
【after get esc】
 after_if【<80>kN】
 before_exit【<80>kN】
 after_exit【<80>kN】
is_special_key = 0
 before start_loop【<80>kN】
 after start_loop【<80>kN】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kN】
 type(c)=【0】
 before 【<80>kN<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kN】
 mode:【v to v】
 start error 【<80>kN】
 error2 【<80>kN】
 after error 【<80>kN】
 brefore retry : s:char=【<80>kN】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kN】
 before_getchar【<80>kN】
【l:map】<PageDown>  * z+$
【after get esc】
 after_if【<80>kN】
 before_exit【<80>kN】
 after_exit【<80>kN】
is_special_key = 0
 before start_loop【<80>kN】
 after start_loop【<80>kN】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kN】
 type(c)=【0】
 before 【<80>kN<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kN】
 mode:【v to v】
 start error 【<80>kN】
 error2 【<80>kN】
 after error 【<80>kN】
 brefore retry : s:char=【<80>kN】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kN】
 before_getchar【<80>kN】
【l:map】<PageDown>  * z+$
【after get esc】
 after_if【<80>kN】
 before_exit【<80>kN】
 after_exit【<80>kN】
is_special_key = 0
 before start_loop【<80>kN】
 after start_loop【<80>kN】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kN】
 type(c)=【0】
 before 【<80>kN<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kN】
 mode:【v to v】
 start error 【<80>kN】
 error2 【<80>kN】
 after error 【<80>kN】
 brefore retry : s:char=【<80>kN】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kN】
 before_getchar【<80>kN】
【l:map】<PageDown>  * z+$
【after get esc】
 after_if【<80>kN】
 before_exit【<80>kN】
 after_exit【<80>kN】
is_special_key = 0
 before start_loop【<80>kN】
 after start_loop【<80>kN】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kN】
 type(c)=【0】
 before 【<80>kN<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kN】
 mode:【v to v】
 start error 【<80>kN】
 error2 【<80>kN】
 after error 【<80>kN】
 brefore retry : s:char=【<80>kN】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kN】
 before_getchar【<80>kN】
【l:map】<PageDown>  * z+$
【after get esc】
 after_if【<80>kN】
 before_exit【<80>kN】
 after_exit【<80>kN】
is_special_key = 0
 before start_loop【<80>kN】
 after start_loop【<80>kN】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kN】
 type(c)=【0】
 before 【<80>kN<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kN】
 mode:【v to v】
 start error 【<80>kN】
 error2 【<80>kN】
 after error 【<80>kN】
 brefore retry : s:char=【<80>kN】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kN】
 before_getchar【<80>kN】
【l:map】<PageDown>  * z+$
【after get esc】
 after_if【<80>kN】
 before_exit【<80>kN】
 after_exit【<80>kN】
is_special_key = 0
 before start_loop【<80>kN】
 after start_loop【<80>kN】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kN】
 type(c)=【0】
 before 【<80>kN<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kN】
 mode:【v to v】
 start error 【<80>kN】
 error2 【<80>kN】
 after error 【<80>kN】
 brefore retry : s:char=【<80>kN】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【^[】
 before_getchar【^[】
【l:map】<Esc>[4~      <End>
【get esc】
【char_mapping】
【l:map】<Esc>[4~      <End>
【char_mapping】
【l:map】<Esc>[4~      <End>
【char_mapping】
【l:map】<Esc>[4~      <End>
【char_mapping】
【l:map】<Esc>[4~      <End>
【char_mapping】
【l:map】<Esc>[4~      <End>
【char_mapping】
【l:map】<Esc>[4~      <End>
【char_mapping】
【l:map】<Esc>[4~      <End>
【char_mapping】
【l:map】<Esc>[4~      <End>
【char_mapping】
【l:map】<Esc>[4~      <End>
【char_mapping】
【l:map】<Esc>[4~      <End>
【char_mapping】
【l:map】<Esc>[4~      <End>
【char_mapping】
【l:map】<Esc>[4~      <End>
【char_mapping】
【l:map】<Esc>[4~      <End>
【char_mapping】
【l:map】<Esc>[4~      <End>
【char_mapping】
【l:map】<Esc>[4~      <End>
【char_mapping】
【l:map】<Esc>[4~      <End>
【char_mapping】
【l:map】<Esc>[4~      <End>
【char_mapping】
【l:map】<Esc>[4~      <End>
【after get esc】
 after_if【^[】
 before_exit【^[】
 after_exit【^[】
is_special_key = 0
 before start_loop【^[】
 after start_loop【^[】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【^[】
 type(c)=【0】
 before 【^[<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to n
before mc-input3: from v to n
before mc-input4: from v to n
after mc-input: from v to n
 start 【^[】
 mode:【v to n】
 start error 【^[】
 error2 【^[】
 after error 【^[】
 brefore retry : s:char=【^[】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【≈】
 before_getchar【≈】
【after get esc】
 after_if【≈】
 before_exit【≈】
 start 【】
 mode:【 to 】
 start error 【】
 error2 【】
 after error 【】
 brefore retry : s:char=【】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80><fd>^E】
 before_getchar【<80><fd>^E】
【l:map】<S-Down>    * $<C-D>
【after get esc】
 after_if【<80><fd>^E】
 before_exit【<80><fd>^E】
 after_exit【<80><fd>^E】
is_special_key = 0
 before start_loop【<80><fd>^E】
 after start_loop【<80><fd>^E】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80><fd>^E】
 type(c)=【0】
 before 【<80><fd>^E<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80><fd>^E】
 mode:【v to v】
 start error 【<80><fd>^E】
 error2 【<80><fd>^E】
 after error 【<80><fd>^E】
 brefore retry : s:char=【<80><fd>^E】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80><fd>^E】
 before_getchar【<80><fd>^E】
【l:map】<S-Down>    * $<C-D>
【after get esc】
 after_if【<80><fd>^E】
 before_exit【<80><fd>^E】
 after_exit【<80><fd>^E】
is_special_key = 0
 before start_loop【<80><fd>^E】
 after start_loop【<80><fd>^E】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80><fd>^E】
 type(c)=【0】
 before 【<80><fd>^E<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80><fd>^E】
 mode:【v to v】
 start error 【<80><fd>^E】
 error2 【<80><fd>^E】
 after error 【<80><fd>^E】
 brefore retry : s:char=【<80><fd>^E】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80><fd>^E】
 before_getchar【<80><fd>^E】
【l:map】<S-Down>    * $<C-D>
【after get esc】
 after_if【<80><fd>^E】
 before_exit【<80><fd>^E】
 after_exit【<80><fd>^E】
is_special_key = 0
 before start_loop【<80><fd>^E】
 after start_loop【<80><fd>^E】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80><fd>^E】
 type(c)=【0】
 before 【<80><fd>^E<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
invalid input: from mode v to 
now mode: v
after invalid input: from mode v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80><fd>^E】
 mode:【v to v】
 start error 【<80><fd>^E】
 error2 【<80><fd>^E】
 can't be replayed in 1cursors 【<80><fd>^E】
 after error 【<80><fd>^E】
 brefore retry : s:char=【<80><fd>^E】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【≈】
 before_getchar【≈】
【after get esc】
 after_if【≈】
 before_exit【≈】
 start 【】
 mode:【v to 】
 start error 【】
 error2 【】
 after error 【】
 brefore retry : s:char=【】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80><fd>^E】
 before_getchar【<80><fd>^E】
【l:map】<S-Down>    * $<C-D>
【after get esc】
 after_if【<80><fd>^E】
 before_exit【<80><fd>^E】
 after_exit【<80><fd>^E】
is_special_key = 0
 before start_loop【<80><fd>^E】
 after start_loop【<80><fd>^E】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80><fd>^E】
 type(c)=【0】
 before 【<80><fd>^E<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80><fd>^E】
 mode:【v to v】
 start error 【<80><fd>^E】
 error2 【<80><fd>^E】
 after error 【<80><fd>^E】
 brefore retry : s:char=【<80><fd>^E】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80><fd>^E】
 before_getchar【<80><fd>^E】
【l:map】<S-Down>    * $<C-D>
【after get esc】
 after_if【<80><fd>^E】
 before_exit【<80><fd>^E】
 after_exit【<80><fd>^E】
is_special_key = 0
 before start_loop【<80><fd>^E】
 after start_loop【<80><fd>^E】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80><fd>^E】
 type(c)=【0】
 before 【<80><fd>^E<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80><fd>^E】
 mode:【v to v】
 start error 【<80><fd>^E】
 error2 【<80><fd>^E】
 after error 【<80><fd>^E】
 brefore retry : s:char=【<80><fd>^E】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80><fd>^E】
 before_getchar【<80><fd>^E】
【l:map】<S-Down>    * $<C-D>
【after get esc】
 after_if【<80><fd>^E】
 before_exit【<80><fd>^E】
 after_exit【<80><fd>^E】
is_special_key = 0
 before start_loop【<80><fd>^E】
 after start_loop【<80><fd>^E】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80><fd>^E】
 type(c)=【0】
 before 【<80><fd>^E<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80><fd>^E】
 mode:【v to v】
 start error 【<80><fd>^E】
 error2 【<80><fd>^E】
 after error 【<80><fd>^E】
 brefore retry : s:char=【<80><fd>^E】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80><fd>^E】
 before_getchar【<80><fd>^E】
【l:map】<S-Down>    * $<C-D>
【after get esc】
 after_if【<80><fd>^E】
 before_exit【<80><fd>^E】
 after_exit【<80><fd>^E】
is_special_key = 0
 before start_loop【<80><fd>^E】
 after start_loop【<80><fd>^E】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80><fd>^E】
 type(c)=【0】
 before 【<80><fd>^E<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80><fd>^E】
 mode:【v to v】
 start error 【<80><fd>^E】
 error2 【<80><fd>^E】
 after error 【<80><fd>^E】
 brefore retry : s:char=【<80><fd>^E】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80><fd>^E】
 before_getchar【<80><fd>^E】
【l:map】<S-Down>    * $<C-D>
【after get esc】
 after_if【<80><fd>^E】
 before_exit【<80><fd>^E】
 after_exit【<80><fd>^E】
is_special_key = 0
 before start_loop【<80><fd>^E】
 after start_loop【<80><fd>^E】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80><fd>^E】
 type(c)=【0】
 before 【<80><fd>^E<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
invalid input: from mode v to 
now mode: v
after invalid input: from mode v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80><fd>^E】
 mode:【v to v】
 start error 【<80><fd>^E】
 error2 【<80><fd>^E】
 can't be replayed in 1cursors 【<80><fd>^E】
 after error 【<80><fd>^E】
 brefore retry : s:char=【<80><fd>^E】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80><fd>^E】
 before_getchar【<80><fd>^E】
【l:map】<S-Down>    * $<C-D>
【after get esc】
 after_if【<80><fd>^E】
 before_exit【<80><fd>^E】
 after_exit【<80><fd>^E】
is_special_key = 0
 before start_loop【<80><fd>^E】
 after start_loop【<80><fd>^E】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80><fd>^E】
 type(c)=【0】
 before 【<80><fd>^E<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
invalid input: from mode v to 
now mode: v
after invalid input: from mode v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80><fd>^E】
 mode:【v to v】
 start error 【<80><fd>^E】
 error2 【<80><fd>^E】
 can't be replayed in 1cursors 【<80><fd>^E】
 after error 【<80><fd>^E】
 brefore retry : s:char=【<80><fd>^E】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80><fd>^E】
 before_getchar【<80><fd>^E】
【l:map】<S-Down>    * $<C-D>
【after get esc】
 after_if【<80><fd>^E】
 before_exit【<80><fd>^E】
 after_exit【<80><fd>^E】
is_special_key = 0
 before start_loop【<80><fd>^E】
 after start_loop【<80><fd>^E】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80><fd>^E】
 type(c)=【0】
 before 【<80><fd>^E<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
invalid input: from mode v to 
now mode: v
after invalid input: from mode v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80><fd>^E】
 mode:【v to v】
 start error 【<80><fd>^E】
 error2 【<80><fd>^E】
 can't be replayed in 1cursors 【<80><fd>^E】
 after error 【<80><fd>^E】
 brefore retry : s:char=【<80><fd>^E】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80><fd>^E】
 before_getchar【<80><fd>^E】
【l:map】<S-Down>    * $<C-D>
【after get esc】
 after_if【<80><fd>^E】
 before_exit【<80><fd>^E】
 after_exit【<80><fd>^E】
is_special_key = 0
 before start_loop【<80><fd>^E】
 after start_loop【<80><fd>^E】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80><fd>^E】
 type(c)=【0】
 before 【<80><fd>^E<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
invalid input: from mode v to 
now mode: v
after invalid input: from mode v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80><fd>^E】
 mode:【v to v】
 start error 【<80><fd>^E】
 error2 【<80><fd>^E】
 can't be replayed in 1cursors 【<80><fd>^E】
 after error 【<80><fd>^E】
 brefore retry : s:char=【<80><fd>^E】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80><fd>^E】
 before_getchar【<80><fd>^E】
【l:map】<S-Down>    * $<C-D>
【after get esc】
 after_if【<80><fd>^E】
 before_exit【<80><fd>^E】
 after_exit【<80><fd>^E】
is_special_key = 0
 before start_loop【<80><fd>^E】
 after start_loop【<80><fd>^E】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80><fd>^E】
 type(c)=【0】
 before 【<80><fd>^E<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
invalid input: from mode v to 
now mode: v
after invalid input: from mode v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80><fd>^E】
 mode:【v to v】
 start error 【<80><fd>^E】
 error2 【<80><fd>^E】
 can't be replayed in 1cursors 【<80><fd>^E】
 after error 【<80><fd>^E】
 brefore retry : s:char=【<80><fd>^E】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80><fd>^E】
 before_getchar【<80><fd>^E】
【l:map】<S-Down>    * $<C-D>
【after get esc】
 after_if【<80><fd>^E】
 before_exit【<80><fd>^E】
 after_exit【<80><fd>^E】
is_special_key = 0
 before start_loop【<80><fd>^E】
 after start_loop【<80><fd>^E】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80><fd>^E】
 type(c)=【0】
 before 【<80><fd>^E<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
invalid input: from mode v to 
now mode: v
after invalid input: from mode v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80><fd>^E】
 mode:【v to v】
 start error 【<80><fd>^E】
 error2 【<80><fd>^E】
 can't be replayed in 1cursors 【<80><fd>^E】
 after error 【<80><fd>^E】
 brefore retry : s:char=【<80><fd>^E】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80><fd>^E】
 before_getchar【<80><fd>^E】
【l:map】<S-Down>    * $<C-D>
【after get esc】
 after_if【<80><fd>^E】
 before_exit【<80><fd>^E】
 after_exit【<80><fd>^E】
is_special_key = 0
 before start_loop【<80><fd>^E】
 after start_loop【<80><fd>^E】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80><fd>^E】
 type(c)=【0】
 before 【<80><fd>^E<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
invalid input: from mode v to 
now mode: v
after invalid input: from mode v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80><fd>^E】
 mode:【v to v】
 start error 【<80><fd>^E】
 error2 【<80><fd>^E】
 can't be replayed in 1cursors 【<80><fd>^E】
 after error 【<80><fd>^E】
 brefore retry : s:char=【<80><fd>^E】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80><fd>^E】
 before_getchar【<80><fd>^E】
【l:map】<S-Down>    * $<C-D>
【after get esc】
 after_if【<80><fd>^E】
 before_exit【<80><fd>^E】
 after_exit【<80><fd>^E】
is_special_key = 0
 before start_loop【<80><fd>^E】
 after start_loop【<80><fd>^E】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80><fd>^E】
 type(c)=【0】
 before 【<80><fd>^E<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
invalid input: from mode v to 
now mode: v
after invalid input: from mode v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80><fd>^E】
 mode:【v to v】
 start error 【<80><fd>^E】
 error2 【<80><fd>^E】
 can't be replayed in 1cursors 【<80><fd>^E】
 after error 【<80><fd>^E】
 brefore retry : s:char=【<80><fd>^E】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80><fd>^E】
 before_getchar【<80><fd>^E】
【l:map】<S-Down>    * $<C-D>
【after get esc】
 after_if【<80><fd>^E】
 before_exit【<80><fd>^E】
 after_exit【<80><fd>^E】
is_special_key = 0
 before start_loop【<80><fd>^E】
 after start_loop【<80><fd>^E】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80><fd>^E】
 type(c)=【0】
 before 【<80><fd>^E<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
invalid input: from mode v to 
now mode: v
after invalid input: from mode v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80><fd>^E】
 mode:【v to v】
 start error 【<80><fd>^E】
 error2 【<80><fd>^E】
 can't be replayed in 1cursors 【<80><fd>^E】
 after error 【<80><fd>^E】
 brefore retry : s:char=【<80><fd>^E】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【^[】
 before_getchar【^[】
【l:map】<Esc>[4~      <End>
【get esc】
【char_mapping】
【l:map】<Esc>[4~      <End>
【char_mapping】
【l:map】<Esc>[4~      <End>
【char_mapping】
【l:map】<Esc>[4~      <End>
【char_mapping】
【l:map】<Esc>[4~      <End>
【char_mapping】
【l:map】<Esc>[4~      <End>
【char_mapping】
【l:map】<Esc>[4~      <End>
【char_mapping】
【l:map】<Esc>[4~      <End>
【char_mapping】
【l:map】<Esc>[4~      <End>
【char_mapping】
【l:map】<Esc>[4~      <End>
【char_mapping】
【l:map】<Esc>[4~      <End>
【char_mapping】
【l:map】<Esc>[4~      <End>
【char_mapping】
【l:map】<Esc>[4~      <End>
【char_mapping】
【l:map】<Esc>[4~      <End>
【char_mapping】
【l:map】<Esc>[4~      <End>
【char_mapping】
【l:map】<Esc>[4~      <End>
【char_mapping】
【l:map】<Esc>[4~      <End>
【char_mapping】
【l:map】<Esc>[4~      <End>
【char_mapping】
【l:map】<Esc>[4~      <End>
【after get esc】
 after_if【^[】
 before_exit【^[】
 after_exit【^[】
is_special_key = 0
 before start_loop【^[】
 after start_loop【^[】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【^[】
 type(c)=【0】
 before 【^[<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to n
before mc-input3: from v to n
before mc-input4: from v to n
after mc-input: from v to n
 start 【^[】
 mode:【v to n】
 start error 【^[】
 error2 【^[】
 after error 【^[】
 brefore retry : s:char=【^[】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【^W】
 before_getchar【^W】
【l:map】<C-W>       * :q<CR>
【after get esc】
 after_if【^W】
 before_exit【^W】
 after_exit【^W】
is_special_key = 0
 before start_loop【^W】
 after start_loop【^W】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from n to 
before apply【^W】
 type(c)=【0】
 before 【^W<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from n to 
before mc-detect: from n to 
after mc-detect: from n to 
invalid input: from mode n to 
now mode: n
after invalid input: from mode n to 
before mc-input: from n to 
before mc-input2: from n to n
before mc-input3: from n to n
before mc-input4: from n to n
after mc-input: from n to n
 start 【^W】
 mode:【n to n】
 start error 【^W】
 error2 【^W】
 can't be replayed in 1cursors 【^W】
 after error 【^W】
 brefore retry : s:char=【^W】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【^X】
 before_getchar【^X】
【l:map】<C-X>         :call NCtrlX()<CR>
【after get esc】
 after_if【^X】
 before_exit【^X】
 after_exit【^X】
is_special_key = 0
 before start_loop【^X】
 after start_loop【^X】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from n to 
before apply【^X】
 type(c)=【0】
 before 【^X<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from n to 
before mc-detect: from n to 
after mc-detect: from n to 
before mc-input: from n to 
before mc-input2: from n to n
before mc-input3: from n to n
before mc-input4: from n to n
after mc-input: from n to n
 start 【^X】
 mode:【n to n】
 start error 【^X】
 error2 【^X】
 after error 【^X】
 brefore retry : s:char=【^X】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【^W】
 before_getchar【^W】
【l:map】<C-W>       * :q<CR>
【after get esc】
 after_if【^W】
 before_exit【^W】
 after_exit【^W】
is_special_key = 0
 before start_loop【^W】
 after start_loop【^W】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from n to 
before apply【^W】
 type(c)=【0】
 before 【^W<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from n to 
before mc-detect: from n to 
after mc-detect: from n to 
invalid input: from mode n to 
now mode: n
after invalid input: from mode n to 
before mc-input: from n to 
before mc-input2: from n to n
before mc-input3: from n to n
before mc-input4: from n to n
after mc-input: from n to n
 start 【^W】
 mode:【n to n】
 start error 【^W】
 error2 【^W】
 can't be replayed in 1cursors 【^W】
 after error 【^W】
 brefore retry : s:char=【^W】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80><fd>,】
 before_getchar【<80><fd>,】
【l:map】<LeftMouse> * :MarkClear<CR><LeftMouse>
【after get esc】
 after_if【<80><fd>,】
 before_exit【<80><fd>,】
 after_exit【<80><fd>,】
is_special_key = 0
 before start_loop【<80><fd>,】
 after start_loop【<80><fd>,】
 type(c)=【1】
 c 【<80><fd>.】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【<80><fd>.】
before apply2 from n to 
before apply【<80><fd>,】
 type(c)=【0】
 before 【<80><fd>,<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【<80><fd>.】
after apply2 from n to 
before mc-detect: from n to 
after mc-detect: from n to 
before mc-input: from n to 
before mc-input2: from n to n
before mc-input3: from n to n
before mc-input4: from n to n
after mc-input: from n to n
 start 【<80><fd>,】
 mode:【n to n】
 start error 【<80><fd>,】
 error2 【<80><fd>,】
 after error 【<80><fd>,】
 brefore retry : s:char=【<80><fd>,】
 s:retry_keys=【】
 s:saved_keys=【<80><fd>.】
 before_if【<80><fd>.】
 before_getchar【<80><fd>.】
【l:map】<Plug>(multiple-cursors-new-word) * :<C-U>call multiple_cursors#new('v', 1)<CR>
【after get esc】
 after_if【<80><fd>.】
 before_exit【<80><fd>.】
 after_exit【<80><fd>.】
is_special_key = 0
 before start_loop【<80><fd>.】
 after start_loop【<80><fd>.】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from n to 
before apply【<80><fd>.】
 type(c)=【0】
 before 【<80><fd>.<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from n to 
before mc-detect: from n to 
after mc-detect: from n to 
before mc-input: from n to 
before mc-input2: from n to n
before mc-input3: from n to n
before mc-input4: from n to n
after mc-input: from n to n
 start 【<80><fd>.】
 mode:【n to n】
 start error 【<80><fd>.】
 error2 【<80><fd>.】
 after error 【<80><fd>.】
 brefore retry : s:char=【<80><fd>.】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【^W】
 before_getchar【^W】
【l:map】<C-W>       * :q<CR>
【after get esc】
 after_if【^W】
 before_exit【^W】
 after_exit【^W】
is_special_key = 0
 before start_loop【^W】
 after start_loop【^W】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from n to 
before apply【^W】
 type(c)=【0】
 before 【^W<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from n to 
before mc-detect: from n to 
after mc-detect: from n to 
invalid input: from mode n to 
now mode: n
after invalid input: from mode n to 
before mc-input: from n to 
before mc-input2: from n to n
before mc-input3: from n to n
before mc-input4: from n to n
after mc-input: from n to n
 start 【^W】
 mode:【n to n】
 start error 【^W】
 error2 【^W】
 can't be replayed in 1cursors 【^W】
 after error 【^W】
 brefore retry : s:char=【^W】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【^D】
 before_getchar【^D】
【l:map】<C-D>       * :call multiple_cursors#new("n", 1)<CR>
【after get esc】
 after_if【^D】
 before_exit【^D】
 after_exit【^D】
is_special_key = 1
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-new-word)】
 feedkesys s:saved_keys=【】
 start 【^D】
 mode:【n to 】
 start error 【^D】
 error2 【^D】
 after error 【^D】
 brefore retry : s:char=【^D】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【≈】
 before_getchar【≈】
【after get esc】
 after_if【≈】
 before_exit【≈】
 start 【】
 mode:【 to 】
 start error 【】
 error2 【】
 after error 【】
 brefore retry : s:char=【】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kN】
 before_getchar【<80>kN】
【l:map】<PageDown>  * z+$
【after get esc】
 after_if【<80>kN】
 before_exit【<80>kN】
 after_exit【<80>kN】
is_special_key = 0
 before start_loop【<80>kN】
 after start_loop【<80>kN】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kN】
 type(c)=【0】
 before 【<80>kN<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kN】
 mode:【v to v】
 start error 【<80>kN】
 error2 【<80>kN】
 after error 【<80>kN】
 brefore retry : s:char=【<80>kN】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kN】
 before_getchar【<80>kN】
【l:map】<PageDown>  * z+$
【after get esc】
 after_if【<80>kN】
 before_exit【<80>kN】
 after_exit【<80>kN】
is_special_key = 0
 before start_loop【<80>kN】
 after start_loop【<80>kN】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kN】
 type(c)=【0】
 before 【<80>kN<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kN】
 mode:【v to v】
 start error 【<80>kN】
 error2 【<80>kN】
 after error 【<80>kN】
 brefore retry : s:char=【<80>kN】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kN】
 before_getchar【<80>kN】
【l:map】<PageDown>  * z+$
【after get esc】
 after_if【<80>kN】
 before_exit【<80>kN】
 after_exit【<80>kN】
is_special_key = 0
 before start_loop【<80>kN】
 after start_loop【<80>kN】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kN】
 type(c)=【0】
 before 【<80>kN<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kN】
 mode:【v to v】
 start error 【<80>kN】
 error2 【<80>kN】
 after error 【<80>kN】
 brefore retry : s:char=【<80>kN】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kN】
 before_getchar【<80>kN】
【l:map】<PageDown>  * z+$
【after get esc】
 after_if【<80>kN】
 before_exit【<80>kN】
 after_exit【<80>kN】
is_special_key = 0
 before start_loop【<80>kN】
 after start_loop【<80>kN】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kN】
 type(c)=【0】
 before 【<80>kN<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kN】
 mode:【v to v】
 start error 【<80>kN】
 error2 【<80>kN】
 after error 【<80>kN】
 brefore retry : s:char=【<80>kN】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kN】
 before_getchar【<80>kN】
【l:map】<PageDown>  * z+$
【after get esc】
 after_if【<80>kN】
 before_exit【<80>kN】
 after_exit【<80>kN】
is_special_key = 0
 before start_loop【<80>kN】
 after start_loop【<80>kN】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kN】
 type(c)=【0】
 before 【<80>kN<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kN】
 mode:【v to v】
 start error 【<80>kN】
 error2 【<80>kN】
 after error 【<80>kN】
 brefore retry : s:char=【<80>kN】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kN】
 before_getchar【<80>kN】
【l:map】<PageDown>  * z+$
【after get esc】
 after_if【<80>kN】
 before_exit【<80>kN】
 after_exit【<80>kN】
is_special_key = 0
 before start_loop【<80>kN】
 after start_loop【<80>kN】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kN】
 type(c)=【0】
 before 【<80>kN<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kN】
 mode:【v to v】
 start error 【<80>kN】
 error2 【<80>kN】
 after error 【<80>kN】
 brefore retry : s:char=【<80>kN】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kN】
 before_getchar【<80>kN】
【l:map】<PageDown>  * z+$
【after get esc】
 after_if【<80>kN】
 before_exit【<80>kN】
 after_exit【<80>kN】
is_special_key = 0
 before start_loop【<80>kN】
 after start_loop【<80>kN】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kN】
 type(c)=【0】
 before 【<80>kN<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kN】
 mode:【v to v】
 start error 【<80>kN】
 error2 【<80>kN】
 after error 【<80>kN】
 brefore retry : s:char=【<80>kN】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kN】
 before_getchar【<80>kN】
【l:map】<PageDown>  * z+$
【after get esc】
 after_if【<80>kN】
 before_exit【<80>kN】
 after_exit【<80>kN】
is_special_key = 0
 before start_loop【<80>kN】
 after start_loop【<80>kN】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kN】
 type(c)=【0】
 before 【<80>kN<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kN】
 mode:【v to v】
 start error 【<80>kN】
 error2 【<80>kN】
 after error 【<80>kN】
 brefore retry : s:char=【<80>kN】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kN】
 before_getchar【<80>kN】
【l:map】<PageDown>  * z+$
【after get esc】
 after_if【<80>kN】
 before_exit【<80>kN】
 after_exit【<80>kN】
is_special_key = 0
 before start_loop【<80>kN】
 after start_loop【<80>kN】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kN】
 type(c)=【0】
 before 【<80>kN<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kN】
 mode:【v to v】
 start error 【<80>kN】
 error2 【<80>kN】
 after error 【<80>kN】
 brefore retry : s:char=【<80>kN】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kN】
 before_getchar【<80>kN】
【l:map】<PageDown>  * z+$
【after get esc】
 after_if【<80>kN】
 before_exit【<80>kN】
 after_exit【<80>kN】
is_special_key = 0
 before start_loop【<80>kN】
 after start_loop【<80>kN】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kN】
 type(c)=【0】
 before 【<80>kN<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kN】
 mode:【v to v】
 start error 【<80>kN】
 error2 【<80>kN】
 after error 【<80>kN】
 brefore retry : s:char=【<80>kN】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kN】
 before_getchar【<80>kN】
【l:map】<PageDown>  * z+$
【after get esc】
 after_if【<80>kN】
 before_exit【<80>kN】
 after_exit【<80>kN】
is_special_key = 0
 before start_loop【<80>kN】
 after start_loop【<80>kN】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kN】
 type(c)=【0】
 before 【<80>kN<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kN】
 mode:【v to v】
 start error 【<80>kN】
 error2 【<80>kN】
 after error 【<80>kN】
 brefore retry : s:char=【<80>kN】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kN】
 before_getchar【<80>kN】
【l:map】<PageDown>  * z+$
【after get esc】
 after_if【<80>kN】
 before_exit【<80>kN】
 after_exit【<80>kN】
is_special_key = 0
 before start_loop【<80>kN】
 after start_loop【<80>kN】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kN】
 type(c)=【0】
 before 【<80>kN<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kN】
 mode:【v to v】
 start error 【<80>kN】
 error2 【<80>kN】
 after error 【<80>kN】
 brefore retry : s:char=【<80>kN】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kN】
 before_getchar【<80>kN】
【l:map】<PageDown>  * z+$
【after get esc】
 after_if【<80>kN】
 before_exit【<80>kN】
 after_exit【<80>kN】
is_special_key = 0
 before start_loop【<80>kN】
 after start_loop【<80>kN】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kN】
 type(c)=【0】
 before 【<80>kN<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kN】
 mode:【v to v】
 start error 【<80>kN】
 error2 【<80>kN】
 after error 【<80>kN】
 brefore retry : s:char=【<80>kN】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kN】
 before_getchar【<80>kN】
【l:map】<PageDown>  * z+$
【after get esc】
 after_if【<80>kN】
 before_exit【<80>kN】
 after_exit【<80>kN】
is_special_key = 0
 before start_loop【<80>kN】
 after start_loop【<80>kN】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kN】
 type(c)=【0】
 before 【<80>kN<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kN】
 mode:【v to v】
 start error 【<80>kN】
 error2 【<80>kN】
 after error 【<80>kN】
 brefore retry : s:char=【<80>kN】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kN】
 before_getchar【<80>kN】
【l:map】<PageDown>  * z+$
【after get esc】
 after_if【<80>kN】
 before_exit【<80>kN】
 after_exit【<80>kN】
is_special_key = 0
 before start_loop【<80>kN】
 after start_loop【<80>kN】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kN】
 type(c)=【0】
 before 【<80>kN<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kN】
 mode:【v to v】
 start error 【<80>kN】
 error2 【<80>kN】
 after error 【<80>kN】
 brefore retry : s:char=【<80>kN】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kN】
 before_getchar【<80>kN】
【l:map】<PageDown>  * z+$
【after get esc】
 after_if【<80>kN】
 before_exit【<80>kN】
 after_exit【<80>kN】
is_special_key = 0
 before start_loop【<80>kN】
 after start_loop【<80>kN】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kN】
 type(c)=【0】
 before 【<80>kN<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kN】
 mode:【v to v】
 start error 【<80>kN】
 error2 【<80>kN】
 after error 【<80>kN】
 brefore retry : s:char=【<80>kN】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kN】
 before_getchar【<80>kN】
【l:map】<PageDown>  * z+$
【after get esc】
 after_if【<80>kN】
 before_exit【<80>kN】
 after_exit【<80>kN】
is_special_key = 0
 before start_loop【<80>kN】
 after start_loop【<80>kN】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kN】
 type(c)=【0】
 before 【<80>kN<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kN】
 mode:【v to v】
 start error 【<80>kN】
 error2 【<80>kN】
 after error 【<80>kN】
 brefore retry : s:char=【<80>kN】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kN】
 before_getchar【<80>kN】
【l:map】<PageDown>  * z+$
【after get esc】
 after_if【<80>kN】
 before_exit【<80>kN】
 after_exit【<80>kN】
is_special_key = 0
 before start_loop【<80>kN】
 after start_loop【<80>kN】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kN】
 type(c)=【0】
 before 【<80>kN<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kN】
 mode:【v to v】
 start error 【<80>kN】
 error2 【<80>kN】
 after error 【<80>kN】
 brefore retry : s:char=【<80>kN】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kN】
 before_getchar【<80>kN】
【l:map】<PageDown>  * z+$
【after get esc】
 after_if【<80>kN】
 before_exit【<80>kN】
 after_exit【<80>kN】
is_special_key = 0
 before start_loop【<80>kN】
 after start_loop【<80>kN】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kN】
 type(c)=【0】
 before 【<80>kN<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kN】
 mode:【v to v】
 start error 【<80>kN】
 error2 【<80>kN】
 after error 【<80>kN】
 brefore retry : s:char=【<80>kN】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kN】
 before_getchar【<80>kN】
【l:map】<PageDown>  * z+$
【after get esc】
 after_if【<80>kN】
 before_exit【<80>kN】
 after_exit【<80>kN】
is_special_key = 0
 before start_loop【<80>kN】
 after start_loop【<80>kN】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kN】
 type(c)=【0】
 before 【<80>kN<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kN】
 mode:【v to v】
 start error 【<80>kN】
 error2 【<80>kN】
 after error 【<80>kN】
 brefore retry : s:char=【<80>kN】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kN】
 before_getchar【<80>kN】
【l:map】<PageDown>  * z+$
【after get esc】
 after_if【<80>kN】
 before_exit【<80>kN】
 after_exit【<80>kN】
is_special_key = 0
 before start_loop【<80>kN】
 after start_loop【<80>kN】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kN】
 type(c)=【0】
 before 【<80>kN<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kN】
 mode:【v to v】
 start error 【<80>kN】
 error2 【<80>kN】
 after error 【<80>kN】
 brefore retry : s:char=【<80>kN】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kN】
 before_getchar【<80>kN】
【l:map】<PageDown>  * z+$
【after get esc】
 after_if【<80>kN】
 before_exit【<80>kN】
 after_exit【<80>kN】
is_special_key = 0
 before start_loop【<80>kN】
 after start_loop【<80>kN】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kN】
 type(c)=【0】
 before 【<80>kN<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kN】
 mode:【v to v】
 start error 【<80>kN】
 error2 【<80>kN】
 after error 【<80>kN】
 brefore retry : s:char=【<80>kN】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kN】
 before_getchar【<80>kN】
【l:map】<PageDown>  * z+$
【after get esc】
 after_if【<80>kN】
 before_exit【<80>kN】
 after_exit【<80>kN】
is_special_key = 0
 before start_loop【<80>kN】
 after start_loop【<80>kN】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kN】
 type(c)=【0】
 before 【<80>kN<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kN】
 mode:【v to v】
 start error 【<80>kN】
 error2 【<80>kN】
 after error 【<80>kN】
 brefore retry : s:char=【<80>kN】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kN】
 before_getchar【<80>kN】
【l:map】<PageDown>  * z+$
【after get esc】
 after_if【<80>kN】
 before_exit【<80>kN】
 after_exit【<80>kN】
is_special_key = 0
 before start_loop【<80>kN】
 after start_loop【<80>kN】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kN】
 type(c)=【0】
 before 【<80>kN<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kN】
 mode:【v to v】
 start error 【<80>kN】
 error2 【<80>kN】
 after error 【<80>kN】
 brefore retry : s:char=【<80>kN】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kN】
 before_getchar【<80>kN】
【l:map】<PageDown>  * z+$
【after get esc】
 after_if【<80>kN】
 before_exit【<80>kN】
 after_exit【<80>kN】
is_special_key = 0
 before start_loop【<80>kN】
 after start_loop【<80>kN】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kN】
 type(c)=【0】
 before 【<80>kN<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kN】
 mode:【v to v】
 start error 【<80>kN】
 error2 【<80>kN】
 after error 【<80>kN】
 brefore retry : s:char=【<80>kN】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kN】
 before_getchar【<80>kN】
【l:map】<PageDown>  * z+$
【after get esc】
 after_if【<80>kN】
 before_exit【<80>kN】
 after_exit【<80>kN】
is_special_key = 0
 before start_loop【<80>kN】
 after start_loop【<80>kN】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kN】
 type(c)=【0】
 before 【<80>kN<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kN】
 mode:【v to v】
 start error 【<80>kN】
 error2 【<80>kN】
 after error 【<80>kN】
 brefore retry : s:char=【<80>kN】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kN】
 before_getchar【<80>kN】
【l:map】<PageDown>  * z+$
【after get esc】
 after_if【<80>kN】
 before_exit【<80>kN】
 after_exit【<80>kN】
is_special_key = 0
 before start_loop【<80>kN】
 after start_loop【<80>kN】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kN】
 type(c)=【0】
 before 【<80>kN<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kN】
 mode:【v to v】
 start error 【<80>kN】
 error2 【<80>kN】
 after error 【<80>kN】
 brefore retry : s:char=【<80>kN】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kN】
 before_getchar【<80>kN】
【l:map】<PageDown>  * z+$
【after get esc】
 after_if【<80>kN】
 before_exit【<80>kN】
 after_exit【<80>kN】
is_special_key = 0
 before start_loop【<80>kN】
 after start_loop【<80>kN】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kN】
 type(c)=【0】
 before 【<80>kN<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kN】
 mode:【v to v】
 start error 【<80>kN】
 error2 【<80>kN】
 after error 【<80>kN】
 brefore retry : s:char=【<80>kN】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kN】
 before_getchar【<80>kN】
【l:map】<PageDown>  * z+$
【after get esc】
 after_if【<80>kN】
 before_exit【<80>kN】
 after_exit【<80>kN】
is_special_key = 0
 before start_loop【<80>kN】
 after start_loop【<80>kN】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kN】
 type(c)=【0】
 before 【<80>kN<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kN】
 mode:【v to v】
 start error 【<80>kN】
 error2 【<80>kN】
 after error 【<80>kN】
 brefore retry : s:char=【<80>kN】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kN】
 before_getchar【<80>kN】
【l:map】<PageDown>  * z+$
【after get esc】
 after_if【<80>kN】
 before_exit【<80>kN】
 after_exit【<80>kN】
is_special_key = 0
 before start_loop【<80>kN】
 after start_loop【<80>kN】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kN】
 type(c)=【0】
 before 【<80>kN<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kN】
 mode:【v to v】
 start error 【<80>kN】
 error2 【<80>kN】
 after error 【<80>kN】
 brefore retry : s:char=【<80>kN】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kN】
 before_getchar【<80>kN】
【l:map】<PageDown>  * z+$
【after get esc】
 after_if【<80>kN】
 before_exit【<80>kN】
 after_exit【<80>kN】
is_special_key = 0
 before start_loop【<80>kN】
 after start_loop【<80>kN】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kN】
 type(c)=【0】
 before 【<80>kN<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kN】
 mode:【v to v】
 start error 【<80>kN】
 error2 【<80>kN】
 after error 【<80>kN】
 brefore retry : s:char=【<80>kN】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kN】
 before_getchar【<80>kN】
【l:map】<PageDown>  * z+$
【after get esc】
 after_if【<80>kN】
 before_exit【<80>kN】
 after_exit【<80>kN】
is_special_key = 0
 before start_loop【<80>kN】
 after start_loop【<80>kN】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kN】
 type(c)=【0】
 before 【<80>kN<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kN】
 mode:【v to v】
 start error 【<80>kN】
 error2 【<80>kN】
 after error 【<80>kN】
 brefore retry : s:char=【<80>kN】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kN】
 before_getchar【<80>kN】
【l:map】<PageDown>  * z+$
【after get esc】
 after_if【<80>kN】
 before_exit【<80>kN】
 after_exit【<80>kN】
is_special_key = 0
 before start_loop【<80>kN】
 after start_loop【<80>kN】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kN】
 type(c)=【0】
 before 【<80>kN<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kN】
 mode:【v to v】
 start error 【<80>kN】
 error2 【<80>kN】
 after error 【<80>kN】
 brefore retry : s:char=【<80>kN】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kN】
 before_getchar【<80>kN】
【l:map】<PageDown>  * z+$
【after get esc】
 after_if【<80>kN】
 before_exit【<80>kN】
 after_exit【<80>kN】
is_special_key = 0
 before start_loop【<80>kN】
 after start_loop【<80>kN】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kN】
 type(c)=【0】
 before 【<80>kN<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kN】
 mode:【v to v】
 start error 【<80>kN】
 error2 【<80>kN】
 after error 【<80>kN】
 brefore retry : s:char=【<80>kN】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kN】
 before_getchar【<80>kN】
【l:map】<PageDown>  * z+$
【after get esc】
 after_if【<80>kN】
 before_exit【<80>kN】
 after_exit【<80>kN】
is_special_key = 0
 before start_loop【<80>kN】
 after start_loop【<80>kN】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kN】
 type(c)=【0】
 before 【<80>kN<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kN】
 mode:【v to v】
 start error 【<80>kN】
 error2 【<80>kN】
 after error 【<80>kN】
 brefore retry : s:char=【<80>kN】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kN】
 before_getchar【<80>kN】
【l:map】<PageDown>  * z+$
【after get esc】
 after_if【<80>kN】
 before_exit【<80>kN】
 after_exit【<80>kN】
is_special_key = 0
 before start_loop【<80>kN】
 after start_loop【<80>kN】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kN】
 type(c)=【0】
 before 【<80>kN<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kN】
 mode:【v to v】
 start error 【<80>kN】
 error2 【<80>kN】
 after error 【<80>kN】
 brefore retry : s:char=【<80>kN】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kP】
 before_getchar【<80>kP】
【l:map】<PageUp>    * z^
【after get esc】
 after_if【<80>kP】
 before_exit【<80>kP】
 after_exit【<80>kP】
is_special_key = 0
 before start_loop【<80>kP】
 after start_loop【<80>kP】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kP】
 type(c)=【0】
 before 【<80>kP<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kP】
 mode:【v to v】
 start error 【<80>kP】
 error2 【<80>kP】
 after error 【<80>kP】
 brefore retry : s:char=【<80>kP】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kN】
 before_getchar【<80>kN】
【l:map】<PageDown>  * z+$
【after get esc】
 after_if【<80>kN】
 before_exit【<80>kN】
 after_exit【<80>kN】
is_special_key = 0
 before start_loop【<80>kN】
 after start_loop【<80>kN】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kN】
 type(c)=【0】
 before 【<80>kN<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kN】
 mode:【v to v】
 start error 【<80>kN】
 error2 【<80>kN】
 after error 【<80>kN】
 brefore retry : s:char=【<80>kN】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kN】
 before_getchar【<80>kN】
【l:map】<PageDown>  * z+$
【after get esc】
 after_if【<80>kN】
 before_exit【<80>kN】
 after_exit【<80>kN】
is_special_key = 0
 before start_loop【<80>kN】
 after start_loop【<80>kN】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kN】
 type(c)=【0】
 before 【<80>kN<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kN】
 mode:【v to v】
 start error 【<80>kN】
 error2 【<80>kN】
 after error 【<80>kN】
 brefore retry : s:char=【<80>kN】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kN】
 before_getchar【<80>kN】
【l:map】<PageDown>  * z+$
【after get esc】
 after_if【<80>kN】
 before_exit【<80>kN】
 after_exit【<80>kN】
is_special_key = 0
 before start_loop【<80>kN】
 after start_loop【<80>kN】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kN】
 type(c)=【0】
 before 【<80>kN<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kN】
 mode:【v to v】
 start error 【<80>kN】
 error2 【<80>kN】
 after error 【<80>kN】
 brefore retry : s:char=【<80>kN】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kN】
 before_getchar【<80>kN】
【l:map】<PageDown>  * z+$
【after get esc】
 after_if【<80>kN】
 before_exit【<80>kN】
 after_exit【<80>kN】
is_special_key = 0
 before start_loop【<80>kN】
 after start_loop【<80>kN】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kN】
 type(c)=【0】
 before 【<80>kN<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kN】
 mode:【v to v】
 start error 【<80>kN】
 error2 【<80>kN】
 after error 【<80>kN】
 brefore retry : s:char=【<80>kN】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kN】
 before_getchar【<80>kN】
【l:map】<PageDown>  * z+$
【after get esc】
 after_if【<80>kN】
 before_exit【<80>kN】
 after_exit【<80>kN】
is_special_key = 0
 before start_loop【<80>kN】
 after start_loop【<80>kN】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kN】
 type(c)=【0】
 before 【<80>kN<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kN】
 mode:【v to v】
 start error 【<80>kN】
 error2 【<80>kN】
 after error 【<80>kN】
 brefore retry : s:char=【<80>kN】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kN】
 before_getchar【<80>kN】
【l:map】<PageDown>  * z+$
【after get esc】
 after_if【<80>kN】
 before_exit【<80>kN】
 after_exit【<80>kN】
is_special_key = 0
 before start_loop【<80>kN】
 after start_loop【<80>kN】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kN】
 type(c)=【0】
 before 【<80>kN<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kN】
 mode:【v to v】
 start error 【<80>kN】
 error2 【<80>kN】
 after error 【<80>kN】
 brefore retry : s:char=【<80>kN】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kN】
 before_getchar【<80>kN】
【l:map】<PageDown>  * z+$
【after get esc】
 after_if【<80>kN】
 before_exit【<80>kN】
 after_exit【<80>kN】
is_special_key = 0
 before start_loop【<80>kN】
 after start_loop【<80>kN】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kN】
 type(c)=【0】
 before 【<80>kN<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kN】
 mode:【v to v】
 start error 【<80>kN】
 error2 【<80>kN】
 after error 【<80>kN】
 brefore retry : s:char=【<80>kN】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kN】
 before_getchar【<80>kN】
【l:map】<PageDown>  * z+$
【after get esc】
 after_if【<80>kN】
 before_exit【<80>kN】
 after_exit【<80>kN】
is_special_key = 0
 before start_loop【<80>kN】
 after start_loop【<80>kN】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kN】
 type(c)=【0】
 before 【<80>kN<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kN】
 mode:【v to v】
 start error 【<80>kN】
 error2 【<80>kN】
 after error 【<80>kN】
 brefore retry : s:char=【<80>kN】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kN】
 before_getchar【<80>kN】
【l:map】<PageDown>  * z+$
【after get esc】
 after_if【<80>kN】
 before_exit【<80>kN】
 after_exit【<80>kN】
is_special_key = 0
 before start_loop【<80>kN】
 after start_loop【<80>kN】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kN】
 type(c)=【0】
 before 【<80>kN<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kN】
 mode:【v to v】
 start error 【<80>kN】
 error2 【<80>kN】
 after error 【<80>kN】
 brefore retry : s:char=【<80>kN】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kN】
 before_getchar【<80>kN】
【l:map】<PageDown>  * z+$
【after get esc】
 after_if【<80>kN】
 before_exit【<80>kN】
 after_exit【<80>kN】
is_special_key = 0
 before start_loop【<80>kN】
 after start_loop【<80>kN】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kN】
 type(c)=【0】
 before 【<80>kN<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kN】
 mode:【v to v】
 start error 【<80>kN】
 error2 【<80>kN】
 after error 【<80>kN】
 brefore retry : s:char=【<80>kN】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kN】
 before_getchar【<80>kN】
【l:map】<PageDown>  * z+$
【after get esc】
 after_if【<80>kN】
 before_exit【<80>kN】
 after_exit【<80>kN】
is_special_key = 0
 before start_loop【<80>kN】
 after start_loop【<80>kN】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kN】
 type(c)=【0】
 before 【<80>kN<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kN】
 mode:【v to v】
 start error 【<80>kN】
 error2 【<80>kN】
 after error 【<80>kN】
 brefore retry : s:char=【<80>kN】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kN】
 before_getchar【<80>kN】
【l:map】<PageDown>  * z+$
【after get esc】
 after_if【<80>kN】
 before_exit【<80>kN】
 after_exit【<80>kN】
is_special_key = 0
 before start_loop【<80>kN】
 after start_loop【<80>kN】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kN】
 type(c)=【0】
 before 【<80>kN<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kN】
 mode:【v to v】
 start error 【<80>kN】
 error2 【<80>kN】
 after error 【<80>kN】
 brefore retry : s:char=【<80>kN】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kN】
 before_getchar【<80>kN】
【l:map】<PageDown>  * z+$
【after get esc】
 after_if【<80>kN】
 before_exit【<80>kN】
 after_exit【<80>kN】
is_special_key = 0
 before start_loop【<80>kN】
 after start_loop【<80>kN】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kN】
 type(c)=【0】
 before 【<80>kN<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kN】
 mode:【v to v】
 start error 【<80>kN】
 error2 【<80>kN】
 after error 【<80>kN】
 brefore retry : s:char=【<80>kN】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kN】
 before_getchar【<80>kN】
【l:map】<PageDown>  * z+$
【after get esc】
 after_if【<80>kN】
 before_exit【<80>kN】
 after_exit【<80>kN】
is_special_key = 0
 before start_loop【<80>kN】
 after start_loop【<80>kN】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kN】
 type(c)=【0】
 before 【<80>kN<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kN】
 mode:【v to v】
 start error 【<80>kN】
 error2 【<80>kN】
 after error 【<80>kN】
 brefore retry : s:char=【<80>kN】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kN】
 before_getchar【<80>kN】
【l:map】<PageDown>  * z+$
【after get esc】
 after_if【<80>kN】
 before_exit【<80>kN】
 after_exit【<80>kN】
is_special_key = 0
 before start_loop【<80>kN】
 after start_loop【<80>kN】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kN】
 type(c)=【0】
 before 【<80>kN<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kN】
 mode:【v to v】
 start error 【<80>kN】
 error2 【<80>kN】
 after error 【<80>kN】
 brefore retry : s:char=【<80>kN】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kN】
 before_getchar【<80>kN】
【l:map】<PageDown>  * z+$
【after get esc】
 after_if【<80>kN】
 before_exit【<80>kN】
 after_exit【<80>kN】
is_special_key = 0
 before start_loop【<80>kN】
 after start_loop【<80>kN】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kN】
 type(c)=【0】
 before 【<80>kN<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kN】
 mode:【v to v】
 start error 【<80>kN】
 error2 【<80>kN】
 after error 【<80>kN】
 brefore retry : s:char=【<80>kN】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kN】
 before_getchar【<80>kN】
【l:map】<PageDown>  * z+$
【after get esc】
 after_if【<80>kN】
 before_exit【<80>kN】
 after_exit【<80>kN】
is_special_key = 0
 before start_loop【<80>kN】
 after start_loop【<80>kN】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kN】
 type(c)=【0】
 before 【<80>kN<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kN】
 mode:【v to v】
 start error 【<80>kN】
 error2 【<80>kN】
 after error 【<80>kN】
 brefore retry : s:char=【<80>kN】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kN】
 before_getchar【<80>kN】
【l:map】<PageDown>  * z+$
【after get esc】
 after_if【<80>kN】
 before_exit【<80>kN】
 after_exit【<80>kN】
is_special_key = 0
 before start_loop【<80>kN】
 after start_loop【<80>kN】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kN】
 type(c)=【0】
 before 【<80>kN<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kN】
 mode:【v to v】
 start error 【<80>kN】
 error2 【<80>kN】
 after error 【<80>kN】
 brefore retry : s:char=【<80>kN】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kN】
 before_getchar【<80>kN】
【l:map】<PageDown>  * z+$
【after get esc】
 after_if【<80>kN】
 before_exit【<80>kN】
 after_exit【<80>kN】
is_special_key = 0
 before start_loop【<80>kN】
 after start_loop【<80>kN】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kN】
 type(c)=【0】
 before 【<80>kN<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kN】
 mode:【v to v】
 start error 【<80>kN】
 error2 【<80>kN】
 after error 【<80>kN】
 brefore retry : s:char=【<80>kN】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kN】
 before_getchar【<80>kN】
【l:map】<PageDown>  * z+$
【after get esc】
 after_if【<80>kN】
 before_exit【<80>kN】
 after_exit【<80>kN】
is_special_key = 0
 before start_loop【<80>kN】
 after start_loop【<80>kN】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kN】
 type(c)=【0】
 before 【<80>kN<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kN】
 mode:【v to v】
 start error 【<80>kN】
 error2 【<80>kN】
 after error 【<80>kN】
 brefore retry : s:char=【<80>kN】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kN】
 before_getchar【<80>kN】
【l:map】<PageDown>  * z+$
【after get esc】
 after_if【<80>kN】
 before_exit【<80>kN】
 after_exit【<80>kN】
is_special_key = 0
 before start_loop【<80>kN】
 after start_loop【<80>kN】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kN】
 type(c)=【0】
 before 【<80>kN<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kN】
 mode:【v to v】
 start error 【<80>kN】
 error2 【<80>kN】
 after error 【<80>kN】
 brefore retry : s:char=【<80>kN】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kN】
 before_getchar【<80>kN】
【l:map】<PageDown>  * z+$
【after get esc】
 after_if【<80>kN】
 before_exit【<80>kN】
 after_exit【<80>kN】
is_special_key = 0
 before start_loop【<80>kN】
 after start_loop【<80>kN】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kN】
 type(c)=【0】
 before 【<80>kN<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kN】
 mode:【v to v】
 start error 【<80>kN】
 error2 【<80>kN】
 after error 【<80>kN】
 brefore retry : s:char=【<80>kN】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kN】
 before_getchar【<80>kN】
【l:map】<PageDown>  * z+$
【after get esc】
 after_if【<80>kN】
 before_exit【<80>kN】
 after_exit【<80>kN】
is_special_key = 0
 before start_loop【<80>kN】
 after start_loop【<80>kN】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kN】
 type(c)=【0】
 before 【<80>kN<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kN】
 mode:【v to v】
 start error 【<80>kN】
 error2 【<80>kN】
 after error 【<80>kN】
 brefore retry : s:char=【<80>kN】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kN】
 before_getchar【<80>kN】
【l:map】<PageDown>  * z+$
【after get esc】
 after_if【<80>kN】
 before_exit【<80>kN】
 after_exit【<80>kN】
is_special_key = 0
 before start_loop【<80>kN】
 after start_loop【<80>kN】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kN】
 type(c)=【0】
 before 【<80>kN<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kN】
 mode:【v to v】
 start error 【<80>kN】
 error2 【<80>kN】
 after error 【<80>kN】
 brefore retry : s:char=【<80>kN】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kN】
 before_getchar【<80>kN】
【l:map】<PageDown>  * z+$
【after get esc】
 after_if【<80>kN】
 before_exit【<80>kN】
 after_exit【<80>kN】
is_special_key = 0
 before start_loop【<80>kN】
 after start_loop【<80>kN】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kN】
 type(c)=【0】
 before 【<80>kN<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kN】
 mode:【v to v】
 start error 【<80>kN】
 error2 【<80>kN】
 after error 【<80>kN】
 brefore retry : s:char=【<80>kN】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kN】
 before_getchar【<80>kN】
【l:map】<PageDown>  * z+$
【after get esc】
 after_if【<80>kN】
 before_exit【<80>kN】
 after_exit【<80>kN】
is_special_key = 0
 before start_loop【<80>kN】
 after start_loop【<80>kN】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kN】
 type(c)=【0】
 before 【<80>kN<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kN】
 mode:【v to v】
 start error 【<80>kN】
 error2 【<80>kN】
 after error 【<80>kN】
 brefore retry : s:char=【<80>kN】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kN】
 before_getchar【<80>kN】
【l:map】<PageDown>  * z+$
【after get esc】
 after_if【<80>kN】
 before_exit【<80>kN】
 after_exit【<80>kN】
is_special_key = 0
 before start_loop【<80>kN】
 after start_loop【<80>kN】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kN】
 type(c)=【0】
 before 【<80>kN<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kN】
 mode:【v to v】
 start error 【<80>kN】
 error2 【<80>kN】
 after error 【<80>kN】
 brefore retry : s:char=【<80>kN】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kN】
 before_getchar【<80>kN】
【l:map】<PageDown>  * z+$
【after get esc】
 after_if【<80>kN】
 before_exit【<80>kN】
 after_exit【<80>kN】
is_special_key = 0
 before start_loop【<80>kN】
 after start_loop【<80>kN】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kN】
 type(c)=【0】
 before 【<80>kN<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kN】
 mode:【v to v】
 start error 【<80>kN】
 error2 【<80>kN】
 after error 【<80>kN】
 brefore retry : s:char=【<80>kN】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kN】
 before_getchar【<80>kN】
【l:map】<PageDown>  * z+$
【after get esc】
 after_if【<80>kN】
 before_exit【<80>kN】
 after_exit【<80>kN】
is_special_key = 0
 before start_loop【<80>kN】
 after start_loop【<80>kN】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kN】
 type(c)=【0】
 before 【<80>kN<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kN】
 mode:【v to v】
 start error 【<80>kN】
 error2 【<80>kN】
 after error 【<80>kN】
 brefore retry : s:char=【<80>kN】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kN】
 before_getchar【<80>kN】
【l:map】<PageDown>  * z+$
【after get esc】
 after_if【<80>kN】
 before_exit【<80>kN】
 after_exit【<80>kN】
is_special_key = 0
 before start_loop【<80>kN】
 after start_loop【<80>kN】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kN】
 type(c)=【0】
 before 【<80>kN<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kN】
 mode:【v to v】
 start error 【<80>kN】
 error2 【<80>kN】
 after error 【<80>kN】
 brefore retry : s:char=【<80>kN】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kN】
 before_getchar【<80>kN】
【l:map】<PageDown>  * z+$
【after get esc】
 after_if【<80>kN】
 before_exit【<80>kN】
 after_exit【<80>kN】
is_special_key = 0
 before start_loop【<80>kN】
 after start_loop【<80>kN】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kN】
 type(c)=【0】
 before 【<80>kN<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kN】
 mode:【v to v】
 start error 【<80>kN】
 error2 【<80>kN】
 after error 【<80>kN】
 brefore retry : s:char=【<80>kN】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kN】
 before_getchar【<80>kN】
【l:map】<PageDown>  * z+$
【after get esc】
 after_if【<80>kN】
 before_exit【<80>kN】
 after_exit【<80>kN】
is_special_key = 0
 before start_loop【<80>kN】
 after start_loop【<80>kN】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kN】
 type(c)=【0】
 before 【<80>kN<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kN】
 mode:【v to v】
 start error 【<80>kN】
 error2 【<80>kN】
 after error 【<80>kN】
 brefore retry : s:char=【<80>kN】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kN】
 before_getchar【<80>kN】
【l:map】<PageDown>  * z+$
【after get esc】
 after_if【<80>kN】
 before_exit【<80>kN】
 after_exit【<80>kN】
is_special_key = 0
 before start_loop【<80>kN】
 after start_loop【<80>kN】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kN】
 type(c)=【0】
 before 【<80>kN<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kN】
 mode:【v to v】
 start error 【<80>kN】
 error2 【<80>kN】
 after error 【<80>kN】
 brefore retry : s:char=【<80>kN】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kN】
 before_getchar【<80>kN】
【l:map】<PageDown>  * z+$
【after get esc】
 after_if【<80>kN】
 before_exit【<80>kN】
 after_exit【<80>kN】
is_special_key = 0
 before start_loop【<80>kN】
 after start_loop【<80>kN】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kN】
 type(c)=【0】
 before 【<80>kN<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kN】
 mode:【v to v】
 start error 【<80>kN】
 error2 【<80>kN】
 after error 【<80>kN】
 brefore retry : s:char=【<80>kN】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kN】
 before_getchar【<80>kN】
【l:map】<PageDown>  * z+$
【after get esc】
 after_if【<80>kN】
 before_exit【<80>kN】
 after_exit【<80>kN】
is_special_key = 0
 before start_loop【<80>kN】
 after start_loop【<80>kN】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kN】
 type(c)=【0】
 before 【<80>kN<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kN】
 mode:【v to v】
 start error 【<80>kN】
 error2 【<80>kN】
 after error 【<80>kN】
 brefore retry : s:char=【<80>kN】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kN】
 before_getchar【<80>kN】
【l:map】<PageDown>  * z+$
【after get esc】
 after_if【<80>kN】
 before_exit【<80>kN】
 after_exit【<80>kN】
is_special_key = 0
 before start_loop【<80>kN】
 after start_loop【<80>kN】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kN】
 type(c)=【0】
 before 【<80>kN<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kN】
 mode:【v to v】
 start error 【<80>kN】
 error2 【<80>kN】
 after error 【<80>kN】
 brefore retry : s:char=【<80>kN】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kN】
 before_getchar【<80>kN】
【l:map】<PageDown>  * z+$
【after get esc】
 after_if【<80>kN】
 before_exit【<80>kN】
 after_exit【<80>kN】
is_special_key = 0
 before start_loop【<80>kN】
 after start_loop【<80>kN】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kN】
 type(c)=【0】
 before 【<80>kN<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kN】
 mode:【v to v】
 start error 【<80>kN】
 error2 【<80>kN】
 after error 【<80>kN】
 brefore retry : s:char=【<80>kN】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kN】
 before_getchar【<80>kN】
【l:map】<PageDown>  * z+$
【after get esc】
 after_if【<80>kN】
 before_exit【<80>kN】
 after_exit【<80>kN】
is_special_key = 0
 before start_loop【<80>kN】
 after start_loop【<80>kN】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kN】
 type(c)=【0】
 before 【<80>kN<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kN】
 mode:【v to v】
 start error 【<80>kN】
 error2 【<80>kN】
 after error 【<80>kN】
 brefore retry : s:char=【<80>kN】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kN】
 before_getchar【<80>kN】
【l:map】<PageDown>  * z+$
【after get esc】
 after_if【<80>kN】
 before_exit【<80>kN】
 after_exit【<80>kN】
is_special_key = 0
 before start_loop【<80>kN】
 after start_loop【<80>kN】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kN】
 type(c)=【0】
 before 【<80>kN<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kN】
 mode:【v to v】
 start error 【<80>kN】
 error2 【<80>kN】
 after error 【<80>kN】
 brefore retry : s:char=【<80>kN】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kN】
 before_getchar【<80>kN】
【l:map】<PageDown>  * z+$
【after get esc】
 after_if【<80>kN】
 before_exit【<80>kN】
 after_exit【<80>kN】
is_special_key = 0
 before start_loop【<80>kN】
 after start_loop【<80>kN】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kN】
 type(c)=【0】
 before 【<80>kN<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kN】
 mode:【v to v】
 start error 【<80>kN】
 error2 【<80>kN】
 after error 【<80>kN】
 brefore retry : s:char=【<80>kN】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kN】
 before_getchar【<80>kN】
【l:map】<PageDown>  * z+$
【after get esc】
 after_if【<80>kN】
 before_exit【<80>kN】
 after_exit【<80>kN】
is_special_key = 0
 before start_loop【<80>kN】
 after start_loop【<80>kN】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kN】
 type(c)=【0】
 before 【<80>kN<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kN】
 mode:【v to v】
 start error 【<80>kN】
 error2 【<80>kN】
 after error 【<80>kN】
 brefore retry : s:char=【<80>kN】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kN】
 before_getchar【<80>kN】
【l:map】<PageDown>  * z+$
【after get esc】
 after_if【<80>kN】
 before_exit【<80>kN】
 after_exit【<80>kN】
is_special_key = 0
 before start_loop【<80>kN】
 after start_loop【<80>kN】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kN】
 type(c)=【0】
 before 【<80>kN<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kN】
 mode:【v to v】
 start error 【<80>kN】
 error2 【<80>kN】
 after error 【<80>kN】
 brefore retry : s:char=【<80>kN】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kN】
 before_getchar【<80>kN】
【l:map】<PageDown>  * z+$
【after get esc】
 after_if【<80>kN】
 before_exit【<80>kN】
 after_exit【<80>kN】
is_special_key = 0
 before start_loop【<80>kN】
 after start_loop【<80>kN】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kN】
 type(c)=【0】
 before 【<80>kN<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kN】
 mode:【v to v】
 start error 【<80>kN】
 error2 【<80>kN】
 after error 【<80>kN】
 brefore retry : s:char=【<80>kN】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kN】
 before_getchar【<80>kN】
【l:map】<PageDown>  * z+$
【after get esc】
 after_if【<80>kN】
 before_exit【<80>kN】
 after_exit【<80>kN】
is_special_key = 0
 before start_loop【<80>kN】
 after start_loop【<80>kN】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kN】
 type(c)=【0】
 before 【<80>kN<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kN】
 mode:【v to v】
 start error 【<80>kN】
 error2 【<80>kN】
 after error 【<80>kN】
 brefore retry : s:char=【<80>kN】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kP】
 before_getchar【<80>kP】
【l:map】<PageUp>    * z^
【after get esc】
 after_if【<80>kP】
 before_exit【<80>kP】
 after_exit【<80>kP】
is_special_key = 0
 before start_loop【<80>kP】
 after start_loop【<80>kP】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kP】
 type(c)=【0】
 before 【<80>kP<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kP】
 mode:【v to v】
 start error 【<80>kP】
 error2 【<80>kP】
 after error 【<80>kP】
 brefore retry : s:char=【<80>kP】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kP】
 before_getchar【<80>kP】
【l:map】<PageUp>    * z^
【after get esc】
 after_if【<80>kP】
 before_exit【<80>kP】
 after_exit【<80>kP】
is_special_key = 0
 before start_loop【<80>kP】
 after start_loop【<80>kP】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kP】
 type(c)=【0】
 before 【<80>kP<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kP】
 mode:【v to v】
 start error 【<80>kP】
 error2 【<80>kP】
 after error 【<80>kP】
 brefore retry : s:char=【<80>kP】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kN】
 before_getchar【<80>kN】
【l:map】<PageDown>  * z+$
【after get esc】
 after_if【<80>kN】
 before_exit【<80>kN】
 after_exit【<80>kN】
is_special_key = 0
 before start_loop【<80>kN】
 after start_loop【<80>kN】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kN】
 type(c)=【0】
 before 【<80>kN<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kN】
 mode:【v to v】
 start error 【<80>kN】
 error2 【<80>kN】
 after error 【<80>kN】
 brefore retry : s:char=【<80>kN】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kN】
 before_getchar【<80>kN】
【l:map】<PageDown>  * z+$
【after get esc】
 after_if【<80>kN】
 before_exit【<80>kN】
 after_exit【<80>kN】
is_special_key = 0
 before start_loop【<80>kN】
 after start_loop【<80>kN】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kN】
 type(c)=【0】
 before 【<80>kN<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kN】
 mode:【v to v】
 start error 【<80>kN】
 error2 【<80>kN】
 after error 【<80>kN】
 brefore retry : s:char=【<80>kN】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kN】
 before_getchar【<80>kN】
【l:map】<PageDown>  * z+$
【after get esc】
 after_if【<80>kN】
 before_exit【<80>kN】
 after_exit【<80>kN】
is_special_key = 0
 before start_loop【<80>kN】
 after start_loop【<80>kN】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kN】
 type(c)=【0】
 before 【<80>kN<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kN】
 mode:【v to v】
 start error 【<80>kN】
 error2 【<80>kN】
 after error 【<80>kN】
 brefore retry : s:char=【<80>kN】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kN】
 before_getchar【<80>kN】
【l:map】<PageDown>  * z+$
【after get esc】
 after_if【<80>kN】
 before_exit【<80>kN】
 after_exit【<80>kN】
is_special_key = 0
 before start_loop【<80>kN】
 after start_loop【<80>kN】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kN】
 type(c)=【0】
 before 【<80>kN<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kN】
 mode:【v to v】
 start error 【<80>kN】
 error2 【<80>kN】
 after error 【<80>kN】
 brefore retry : s:char=【<80>kN】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kN】
 before_getchar【<80>kN】
【l:map】<PageDown>  * z+$
【after get esc】
 after_if【<80>kN】
 before_exit【<80>kN】
 after_exit【<80>kN】
is_special_key = 0
 before start_loop【<80>kN】
 after start_loop【<80>kN】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kN】
 type(c)=【0】
 before 【<80>kN<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kN】
 mode:【v to v】
 start error 【<80>kN】
 error2 【<80>kN】
 after error 【<80>kN】
 brefore retry : s:char=【<80>kN】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kN】
 before_getchar【<80>kN】
【l:map】<PageDown>  * z+$
【after get esc】
 after_if【<80>kN】
 before_exit【<80>kN】
 after_exit【<80>kN】
is_special_key = 0
 before start_loop【<80>kN】
 after start_loop【<80>kN】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kN】
 type(c)=【0】
 before 【<80>kN<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kN】
 mode:【v to v】
 start error 【<80>kN】
 error2 【<80>kN】
 after error 【<80>kN】
 brefore retry : s:char=【<80>kN】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【<80>kN】
 before_getchar【<80>kN】
【l:map】<PageDown>  * z+$
【after get esc】
 after_if【<80>kN】
 before_exit【<80>kN】
 after_exit【<80>kN】
is_special_key = 0
 before start_loop【<80>kN】
 after start_loop【<80>kN】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【<80>kN】
 type(c)=【0】
 before 【<80>kN<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to v
before mc-input3: from v to v
before mc-input4: from v to v
after mc-input: from v to v
 start 【<80>kN】
 mode:【v to v】
 start error 【<80>kN】
 error2 【<80>kN】
 after error 【<80>kN】
 brefore retry : s:char=【<80>kN】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【^[】
 before_getchar【^[】
【l:map】<Esc>[4~      <End>
【get esc】
【char_mapping】
【l:map】<Esc>[4~      <End>
【char_mapping】
【l:map】<Esc>[4~      <End>
【char_mapping】
【l:map】<Esc>[4~      <End>
【char_mapping】
【l:map】<Esc>[4~      <End>
【char_mapping】
【l:map】<Esc>[4~      <End>
【char_mapping】
【l:map】<Esc>[4~      <End>
【char_mapping】
【l:map】<Esc>[4~      <End>
【char_mapping】
【l:map】<Esc>[4~      <End>
【char_mapping】
【l:map】<Esc>[4~      <End>
【char_mapping】
【l:map】<Esc>[4~      <End>
【char_mapping】
【l:map】<Esc>[4~      <End>
【char_mapping】
【l:map】<Esc>[4~      <End>
【char_mapping】
【l:map】<Esc>[4~      <End>
【char_mapping】
【l:map】<Esc>[4~      <End>
【char_mapping】
【l:map】<Esc>[4~      <End>
【char_mapping】
【l:map】<Esc>[4~      <End>
【char_mapping】
【l:map】<Esc>[4~      <End>
【char_mapping】
【l:map】<Esc>[4~      <End>
【after get esc】
 after_if【^[】
 before_exit【^[】
 after_exit【^[】
is_special_key = 0
 before start_loop【^[】
 after start_loop【^[】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from v to 
before apply【^[】
 type(c)=【0】
 before 【^[<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from v to 
before mc-detect: from v to 
after mc-detect: from v to 
before mc-input: from v to 
before mc-input2: from v to n
before mc-input3: from v to n
before mc-input4: from v to n
after mc-input: from v to n
 start 【^[】
 mode:【v to n】
 start error 【^[】
 error2 【^[】
 after error 【^[】
 brefore retry : s:char=【^[】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【^W】
 before_getchar【^W】
【l:map】<C-W>       * :q<CR>
【after get esc】
 after_if【^W】
 before_exit【^W】
 after_exit【^W】
is_special_key = 0
 before start_loop【^W】
 after start_loop【^W】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from n to 
before apply【^W】
 type(c)=【0】
 before 【^W<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from n to 
before mc-detect: from n to 
after mc-detect: from n to 
invalid input: from mode n to 
now mode: n
after invalid input: from mode n to 
before mc-input: from n to 
before mc-input2: from n to n
before mc-input3: from n to n
before mc-input4: from n to n
after mc-input: from n to n
 start 【^W】
 mode:【n to n】
 start error 【^W】
 error2 【^W】
 can't be replayed in 1cursors 【^W】
 after error 【^W】
 brefore retry : s:char=【^W】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【^Z】
 before_getchar【^Z】
【l:map】<C-Z>       * u
【after get esc】
 after_if【^Z】
 before_exit【^Z】
 after_exit【^Z】
is_special_key = 0
 before start_loop【^Z】
 after start_loop【^Z】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from n to 
before apply【^Z】
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from n to 
before mc-detect: from n to 
after mc-detect: from n to 
before mc-input: from n to 
before mc-input2: from n to n
before mc-input3: from n to n
before mc-input4: from n to n
after mc-input: from n to n
 start 【^Z】
 mode:【n to n】
 start error 【^Z】
 error2 【^Z】
 after error 【^Z】
 brefore retry : s:char=【^Z】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【^Z】
 before_getchar【^Z】
【l:map】<C-Z>       * u
【after get esc】
 after_if【^Z】
 before_exit【^Z】
 after_exit【^Z】
is_special_key = 0
 before start_loop【^Z】
 after start_loop【^Z】
 type(c)=【0】
 before 【<80><fd>R(multiple-cursors-input)】
 feedkesys s:saved_keys=【】
before apply2 from n to 
before apply【^Z】
 type(c)=【0】
 before 【^Z<80><fd>R(multiple-cursors-apply)】
 feedkesys s:saved_keys=【】
after apply2 from n to 
before mc-detect: from n to 
after mc-detect: from n to 
before mc-input: from n to 
before mc-input2: from n to n
before mc-input3: from n to n
before mc-input4: from n to n
after mc-input: from n to n
 start 【^Z】
 mode:【n to n】
 start error 【^Z】
 error2 【^Z】
 after error 【^Z】
 brefore retry : s:char=【^Z】
 s:retry_keys=【】
 s:saved_keys=【】
 before_if【≈】
 before_getchar【≈】
【after get esc】
 after_if【≈】
 before_exit【≈】